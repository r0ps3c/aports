Fix:

    migen/fhdl/visit.py:86
      /builds/maribu/aports/testing/py3-migen/src/migen-0.9.2/migen/fhdl/visit.py:86: SyntaxWarning: "is" with a literal. Did you mean "=="?
        key=lambda x: -1 if x[0] is "default" else x[0].duid):
    migen/fhdl/visit.py:191
      /builds/maribu/aports/testing/py3-migen/src/migen-0.9.2/migen/fhdl/visit.py:191: SyntaxWarning: "is" with a literal. Did you mean "=="?
        key=lambda x: -1 if x[0] is "default" else x[0].duid)}
    migen/test/test_platform.py:47
--- a/migen/fhdl/visit.py	2024-01-11 16:52:08.195971473 +0100
+++ b/migen/fhdl/visit.py	2024-01-11 16:52:44.862281145 +0100
@@ -83,7 +83,7 @@ class NodeVisitor:
     def visit_Case(self, node):
         self.visit(node.test)
         for v, statements in sorted(node.cases.items(),
-                                    key=lambda x: -1 if x[0] is "default" else x[0].duid):
+                                    key=lambda x: -1 if isinstance(x[0], str) and x[0] == "default" else x[0].duid):
             self.visit(statements)
 
     def visit_Fragment(self, node):
@@ -188,7 +188,7 @@ class NodeTransformer:
     def visit_Case(self, node):
         cases = {v: self.visit(statements)
                  for v, statements in sorted(node.cases.items(),
-                                             key=lambda x: -1 if x[0] is "default" else x[0].duid)}
+                                             key=lambda x: -1 if isinstance(x[0], str) and x[0] == "default" else x[0].duid)}
         r = Case(self.visit(node.test), cases)
         return r
 
