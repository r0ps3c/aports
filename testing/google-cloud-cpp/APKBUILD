# Contributor: Holger Jaekel <holger.jaekel@gmx.de>
# Maintainer: Holger Jaekel <holger.jaekel@gmx.de>
pkgname=google-cloud-cpp
pkgver=2.7.0
_googleapis_commit_sha="d6e9adbf6646748cb41ca6aa61a78a70a1d83ff5"
pkgrel=0
pkgdesc="C++ Client Libraries for Google Cloud Services"
url="https://cloud.google.com/sdk"
arch="all"
license="Apache-2.0"
makedepends="
	abseil-cpp-dev
	c-ares-dev
	cmake
	crc32c-dev
	curl-dev
	grpc-dev
	nlohmann-json
	openssl-dev
	protobuf-dev
	re2-dev
	samurai
	"
checkdepends="benchmark-dev gtest-dev"
subpackages="$pkgname-dev"
source="google-cloud-cpp-$pkgver.tar.gz::https://github.com/googleapis/google-cloud-cpp/archive/refs/tags/v$pkgver.tar.gz
	https://github.com/googleapis/googleapis/archive/$_googleapis_commit_sha.tar.gz
	10-size_t.patch
	20-streamsize.patch
	30-time_t.patch"

_ga_library="
	accessapproval
	accesscontextmanager
	apigateway
	apigeeconnect
	appengine
	artifactregistry
	asset
	assuredworkloads
	automl
	baremetalsolution
	beyondcorp
	bigquery
	bigtable
	billing
	binaryauthorization
	certificatemanager
	channel
	cloudbuild
	composer
	connectors
	contactcenterinsights
	containeranalysis
	container
	datacatalog
	datamigration
	dataplex
	dataproc
	datastream
	debugger
	deploy
	dialogflow_cx
	dialogflow_es
	dlp
	documentai
	edgecontainer
	eventarc
	filestore
	functions
	gameservices
	gkehub
	gkemulticloud
	iam
	iap
	ids
	iot
	kms
	language
	logging
	managedidentities
	memcache
	monitoring
	networkconnectivity
	networkmanagement
	notebooks
	optimization
	orgpolicy
	osconfig
	oslogin
	policytroubleshooter
	privateca
	profiler
	pubsub
	recommender
	redis
	resourcemanager
	resourcesettings
	retail
	run
	scheduler
	secretmanager
	securitycenter
	servicecontrol
	servicedirectory
	servicemanagement
	serviceusage
	shell
	spanner
	speech
	storagetransfer
	storage
	talent
	tasks
	texttospeech
	tpu
	trace
	translate
	videointelligence
	video
	vision
	vmmigration
	vmwareengine
	vpcaccess
	webrisk
	websecurityscanner
	workflows
"

_non_ga_library="
	batch-protos
	batch
	cloud-bigquery-protos
	cloud-common-common-protos
	cloud-dialogflow-v2-protos
	cloud-speech-protos
	cloud-texttospeech-protos
	devtools-cloudtrace-v2-trace-protos
	devtools-cloudtrace-v2-tracing-protos
	devtools-source-v1-source-context-protos
	grafeas-protos
	grpc-utils
	longrunning-operations-protos
	rest-internal
	rest-protobuf-internal
	rpc-code-protos
	rpc-error-details-protos
	rpc-status-protos
"

_api_protos="
	api-annotations
	api-auth
	api-backend
	api-billing
	api-client
	api-config-change
	api-consumer
	api-context
	api-control
	api-distribution
	api-documentation
	api-endpoint
	api-error-reason
	api-field-behavior
	api-httpbody
	api-http
	api-label
	api-launch-stage
	api-logging
	api-log
	api-metric
	api-monitored-resource
	api-monitoring
	api-quota
	api-resource
	api-routing
	api-service
	api-source-info
	api-system-parameter
	api-usage
	api-visibility
"

_type_protos="
	type-calendar-period
	type-color
	type-datetime
	type-date
	type-dayofweek
	type-decimal
	type-expr
	type-fraction
	type-interval
	type-latlng
	type-localized-text
	type-money
	type-month
	type-phone-number
	type-postal-address
	type-quaternion
	type-timeofday
"

for _lib in $_ga_library $_non_ga_library $_api_protos $_type_protos ; do
	subpackages="$subpackages $pkgname-$_lib:library"
done

prepare() {
	default_prepare

	# google-cloud-cpp needs the proto and gRPC definitions for most
	# Google Cloud services. By default these definitions are downloaded
	# from GitHub during the build process. Using the same SHA is the
	# recommended practice when the googleapis are downloaded outside the
	# build process. In this APKBUILD, we download the googleapis as an
	# additional source. In that case we have to make sure that the SHA
	# match.
	local sha256=$(awk '/_GOOGLE_CLOUD_CPP_GOOGLEAPIS_SHA256/ { getline; print $0 }' $builddir/cmake/GoogleapisConfig.cmake | tr -d '") ')
	echo "$sha256 *$srcdir/$_googleapis_commit_sha.tar.gz" | sha256sum -c -
}

build() {
	if [ "$CBUILD" != "$CHOST" ]; then
		CMAKE_CROSSOPTS="-DCMAKE_SYSTEM_NAME=Linux -DCMAKE_HOST_SYSTEM_NAME=Linux"
	fi
	cmake -B build -G Ninja \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_INSTALL_LIBDIR=lib \
		-DBUILD_SHARED_LIBS=True \
		-DCMAKE_BUILD_TYPE=None \
		-DBUILD_TESTING="$(want_check && echo ON || echo OFF)" \
		-DGOOGLE_CLOUD_CPP_ENABLE_EXAMPLES=OFF \
		-DGOOGLE_CLOUD_CPP_ENABLE=__ga_libraries__ \
		-DGOOGLE_CLOUD_CPP_OVERRIDE_GOOGLEAPIS_URL=$srcdir/googleapis-$_googleapis_commit_sha \
		$CMAKE_CROSSOPTS .
	cmake --build build
}

check() {
	cd build
	CTEST_OUTPUT_ON_FAILURE=TRUE ctest -LE "integration-test"
}

package() {
	DESTDIR="$pkgdir" cmake --install build
}

library() {
	local name=${subpkgname#"$pkgname"-}
	pkgdesc="$pkgdesc ($name)"
	amove usr/lib/libgoogle_cloud_cpp_${name//-/_}*
}

sha512sums="
d87b79b64dd224088ae9473a828909313f4c7c64abc815ebf9105eca5ff2dee11199f2fecff2862559b16cd96550bc9f7b7a30299aae7a32fbea1fdce101897d  google-cloud-cpp-2.7.0.tar.gz
6e06abdeaad2374a75c33b55102e871a45774b3402260d653ff755381313e18ca09ed6b5f360ff161eb27d6ca4db7888f76742f35804af96f6bafffce33a76d5  d6e9adbf6646748cb41ca6aa61a78a70a1d83ff5.tar.gz
3a5841ace76cdf0e63ab4326b7e3ddd3aceaf0bbdd380ade8a69f096a1363ecb6d0d78164b1ef5601c3b5d78805ab06d56b67253d9c9cadf9daf3f7ecc31a6a9  10-size_t.patch
c744a374968e226badd265cb1e17c98df7ffcaa36a213deed9868ca7fce5124d89bb49f5ae857e53023f75551b45384474142611b8e1d87d997f719b05568ba1  20-streamsize.patch
8802af63c39d726ac08194851e6a1fbfef39ae59d4cbc6a8fab25b5367576a1dcfbcb408f5c0eb5533accf48dbdc4e954c4a03eeb483d1da01d6632cc1ee3e59  30-time_t.patch
"
