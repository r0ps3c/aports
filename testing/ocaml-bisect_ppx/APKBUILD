# Contributor: rubicon <rubicon@mailo.com>
# Maintainer: Celeste <cielesti@protonmail.com>
maintainer="Celeste <cielesti@protonmail.com>"
pkgname=ocaml-bisect_ppx
_pkgname=bisect_ppx
pkgver=2.8.3
pkgrel=0
pkgdesc="Code coverage for OCaml"
url="https://github.com/aantron/bisect_ppx"
arch="all !riscv64 !loongarch64" # ocaml
license="MIT"
depends_dev="
	$pkgname=$pkgver-r$pkgrel
	ocaml-cmdliner-dev
	ocaml-ppxlib-dev
	"
makedepends="$depends_dev dune ocaml"
options="!check"    # needs ocamlformat
subpackages="$pkgname-dev"
source="$_pkgname-$pkgver.tar.gz::https://github.com/aantron/bisect_ppx/archive/$pkgver.tar.gz"
builddir="$srcdir/$_pkgname-$pkgver"
_ocamldir=usr/lib/ocaml

# 32-bit archs
case "$CARCH" in
	arm*|x86) options="$options textrels" ;;
esac

build() {
	dune build --release --verbose
}

check() {
	dune runtest --build-dir=.testenv --verbose
}

package() {
	dune install \
		--destdir="$pkgdir" \
		--docdir=/.omit
	rm -Rf "$pkgdir"/.omit
}

dev() {
	default_dev

	cd "$pkgdir"

	local path; find $_ocamldir \( \
			-name '*.cmt' -o \
			-name '*.cmti' -o \
			-name '*.ml' -o \
			-name '*.mli' \
		\) | while read -r path
	do
		amove "$path"
	done
}

prepare_py_provides() {
	local datadir="${subpkgdir:-$pkgdir}"
	local pkgbasedir=${pkgbasedir:-"$startdir/pkg"}
	local controldir="$pkgbasedir"/.control.${subpkgname:-$pkgname}

	options_has "!tracedeps" && return 0

	ocaml4-abuild-find provides \
		"$datadir"/usr/lib/ocaml \
		"$controldir" \
		"$pkgver-r$pkgrel"
}

scan_python3_dependency() {
	local controldir="$2" datadir="$3"

	ocaml4-abuild-find requires \
		"$datadir"/usr/lib/ocaml \
		"$controldir"
}

sha512sums="
061f335617ff294a470efd9769adacf7a6fd11f30493aea8717e4b61a79e77a4f610dbf6026f518b35e3ef58bd0ba209bfdf60e589888469bee815d007488beb  bisect_ppx-2.8.3.tar.gz
"
