Patch-Source: https://salsa.debian.org/alteholz/uucp/-/raw/debian/1.07-30/debian/patches/configure.patch
--
Description: even the configure script is affected by the implicit 
             function declaration compile error
Index: uucp/configure.in
===================================================================
--- uucp.orig/configure.in	2024-03-16 19:01:12.807543230 +0100
+++ uucp/configure.in	2024-04-13 00:40:55.345387278 +0200
@@ -278,7 +278,7 @@
 dnl
 AC_MSG_CHECKING(for void)
 AC_CACHE_VAL(uucp_cv_c_void,
-[AC_TRY_COMPILE([], [extern void foo (); (void) exit (0);],
+[AC_TRY_COMPILE([#include <stdlib.h>], [extern void foo (); (void) exit (0);],
 uucp_cv_c_void=yes, uucp_cv_c_void=no)])
 AC_MSG_RESULT($uucp_cv_c_void)
 if test $uucp_cv_c_void = yes; then
@@ -318,7 +318,7 @@
 dnl the right number of arguments.
 AC_MSG_CHECKING(for memset)
 AC_CACHE_VAL(ac_cv_func_memset,
-[AC_TRY_LINK([], [ char *i; int j, k; memset(i, j, k); ],
+[AC_TRY_LINK([#include <string.h>], [ char *i; int j, k; memset(i, j, k); ],
 ac_cv_func_memset=yes, ac_cv_func_memset=no)])
 AC_MSG_RESULT($ac_cv_func_memset)
 if test $ac_cv_func_memset = yes; then
@@ -327,7 +327,7 @@
 dnl
 AC_MSG_CHECKING(for memcmp)
 AC_CACHE_VAL(ac_cv_func_memcmp,
-[AC_TRY_LINK([], [ char *i, *j; int k; memcmp(i, j, k); ],
+[AC_TRY_LINK([#include <string.h>], [ char *i, *j; int k; memcmp(i, j, k); ],
 ac_cv_func_memcmp=yes, ac_cv_func_memcmp=no)])
 AC_MSG_RESULT($ac_cv_func_memcmp)
 if test $ac_cv_func_memcmp = yes; then
@@ -336,7 +336,7 @@
 dnl
 AC_MSG_CHECKING(for memcpy)
 AC_CACHE_VAL(ac_cv_func_memcpy,
-[AC_TRY_LINK([], [ char *i, *j; int k; memcpy(i, j, k); ],
+[AC_TRY_LINK([#include <string.h>], [ char *i, *j; int k; memcpy(i, j, k); ],
 ac_cv_func_memcpy=yes, ac_cv_func_memcpy=no)])
 AC_MSG_RESULT($ac_cv_func_memcpy)
 if test $ac_cv_func_memcpy = yes; then
@@ -373,6 +373,7 @@
 [AC_TRY_RUN([
 #include <sys/types.h>
 #include <sys/timeb.h>
+#include <stdlib.h>
 main ()
 {
   struct timeb s, slast;
