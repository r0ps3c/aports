not a thing in musl anymore: https://git.musl-libc.org/cgit/musl/commit/?id=246f1c811448

diff --git a/cmdline.cc b/cmdline.cc
index 50a1bc8..a9d5741 100644
--- a/cmdline.cc
+++ b/cmdline.cc
@@ -282,10 +282,10 @@ void logParams(nsjconf_t* nsjconf) {
 
 uint64_t parseRLimit(int res, const char* optarg, unsigned long mul) {
 	if (strcasecmp(optarg, "inf") == 0) {
-		return RLIM64_INFINITY;
+		return RLIM_INFINITY;
 	}
-	struct rlimit64 cur;
-	if (getrlimit64(res, &cur) == -1) {
+	struct rlimit cur;
+	if (getrlimit(res, &cur) == -1) {
 		PLOG_F("getrlimit(%d)", res);
 	}
 	if (strcasecmp(optarg, "def") == 0 || strcasecmp(optarg, "soft") == 0) {
diff --git a/config.cc b/config.cc
index bbb2b6d..8d88374 100644
--- a/config.cc
+++ b/config.cc
@@ -58,7 +58,7 @@ static uint64_t configRLimit(
 		return cmdline::parseRLimit(res, "hard", mul);
 	}
 	if (rl == nsjail::RLimit::INF) {
-		return RLIM64_INFINITY;
+		return RLIM_INFINITY;
 	}
 	LOG_F("Unknown rlimit value type for rlimit:%d", res);
 	abort();
diff --git a/contain.cc b/contain.cc
index 5a27cae..e33b01b 100644
--- a/contain.cc
+++ b/contain.cc
@@ -140,55 +140,55 @@ static bool containSetLimits(nsjconf_t* nsjconf) {
 		return true;
 	}
 
-	struct rlimit64 rl;
+	struct rlimit rl;
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_as;
-	if (setrlimit64(RLIMIT_AS, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_AS, %" PRIu64 ")", nsjconf->rl_as);
+	if (setrlimit(RLIMIT_AS, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_AS, %" PRIu64 ")", nsjconf->rl_as);
 		return false;
 	}
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_core;
-	if (setrlimit64(RLIMIT_CORE, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_CORE, %" PRIu64 ")", nsjconf->rl_core);
+	if (setrlimit(RLIMIT_CORE, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_CORE, %" PRIu64 ")", nsjconf->rl_core);
 		return false;
 	}
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_cpu;
-	if (setrlimit64(RLIMIT_CPU, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_CPU, %" PRIu64 ")", nsjconf->rl_cpu);
+	if (setrlimit(RLIMIT_CPU, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_CPU, %" PRIu64 ")", nsjconf->rl_cpu);
 		return false;
 	}
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_fsize;
-	if (setrlimit64(RLIMIT_FSIZE, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_FSIZE, %" PRIu64 ")", nsjconf->rl_fsize);
+	if (setrlimit(RLIMIT_FSIZE, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_FSIZE, %" PRIu64 ")", nsjconf->rl_fsize);
 		return false;
 	}
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_nofile;
-	if (setrlimit64(RLIMIT_NOFILE, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_NOFILE, %" PRIu64 ")", nsjconf->rl_nofile);
+	if (setrlimit(RLIMIT_NOFILE, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_NOFILE, %" PRIu64 ")", nsjconf->rl_nofile);
 		return false;
 	}
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_nproc;
-	if (setrlimit64(RLIMIT_NPROC, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_NPROC, %" PRIu64 ")", nsjconf->rl_nproc);
+	if (setrlimit(RLIMIT_NPROC, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_NPROC, %" PRIu64 ")", nsjconf->rl_nproc);
 		return false;
 	}
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_stack;
-	if (setrlimit64(RLIMIT_STACK, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_STACK, %" PRIu64 ")", nsjconf->rl_stack);
+	if (setrlimit(RLIMIT_STACK, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_STACK, %" PRIu64 ")", nsjconf->rl_stack);
 		return false;
 	}
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_mlock;
-	if (setrlimit64(RLIMIT_MEMLOCK, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_MEMLOCK, %" PRIu64 ")", nsjconf->rl_mlock);
+	if (setrlimit(RLIMIT_MEMLOCK, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_MEMLOCK, %" PRIu64 ")", nsjconf->rl_mlock);
 		return false;
 	}
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_rtpr;
-	if (setrlimit64(RLIMIT_RTPRIO, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_RTPRIO, %" PRIu64 ")", nsjconf->rl_rtpr);
+	if (setrlimit(RLIMIT_RTPRIO, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_RTPRIO, %" PRIu64 ")", nsjconf->rl_rtpr);
 		return false;
 	}
 	rl.rlim_cur = rl.rlim_max = nsjconf->rl_msgq;
-	if (setrlimit64(RLIMIT_MSGQUEUE, &rl) == -1) {
-		PLOG_E("setrlimit64(0, RLIMIT_MSGQUEUE , %" PRIu64 ")", nsjconf->rl_msgq);
+	if (setrlimit(RLIMIT_MSGQUEUE, &rl) == -1) {
+		PLOG_E("setrlimit(0, RLIMIT_MSGQUEUE , %" PRIu64 ")", nsjconf->rl_msgq);
 		return false;
 	}
 	return true;
