diff --git a/src/cpp/synthesize.hpp b/src/cpp/synthesize.hpp
index ef61aef..75fc517 100644
--- a/src/cpp/synthesize.hpp
+++ b/src/cpp/synthesize.hpp
@@ -119,11 +119,11 @@ void synthesize(SynthesisConfig &synthesisConfig, ModelSession &session,
 
   // Clean up
   for (size_t i = 0; i < outputTensors.size(); i++) {
-    Ort::OrtRelease(outputTensors[i].release());
+    Ort::detail::OrtRelease(outputTensors[i].release());
   }
 
   for (size_t i = 0; i < inputTensors.size(); i++) {
-    Ort::OrtRelease(inputTensors[i].release());
+    Ort::detail::OrtRelease(inputTensors[i].release());
   }
 }
 } // namespace larynx
diff --git a/src/cpp/CMakeLists.txt b/src/cpp/CMakeLists.txt
index 4767b97..50cb747 100644
--- a/src/cpp/CMakeLists.txt
+++ b/src/cpp/CMakeLists.txt
@@ -9,10 +9,12 @@ set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
 ADD_EXECUTABLE(larynx main.cpp)
 
-string(APPEND CMAKE_CXX_FLAGS " -Wall -Wextra -Wl,-rpath,'$ORIGIN'")
+string(APPEND CMAKE_CXX_FLAGS " -Wall -Wextra")
 string(APPEND CMAKE_C_FLAGS " -Wall -Wextra")
 
 find_package(PkgConfig)
+
+pkg_check_modules(ONNXRUNTIME REQUIRED libonnxruntime)
 pkg_check_modules(ESPEAK_NG REQUIRED espeak-ng<2)
 
 # https://github.com/espeak-ng/pcaudiolib
@@ -30,17 +32,16 @@ set(ONNXRUNTIME_ROOTDIR "/usr/local/include/onnxruntime")
 
 target_link_libraries(larynx
                       onnxruntime
-                      -static-libgcc -static-libstdc++
                       ${ESPEAK_NG_LIBRARIES}
                       ${PCAUDIO_LIBRARIES})
 
 target_link_directories(larynx PUBLIC
                         ${ESPEAK_NG_LIBRARY_DIRS}
-                        ${ONNXRUNTIME_ROOTDIR}/lib)
+                        ${ONNXRUNTIME_LIBRARY_DIRS})
 
 target_include_directories(larynx PUBLIC
-                           ${ONNXRUNTIME_ROOTDIR}/include
-                           ${ESPEAK_NG_INCLUDE_DIRS})
+                           ${ESPEAK_NG_INCLUDE_DIRS}
+                           ${ONNXRUNTIME_INCLUDE_DIRS})
 
 target_compile_options(larynx PUBLIC
                        ${ESPEAK_NG_CFLAGS_OTHER})
