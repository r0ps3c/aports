--- a/front/edit.go
+++ b/front/edit.go
@@ -25,7 +25,6 @@
 	"github.com/dimkr/tootik/front/text"
 	"github.com/dimkr/tootik/front/text/plain"
 	"github.com/dimkr/tootik/outbox"
-	"math"
 	"net/url"
 	"path/filepath"
 	"time"
@@ -98,7 +97,7 @@
 		lastEditTime = *note.Updated
 	}
 
-	canEdit := lastEditTime.Add(time.Minute * time.Duration(math.Pow(4, float64(edits))))
+	canEdit := lastEditTime.Add(30 * time.Second)
 	if time.Now().Before(canEdit) {
 		r.Log.Warn("Throttled request to edit post", "note", note.ID, "can", canEdit)
 		w.Status(40, "Please try again later")
--- a/front/post.go
+++ b/front/post.go
@@ -61,15 +61,9 @@
 		return
 	}
 
-	if today.Valid && today.Int64 >= 30 {
-		r.Log.Warn("User has exceeded the daily posts quota", "posts", today.Int64)
-		w.Status(40, "Please wait before posting again")
-		return
-	}
-
 	if today.Valid && last.Valid {
 		t := time.Unix(last.Int64, 0)
-		interval := max(1, time.Duration(today.Int64/2)) * time.Minute
+		interval := 30 * time.Second
 		if now.Sub(t) < interval {
 			r.Log.Warn("User is posting too frequently", "last", t, "can", t.Add(interval))
 			w.Status(40, "Please wait before posting again")
--- a/front/register.go
+++ b/front/register.go
@@ -29,7 +29,7 @@
 	"time"
 )
 
-const registrationInterval = time.Hour
+const registrationInterval = 5 * time.Minute
 
 var userNameRegex = regexp.MustCompile(`^[a-zA-Z0-9-_]{4,32}$`)
 
--- a/test/register_test.go
+++ b/test/register_test.go
@@ -552,7 +552,7 @@
 	}
 }
 
-func TestRegister_Throttling30Minutes(t *testing.T) {
+func TestRegister_Throttling3Minutes(t *testing.T) {
 	assert := assert.New(t)
 
 	dbPath := fmt.Sprintf("/tmp/%s.sqlite3?_journal_mode=WAL", t.Name())
@@ -637,7 +637,7 @@
 
 		assert.Regexp(data.pattern, string(resp))
 
-		_, err = db.Exec(`update persons set inserted = unixepoch() - 1800`)
+		_, err = db.Exec(`update persons set inserted = unixepoch() - 180`)
 		assert.NoError(err)
 	}
 }
