--- a/a9d5a42637966f6ae1fc911366eec66bd3678332.patch
+++ b/a9d5a42637966f6ae1fc911366eec66bd3678332.patch
@@ -5232,9 +5232,9 @@ index d3853ae966be..b023eac98942 100644
 @@ -149,7 +149,7 @@ endif
  # Whether to include GHCi in the compiler.  Depends on whether the RTS linker
  # has support for this OS/ARCH combination.
- OsSupportsGHCi=$(strip $(patsubst $(TargetOS_CPP), YES, $(findstring $(TargetOS_CPP), mingw32 linux solaris2 freebsd dragonfly netbsd openbsd darwin kfreebsdgnu wasi)))
--ArchSupportsGHCi=$(strip $(patsubst $(TargetArch_CPP), YES, $(findstring $(TargetArch_CPP), i386 x86_64 powerpc powerpc64 powerpc64le sparc sparc64 arm aarch64 riscv64 wasm32)))
-+ArchSupportsGHCi=$(strip $(patsubst $(TargetArch_CPP), YES, $(findstring $(TargetArch_CPP), i386 x86_64 powerpc powerpc64 powerpc64le sparc sparc64 arm aarch64 riscv64 wasm32 loongarch64)))
+ OsSupportsGHCi=$(strip $(patsubst $(TargetOS_CPP), YES, $(findstring $(TargetOS_CPP), mingw32 linux solaris2 freebsd dragonfly netbsd openbsd darwin kfreebsdgnu)))
+-ArchSupportsGHCi=$(strip $(patsubst $(TargetArch_CPP), YES, $(findstring $(TargetArch_CPP), i386 x86_64 powerpc powerpc64 powerpc64le sparc sparc64 arm aarch64 riscv64)))
++ArchSupportsGHCi=$(strip $(patsubst $(TargetArch_CPP), YES, $(findstring $(TargetArch_CPP), i386 x86_64 powerpc powerpc64 powerpc64le sparc sparc64 arm aarch64 riscv64 loongarch64)))
  
  ifeq "$(OsSupportsGHCi)$(ArchSupportsGHCi)" "YESYES"
  GhcWithInterpreter=YES
@@ -5279,19 +5279,6 @@ index 13913709c9f4..933428ad3ab9 100644
      esac
  
      AC_MSG_RESULT([done])
-diff --git a/testsuite/tests/rts/all.T b/testsuite/tests/rts/all.T
-index 96b93c72e3db..5f3fbf3176bd 100644
---- a/testsuite/tests/rts/all.T
-+++ b/testsuite/tests/rts/all.T
-@@ -71,6 +71,8 @@ test('divbyzero',
-       # Apparently the output can be different on different
-       # Linux setups, so just ignore it. As long as we get
-       # the right exit code we're OK.
-+      when(arch('loongarch64'), skip),
-+      # LoongArch64 has no exception for this, too.
-       when(opsys('linux'), ignore_stderr),
-       # On OpenBSD the output varies depending on ulimit, exit code is enough.
-       when(opsys('openbsd'), ignore_stderr),
 -- 
 GitLab
 
