diff --git a/CMakeLists.txt b/CMakeLists.txt
index fbb7e3e..4eafefd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -126,10 +126,12 @@ set (COMPIZ_REQUIRES
     libxslt
     glib-2.0
     gio-2.0
-    glibmm-2.4
+    glibmm-2.68
     "libstartup-notification-1.0 >= 0.7"
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 set (DECORATION_REQUIRES "xrender >= 0.9.3")
 
 compiz_pkg_check_modules (COMPIZ REQUIRED ${COMPIZ_REQUIRES})
diff --git a/plugins/decor/src/clip-groups/CMakeLists.txt b/plugins/decor/src/clip-groups/CMakeLists.txt
index 0c267d9..4a97cd2 100644
--- a/plugins/decor/src/clip-groups/CMakeLists.txt
+++ b/plugins/decor/src/clip-groups/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/plugins/decor/src/pixmap-requests/CMakeLists.txt b/plugins/decor/src/pixmap-requests/CMakeLists.txt
index 0d0db14..59600c9 100644
--- a/plugins/decor/src/pixmap-requests/CMakeLists.txt
+++ b/plugins/decor/src/pixmap-requests/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/plugins/place/src/constrain-to-workarea/CMakeLists.txt b/plugins/place/src/constrain-to-workarea/CMakeLists.txt
index 80c9c4b..70e16cf 100644
--- a/plugins/place/src/constrain-to-workarea/CMakeLists.txt
+++ b/plugins/place/src/constrain-to-workarea/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/plugins/place/src/screen-size-change/CMakeLists.txt b/plugins/place/src/screen-size-change/CMakeLists.txt
index 6f52e49..44c53ce 100644
--- a/plugins/place/src/screen-size-change/CMakeLists.txt
+++ b/plugins/place/src/screen-size-change/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/plugins/place/src/smart/CMakeLists.txt b/plugins/place/src/smart/CMakeLists.txt
index 24e66fd..8cfbcc7 100644
--- a/plugins/place/src/smart/CMakeLists.txt
+++ b/plugins/place/src/smart/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/src/point/CMakeLists.txt b/src/point/CMakeLists.txt
index 207b2e5..072e230 100644
--- a/src/point/CMakeLists.txt
+++ b/src/point/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${compiz_SOURCE_DIR}/include
   ${Boost_INCLUDE_DIRS}
diff --git a/src/rect/CMakeLists.txt b/src/rect/CMakeLists.txt
index 336235b..76246a4 100644
--- a/src/rect/CMakeLists.txt
+++ b/src/rect/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/src/timer/CMakeLists.txt b/src/timer/CMakeLists.txt
index 03bb9b6..f3b98dc 100644
--- a/src/timer/CMakeLists.txt
+++ b/src/timer/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules(
   GLIBMM 
   REQUIRED
-  glibmm-2.4 
+  glibmm-2.68 
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES(  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/src/window/constrainment/CMakeLists.txt b/src/window/constrainment/CMakeLists.txt
index 20a0e95..3dfe69b 100644
--- a/src/window/constrainment/CMakeLists.txt
+++ b/src/window/constrainment/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/src/window/extents/CMakeLists.txt b/src/window/extents/CMakeLists.txt
index 9e26a7b..5e28664 100644
--- a/src/window/extents/CMakeLists.txt
+++ b/src/window/extents/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/src/window/geometry-saver/CMakeLists.txt b/src/window/geometry-saver/CMakeLists.txt
index 6d5e12c..3dedb42 100644
--- a/src/window/geometry-saver/CMakeLists.txt
+++ b/src/window/geometry-saver/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/src/window/geometry/CMakeLists.txt b/src/window/geometry/CMakeLists.txt
index 24bdb21..cda3798 100644
--- a/src/window/geometry/CMakeLists.txt
+++ b/src/window/geometry/CMakeLists.txt
@@ -1,9 +1,11 @@
 pkg_check_modules (
   GLIBMM
   REQUIRED
-  glibmm-2.4 glib-2.0
+  glibmm-2.68 glib-2.0
 )
 
+set (CMAKE_CXX_STANDARD 17)
+
 INCLUDE_DIRECTORIES (  
   ${CMAKE_CURRENT_SOURCE_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/tests/integration/glib/CMakeLists.txt b/tests/integration/glib/CMakeLists.txt
index 48d4e12..80a5fda 100644
--- a/tests/integration/glib/CMakeLists.txt
+++ b/tests/integration/glib/CMakeLists.txt
@@ -1,4 +1,6 @@
-pkg_check_modules (COMPIZ_GLIB_INTEGRATION_TEST glibmm-2.4)
+pkg_check_modules (COMPIZ_GLIB_INTEGRATION_TEST glibmm-2.68)
+
+set (CMAKE_CXX_STANDARD 17)
 
 if (COMPIZ_GLIB_INTEGRATION_TEST_FOUND)
 
diff --git a/src/timer/include/core/timer.h b/src/timer/include/core/timer.h
index c4edb12..fbc1cd6 100644
--- a/src/timer/include/core/timer.h
+++ b/src/timer/include/core/timer.h
@@ -28,6 +28,8 @@
 
 #include <boost/function.hpp>
 #include <sys/time.h>
+
+#undef PREFIX
 #include <glibmm/main.h>
 
 class CompTimeoutSource;
diff --git a/src/eventsource.cpp b/src/eventsource.cpp
index 1892cb4..4a7c4b0 100644
--- a/src/eventsource.cpp
+++ b/src/eventsource.cpp
@@ -45,7 +45,7 @@ CompEventSource::CompEventSource (Display *dpy, int fd) :
     mConnectionFD (fd)
 {
     mPollFD.set_fd (mConnectionFD);
-    mPollFD.set_events (Glib::IO_IN);
+    mPollFD.set_events (Glib::IOCondition::IO_IN);
 
     set_priority (G_PRIORITY_DEFAULT);
     add_poll (mPollFD);
@@ -75,7 +75,7 @@ CompEventSource::prepare (int &timeout)
 bool
 CompEventSource::check ()
 {
-    if (mPollFD.get_revents () & Glib::IO_IN)
+    if ((mPollFD.get_revents () & Glib::IOCondition::IO_IN) == Glib::IOCondition::IO_IN)
 	return XPending (mDpy);
 
     return false;
diff --git a/src/screen.cpp b/src/screen.cpp
index 89832e0..1476d69 100644
--- a/src/screen.cpp
+++ b/src/screen.cpp
@@ -312,15 +312,15 @@ cps::EventManager::addWatchFd (int             fd,
     memset (&gEvents, 0, sizeof (Glib::IOCondition));
 
     if (events & POLLIN)
-	gEvents |= Glib::IO_IN;
+	gEvents |= Glib::IOCondition::IO_IN;
     if (events & POLLOUT)
-	gEvents |= Glib::IO_OUT;
+	gEvents |= Glib::IOCondition::IO_OUT;
     if (events & POLLPRI)
-	gEvents |= Glib::IO_PRI;
+	gEvents |= Glib::IOCondition::IO_PRI;
     if (events & POLLERR)
-	gEvents |= Glib::IO_ERR;
+	gEvents |= Glib::IOCondition::IO_ERR;
     if (events & POLLHUP)
-	gEvents |= Glib::IO_HUP;
+	gEvents |= Glib::IOCondition::IO_HUP;
 
     Glib::RefPtr<CompWatchFd> watchFd = CompWatchFd::create (fd, gEvents, callBack);
 
@@ -393,17 +393,17 @@ CompWatchFd::internalCallback (Glib::IOCondition events)
 {
     short int revents = 0;
 
-    if (events & Glib::IO_IN)
+    if ((events & Glib::IOCondition::IO_IN) == Glib::IOCondition::IO_IN)
 	revents |= POLLIN;
-    if (events & Glib::IO_OUT)
+    if ((events & Glib::IOCondition::IO_OUT) == Glib::IOCondition::IO_OUT)
 	revents |= POLLOUT;
-    if (events & Glib::IO_PRI)
+    if ((events & Glib::IOCondition::IO_PRI) == Glib::IOCondition::IO_PRI)
 	revents |= POLLPRI;
-    if (events & Glib::IO_ERR)
+    if ((events & Glib::IOCondition::IO_ERR) == Glib::IOCondition::IO_ERR)
 	revents |= POLLERR;
-    if (events & Glib::IO_HUP)
+    if ((events & Glib::IOCondition::IO_HUP) == Glib::IOCondition::IO_HUP)
 	revents |= POLLHUP;
-    if (events & Glib::IO_NVAL)
+    if ((events & Glib::IOCondition::IO_NVAL) == Glib::IOCondition::IO_NVAL)
 	return false;
 
     mExecuting = true;
diff --git a/tests/integration/glib/glib_integration_test.cpp b/tests/integration/glib/glib_integration_test.cpp
index 4298545..29ede50 100644
--- a/tests/integration/glib/glib_integration_test.cpp
+++ b/tests/integration/glib/glib_integration_test.cpp
@@ -139,7 +139,7 @@ TEST_F (GLibSourceDestroyIntegration, EventSourceGSourceDestroy)
 
 TEST_F (GLibSourceDestroyIntegration, FdSourceGSourceDestroy)
 {
-    Glib::IOCondition iocond = Glib::IO_IN;
+    Glib::IOCondition iocond = Glib::IOCondition::IO_IN;
     int fd = 0;
     FdWatchCallBack cb;
     Glib::RefPtr<StubWatchFd> sts(new StubWatchFd (&die, fd, iocond, cb));
diff --git a/src/eventsource.cpp b/src/eventsource.cpp
index 6898d74..440d66c 100644
--- a/src/eventsource.cpp
+++ b/src/eventsource.cpp
@@ -34,7 +34,7 @@ CompEventSource::create ()
 }
 
 sigc::connection
-CompEventSource::connect (const sigc::slot <bool> &slot)
+CompEventSource::connect (const sigc::slot <bool()> &slot)
 {
     return connect_generic (slot);
 }
@@ -51,7 +51,7 @@ CompEventSource::CompEventSource (Display *dpy, int fd) :
     add_poll (mPollFD);
     set_can_recurse (true);
 
-    connect (sigc::mem_fun <bool, CompEventSource> (this, &CompEventSource::callback));
+    connect (sigc::mem_fun <bool, CompEventSource> (*this, &CompEventSource::callback));
 }
 
 CompEventSource::~CompEventSource ()
@@ -84,5 +84,5 @@ CompEventSource::check ()
 bool
 CompEventSource::dispatch (sigc::slot_base *slot)
 {
-    return (*static_cast <sigc::slot <bool> *> (slot)) ();
+    return (*static_cast <sigc::slot <bool()> *> (slot)) ();
 }
diff --git a/src/privateeventsource.h b/src/privateeventsource.h
index ed9a0c1..12c551c 100644
--- a/src/privateeventsource.h
+++ b/src/privateeventsource.h
@@ -39,7 +39,7 @@ class CompEventSource:
 
 	static Glib::RefPtr<CompEventSource> create ();
 
-	sigc::connection connect (const sigc::slot <bool> &slot);
+	sigc::connection connect (const sigc::slot <bool()> &slot);
 
     protected:
 
diff --git a/src/screen.cpp b/src/screen.cpp
index 556ae56..1faf200 100644
--- a/src/screen.cpp
+++ b/src/screen.cpp
@@ -278,8 +278,7 @@ CompWatchFd::CompWatchFd (int		    fd,
     mForceFail (false),
     mExecuting (false)
 {
-    connect (sigc::mem_fun <Glib::IOCondition, bool>
-	     (this, &CompWatchFd::internalCallback));
+    connect (sigc::mem_fun(*this, &CompWatchFd::internalCallback));
 }
 
 CompWatchFd::~CompWatchFd ()
diff --git a/src/timer/src/privatetimeoutsource.h b/src/timer/src/privatetimeoutsource.h
index 5e18d08..dab743c 100644
--- a/src/timer/src/privatetimeoutsource.h
+++ b/src/timer/src/privatetimeoutsource.h
@@ -38,7 +38,7 @@ class CompTimeoutSource :
 	virtual ~CompTimeoutSource ();
 
 	static Glib::RefPtr<CompTimeoutSource> create (Glib::RefPtr <Glib::MainContext> &ctx);
-	sigc::connection connect (const sigc::slot <bool> &slot);
+	sigc::connection connect (const sigc::slot <bool()> &slot);
 
     protected:
 
diff --git a/src/timer/src/timer.cpp b/src/timer/src/timer.cpp
index 5288b81..fe778ad 100644
--- a/src/timer/src/timer.cpp
+++ b/src/timer/src/timer.cpp
@@ -56,7 +56,7 @@ CompTimeoutSource::CompTimeoutSource (Glib::RefPtr <Glib::MainContext> &ctx) :
     set_priority (G_PRIORITY_DEFAULT);
     attach (ctx);
 
-    connect (sigc::mem_fun <bool, CompTimeoutSource> (this, &CompTimeoutSource::callback));
+    connect (sigc::mem_fun <bool, CompTimeoutSource> (*this, &CompTimeoutSource::callback));
 }
 
 CompTimeoutSource::~CompTimeoutSource ()
@@ -64,7 +64,7 @@ CompTimeoutSource::~CompTimeoutSource ()
 }
 
 sigc::connection
-CompTimeoutSource::connect (const sigc::slot <bool> &slot)
+CompTimeoutSource::connect (const sigc::slot <bool()> &slot)
 {
     return connect_generic (slot);
 }
@@ -130,7 +130,7 @@ CompTimeoutSource::check ()
 bool
 CompTimeoutSource::dispatch (sigc::slot_base *slot)
 {
-    (*static_cast <sigc::slot <bool> *> (slot)) ();
+    (*static_cast <sigc::slot <bool()> *> (slot)) ();
     return true;
 }
 
