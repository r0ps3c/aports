--- a/pict-rs.toml
+++ b/pict-rs.toml
@@ -3,7 +3,7 @@
 ## Optional: pict-rs binding address
 # environment variable: PICTRS__SERVER__ADDRESS
 # default: 0.0.0.0:8080
-address = '0.0.0.0:8080'
+address = '127.0.0.1:8080'
 
 ## Optional: pict-rs worker id
 # environment variable PICTRS__SERVER__WORKER_ID
@@ -53,7 +53,7 @@
 
 
 ## Console configuration
-[tracing.console]
+#[tracing.console]
 ## Optional: console address
 # environment variable: PICTRS__TRACING__CONSOLE__ADDRESS
 # default: empty
@@ -82,7 +82,7 @@
 # ```
 # $ tokio-console http://localhost:6669
 # ```
-address = '0.0.0.0:6669'
+#address = '0.0.0.0:6669'
 
 ## Optional: console buffer capacity
 # environment variable: PICTRS__TRACING__CONSOLE__BUFFER_CAPACITY
@@ -90,11 +90,11 @@
 #
 # This is the number of _events_ to buffer, not the number of bytes. In reality, the amount of
 # RAM used will be significatnly larger (in bytes) than the buffer capacity (in events)
-buffer_capacity = 102400
+#buffer_capacity = 102400
 
 
 ## OpenTelemetry configuration
-[tracing.opentelemetry]
+#[tracing.opentelemetry]
 ## Optional: url for exporting otlp traces
 # environment variable: PICTRS__TRACING__OPENTELEMETRY__URL
 # default: empty
@@ -103,27 +103,27 @@
 # When set, pict-rs will export OpenTelemetry traces to the provided URL. If the URL is
 # inaccessible, this can cause performance degredation in pict-rs, so it is best left unset unless
 # you have an OpenTelemetry collector
-url = 'http://localhost:4317/'
+#url = 'http://localhost:4317/'
 
 ## Optional: name to relate OpenTelemetry traces
 # environment variable: PICTRS__TRACING__OPENTELEMETRY__SERVICE_NAME
 # default: pict-rs
-service_name = 'pict-rs'
+#service_name = 'pict-rs'
 
 ## Optional: trace level to export
 # environment variable: PICTRS__TRACING__OPENTELEMETRY__TARGETS
 # default: info
 #
 # Follows the same format as RUST_LOG
-targets = 'info'
+#targets = 'info'
 
 
 ## Configuration for migrating from pict-rs 0.2
-[old_db]
+#[old_db]
 ## Optional: path to old pict-rs directory
 # environment variable: PICTRS__OLD_DB__PATH
 # default: /mnt
-path = '/mnt'
+#path = '/mnt'
 
 
 ## Media Processing Configuration
@@ -263,7 +263,7 @@
 ## Optional: path to sled repository
 # environment variable: PICTRS__REPO__PATH
 # default: /mnt/sled-repo
-path = '/mnt/sled-repo'
+path = '/var/lib/pict-rs/sled-repo'
 
 ## Optional: in-memory cache capacity for sled data (in bytes)
 # environment variable: PICTRS__REPO__CACHE_CAPACITY
@@ -276,17 +276,17 @@
 #
 # Used in combination with the /internal/export endpoint to dump the current sled database into a
 # new file. This can be helpful for backing up a running pict-rs server.
-export_path = "/mnt/exports"
+export_path = "/var/lib/pict-rs/exports"
 
 
 ## Media storage configuration
-[store]
+#[store]
 ## Optional: type of media storage to use
 # environment variable: PICTRS__STORE__TYPE
 # default: filesystem
 #
 # available options: filesystem, object_storage
-type = 'object_storage'
+#type = 'object_storage'
 
 ## Required: endpoint at which the object storage exists
 # environment variable: PICTRS__STORE__ENDPOINT
@@ -295,7 +295,7 @@
 # examples:
 # - `http://localhost:9000` # minio
 # - `https://s3.dualstack.eu-west-1.amazonaws.com` # s3
-endpoint = 'http://minio:9000'
+#endpoint = 'http://minio:9000'
 
 ## Optional: How to format object storage requests
 # environment variable: PICTRS__STORE__USE_PATH_STYLE
@@ -305,34 +305,34 @@
 # When false, objects will be fetched from http{s}://{bucket_name}.{endpoint}:{port}/{object}
 #
 # Set to true when using minio
-use_path_style = false
+#use_path_style = false
 
 ## Required: object storage bucket name
 # environment variable: PICTRS__STORE__BUCKET_NAME
 # default: empty
-bucket_name = 'pict-rs'
+#bucket_name = 'pict-rs'
 
 ## Required: object storage region
 # environment variable: PICTRS__STORE__REGION
 # default: empty
 #
 # When using minio, this can be set to `minio`
-region = 'minio'
+#region = 'minio'
 
 ## Required: object storage access key
 # environment variable: PICTRS__STORE__ACCESS_KEY
 # default: empty
-access_key = 'ACCESS_KEY'
+#access_key = 'ACCESS_KEY'
 
 ## Required: object storage secret key
 # environment variable: PICTRS__STORE__SECRET_KEY
 # default: empty
-secret_key = 'SECRET_KEY'
+#secret_key = 'SECRET_KEY'
 
 ## Optional: object storage session token
 # environment variable: PICTRS__STORE__SESSION_TOKEN
 # default: empty
-session_token = 'SESSION_TOKEN'
+#session_token = 'SESSION_TOKEN'
 
 ## Optional: set how long object storage signatures are valid for (in seconds)
 # environment variable: PICTRS__STORE__SIGNATURE_EXPIRATION
@@ -340,7 +340,7 @@
 #
 # This can be useful if your object storage might take a while to process requests. It should not be
 # increased more than needed to prevent replay attacks.
-signature_expiration = 15
+#signature_expiration = 15
 
 ## Optional: set how long pict-rs will wait (in seconds) for a response from object storage
 # environment variable: PICTRS__STORE__CLIENT_TIMEOUT
@@ -348,19 +348,19 @@
 #
 # This value is the total wait time, and not additional wait time on top of the
 # signature_expiration.
-client_timeout = 30
+#client_timeout = 30
 
 ## Filesystem media storage example
 # ## Media storage configuration
-# [store]
+[store]
 # ## Optional: type of media storage to use
 # # environment variable: PICTRS__STORE__TYPE
 # # default: filesystem
 # #
 # # available options: filesystem, object_storage
-# type = 'filesystem'
+type = 'filesystem'
 #
 # ## Optional: path to uploaded media
 # # environment variable: PICTRS__STORE__PATH
 # # default: /mnt/files
-# path = '/mnt/files'
+path = '/var/lib/pict-rs/files'
