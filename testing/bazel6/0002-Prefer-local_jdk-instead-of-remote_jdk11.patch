diff --git a/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java b/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java
index 8e81e124e9..cccf832d94 100644
--- a/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java
+++ b/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java
@@ -535,7 +535,7 @@ public class JavaOptions extends FragmentOptions {
 
   @Option(
       name = "tool_java_runtime_version",
-      defaultValue = "remotejdk_11",
+      defaultValue = "local_jdk",
       documentationCategory = OptionDocumentationCategory.UNCATEGORIZED,
       effectTags = {OptionEffectTag.UNKNOWN},
       help = "The Java runtime version used to execute tools during the build")
diff --git a/tools/jdk/BUILD.tools b/tools/jdk/BUILD.tools
index bd756ba8a3..bd4c517984 100644
--- a/tools/jdk/BUILD.tools
+++ b/tools/jdk/BUILD.tools
@@ -298,7 +298,7 @@ alias(
 
 alias(
     name = "host_jdk",
-    actual = ":remote_jdk11",
+    actual = "@local_jdk//:jdk",
 )
 
 bootclasspath(
diff --git a/tools/jdk/default_java_toolchain.bzl b/tools/jdk/default_java_toolchain.bzl
index 7251e79068..46de360f75 100644
--- a/tools/jdk/default_java_toolchain.bzl
+++ b/tools/jdk/default_java_toolchain.bzl
@@ -84,7 +84,7 @@ DEFAULT_TOOLCHAIN_CONFIGURATION = dict(
         # Turbine is not a worker and parallel GC is faster for short-lived programs.
         "-XX:+UseParallelGC",
     ],
-    java_runtime = "@bazel_tools//tools/jdk:remote_jdk11",
+    java_runtime = "@local_jdk//:jdk",
 )
 
 # The 'vanilla' toolchain is an unsupported alternative to the default.
@@ -119,9 +119,9 @@ PREBUILT_TOOLCHAIN_CONFIGURATION = dict(
         # Turbine is not a worker and parallel GC is faster for short-lived programs.
         "-XX:+UseParallelGC",
     ],
-    ijar = ["@bazel_tools//tools/jdk:ijar_prebuilt_binary"],
-    singlejar = ["@bazel_tools//tools/jdk:prebuilt_singlejar"],
-    java_runtime = "@bazel_tools//tools/jdk:remote_jdk11",
+    ijar = ["@remote_java_tools//:ijar_cc_binary"],
+    singlejar = ["@remote_java_tools//:singlejar_cc_bin"],
+    java_runtime = "@local_jdk//:jdk",
 )
 
 # The new toolchain is using all the tools from sources.
@@ -136,7 +136,7 @@ NONPREBUILT_TOOLCHAIN_CONFIGURATION = dict(
     ],
     ijar = ["@remote_java_tools//:ijar_cc_binary"],
     singlejar = ["@remote_java_tools//:singlejar_cc_bin"],
-    java_runtime = "@bazel_tools//tools/jdk:remote_jdk11",
+    java_runtime = "@local_jdk//:jdk",
 )
 
 def default_java_toolchain(name, configuration = DEFAULT_TOOLCHAIN_CONFIGURATION, toolchain_definition = True, **kwargs):
