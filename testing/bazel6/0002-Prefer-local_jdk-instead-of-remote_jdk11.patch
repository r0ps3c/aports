diff --git a/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java b/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java
index 8e81e124e9..cccf832d94 100644
--- a/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java
+++ b/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java
@@ -535,7 +535,7 @@ public class JavaOptions extends FragmentOptions {
 
   @Option(
       name = "tool_java_runtime_version",
-      defaultValue = "remotejdk_11",
+      defaultValue = "local_jdk",
       documentationCategory = OptionDocumentationCategory.UNCATEGORIZED,
       effectTags = {OptionEffectTag.UNKNOWN},
       help = "The Java runtime version used to execute tools during the build")
diff --git a/tools/jdk/BUILD.tools b/tools/jdk/BUILD.tools
index 83e1a5039b..700f55c86e 100644
--- a/tools/jdk/BUILD.tools
+++ b/tools/jdk/BUILD.tools
@@ -332,7 +332,7 @@ alias(
 
 alias(
     name = "host_jdk",
-    actual = ":remote_jdk11",
+    actual = "@local_jdk//:jdk",
 )
 
 bootclasspath(
diff --git a/tools/jdk/default_java_toolchain.bzl b/tools/jdk/default_java_toolchain.bzl
index 17f450dde5..9784760b8b 100644
--- a/tools/jdk/default_java_toolchain.bzl
+++ b/tools/jdk/default_java_toolchain.bzl
@@ -95,7 +95,7 @@ DEFAULT_TOOLCHAIN_CONFIGURATION = dict(
         # Turbine is not a worker and parallel GC is faster for short-lived programs.
         "-XX:+UseParallelGC",
     ],
-    java_runtime = Label("//tools/jdk:remote_jdk11"),
+    java_runtime = Label("@local_jdk//:jdk"),
 )
 
 # The 'vanilla' toolchain is an unsupported alternative to the default.
@@ -130,9 +130,9 @@ PREBUILT_TOOLCHAIN_CONFIGURATION = dict(
         # Turbine is not a worker and parallel GC is faster for short-lived programs.
         "-XX:+UseParallelGC",
     ],
-    ijar = [Label("//tools/jdk:ijar_prebuilt_binary")],
-    singlejar = [Label("//tools/jdk:prebuilt_singlejar")],
-    java_runtime = Label("//tools/jdk:remote_jdk11"),
+    ijar = [Label("@remote_java_tools//:ijar_cc_binary")],
+    singlejar = [Label("@remote_java_tools//:singlejar_cc_bin")],
+    java_runtime = Label("@local_jdk//:jdk"),
 )
 
 # The new toolchain is using all the tools from sources.
@@ -147,7 +147,7 @@ NONPREBUILT_TOOLCHAIN_CONFIGURATION = dict(
     ],
     ijar = [Label("@remote_java_tools//:ijar_cc_binary")],
     singlejar = [Label("@remote_java_tools//:singlejar_cc_bin")],
-    java_runtime = Label("//tools/jdk:remote_jdk11"),
+    java_runtime = Label("@local_jdk//:jdk"),
 )
 
 def default_java_toolchain(name, configuration = DEFAULT_TOOLCHAIN_CONFIGURATION, toolchain_definition = True, **kwargs):
