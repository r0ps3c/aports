--- ./src/rust/build.rs.orig
+++ ./src/rust/build.rs
@@ -79,6 +79,7 @@
 
     if cfg!(feature = "native") {
         let webrtc_dir = if cfg!(feature = "prebuilt_webrtc") {
+            panic!("trying to download prebuild webrtc");
             if let Err(e) = fs::create_dir_all(&out_dir) {
                 panic!("Failed to create webrtc out directory: {:?}", e);
             }
@@ -86,12 +87,12 @@
             // Ignore build type since we only have release prebuilts
             format!("{}/release/obj/", out_dir)
         } else {
-            format!("{}/{}/obj", out_dir, build_type)
+            format!("{}/{}", out_dir, build_type)
         };
         println!("cargo:rerun-if-changed={}", webrtc_dir);
         println!("cargo:rerun-if-changed={}", config_dir());
         println!("cargo:rustc-link-search=native={}", webrtc_dir);
-        println!("cargo:rustc-link-lib=webrtc");
+        println!("cargo:rustc-link-lib=dylib=signaldeswebrtc");
 
         if cfg!(target_os = "macos") {
             println!("cargo:rustc-link-lib=dylib=c++");
