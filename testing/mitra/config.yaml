# Mitra configuration file

# Database configuration
# Examples:
# - postgres://mitra:mitra@127.0.0.1:5432/mitra
# - postgres://mitra@%2Fvar%2Frun%2Fpostgresql/mitra
database_url: postgres://mitra:${psql_password}@127.0.0.1:5432/mitra
#database_tls_ca_file: /etc/mitra/database.pem

# Directory where media attachments and temporary files are stored
storage_dir: /var/lib/mitra
# Directory where static files for web client (frontend) are stored
web_client_dir: /usr/share/webapps/mitra

http_host: '127.0.0.1'
http_port: 8383

# List of allowed origins for CORS (in addition to `instance_uri`)
# Trailing slashes are not allowed.
#http_cors_allowlist:
#  - http://127.0.0.1:8383

# Log level (debug, info, warn)
#log_level: info

# Domain name
instance_uri: https://example.tld

instance_title: example
instance_short_description: my instance
# Long description can contain markdown syntax
instance_description: |
  # My instance
  Welcome!
# Make list of instance admins public
instance_staff_public: false
# Make instance (local) timeline public
instance_timeline_public: false

registration:
  # Possible values: open, invite
  type: invite
  # Possible values: user, read_only_user
  default_role: user

# Possible values: password, eip4361, caip122_monero. Default: only password.
#authentication_methods:
#  - password
#  - eip4361
#  - caip122_monero
# Access token expiration time (seconds). Default: 7 days
#authentication_token_lifetime: 604800

# EIP-4361 / CAIP-122 login message
#login_message: 'Do not sign this message on other sites!'

# Limits
#limits:
#  media:
#    file_size_limit: 20M
#    emoji_size_limit: 500K
#  posts:
#    character_limit: 5000

# Data retention parameters.
# Objects will be deleted after the specified number of days.
retention:
  # Remote posts with which local accounts didn't interact
  extraneous_posts: 50
  # Remote accounts without posts
  empty_profiles: 150

# Federation parameters
#federation:
#  enabled: true
#  # Proxy for outgoing requests
#  #proxy_url: 'socks5h://127.0.0.1:9050'
#  # Proxy for outgoing requests to .onion targets
#  #onion_proxy_url: 'socks5h://127.0.0.1:9050'
#  # Proxy for outgoing requests to .i2p targets
#  #i2p_proxy_url: 'socks5h://127.0.0.1:4447'

# Lists of blocked and allowed domains (allowlist has higher priority).
# Wildcard patterns are supported. Example: *.domain.example
#blocked_instances: []
#allowed_instances: []

# Blockchain integrations
#blockchains:
#  - chain_id: monero:mainnet
#    chain_metadata:
#      # Displayed on subscription page, can contain markdown syntax
#      description: null
#    node_url: 'http://127.0.0.1:18089'
#    wallet_rpc_url: 'http://127.0.0.1:18083'
#    wallet_rpc_username: null
#    wallet_rpc_password: null
#    wallet_name: null
#    wallet_password: null
#    account_index: 0
