link the tool to the shared lib, not the static one
set soname
--
diff --git a/CMakeLists.txt b/CMakeLists.txt
index c0b13fd..aade67e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -16,11 +16,11 @@ set(EXE_C_SOURCE_FILES src/main.c src/pngio.c src/argparse/argparse.c src/util.c
 set(LIB_C_HEADER_FILES src/apt.h)
 
 # Link with static library for aptdec executable, so we don't need to set the path
-add_library(aptstatic STATIC ${LIB_C_SOURCE_FILES})
 
 # Create shared library for 3rd party apps
 add_library(apt SHARED ${LIB_C_SOURCE_FILES})
 set_target_properties(apt PROPERTIES PUBLIC_HEADER ${LIB_C_HEADER_FILES})
+set_target_properties(apt PROPERTIES VERSION "${VERSION}" SOVERSION "${VERSION}")
 
 add_compile_definitions(PALETTE_DIR="${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/${CMAKE_PROJECT_NAME}/palettes")
 
@@ -30,7 +30,7 @@ if (PNG_FOUND AND LIBSNDFILE_FOUND)
     include_directories(${LIBSNDFILE_INCLUDE_DIR})
     target_link_libraries(aptdec PRIVATE PNG::PNG)
     target_link_libraries(aptdec PRIVATE ${LIBSNDFILE_LIBRARY})
-    target_link_libraries(aptdec PRIVATE aptstatic)
+    target_link_libraries(aptdec PRIVATE apt)
     if (MSVC)
         target_compile_options(aptdec PRIVATE /D_CRT_SECURE_NO_WARNINGS=1 /DAPT_API_STATIC)
     else()
@@ -54,7 +54,6 @@ if (MSVC)
 else()
     # Math
     target_link_libraries(apt PRIVATE m)
-    target_link_libraries(aptstatic PRIVATE m)
 
     if(CMAKE_BUILD_TYPE MATCHES "Release")
         target_compile_options(apt PRIVATE -Wall -Wextra -pedantic -Wno-missing-field-initializers)
