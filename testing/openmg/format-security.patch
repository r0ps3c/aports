diff --git a/src/database.c b/src/database.c
index 778ccf7..ccbb9bf 100644
--- a/src/database.c
+++ b/src/database.c
@@ -172,22 +172,22 @@ mg_database_register_next_migration_atttempt_insert (MgDatabase *self, sqlite3 *
     int error = sqlite3_prepare_v2 (sqlite, "insert into options (key, value) values (?, ?);",
             -1, &statement, NULL);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_register_next_migration_attempt_insert;
     }
     error = sqlite3_bind_text (statement, 1, "migration", -1, SQLITE_TRANSIENT);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_register_next_migration_attempt_insert;
     }
     error = sqlite3_bind_int (statement, 2, next_migration);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_register_next_migration_attempt_insert;
     }
     error = sqlite3_step (statement);
     if (error != SQLITE_DONE) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_register_next_migration_attempt_insert;
     }
     return_value = sqlite3_changes (sqlite);
@@ -204,22 +204,22 @@ mg_database_register_next_migration_update (MgDatabase *self, sqlite3 *sqlite,
     int error = sqlite3_prepare_v2 (sqlite, "update options set value = ? where key = ?;",
             -1, &statement, NULL);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_register_next_migration_update;
     }
     error = sqlite3_bind_int (statement, 1, next_migration);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_register_next_migration_update;
     }
     error = sqlite3_bind_text (statement, 2, "migration", -1, SQLITE_TRANSIENT);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_register_next_migration_update;
     }
     error = sqlite3_step (statement);
     if (error != SQLITE_DONE) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_register_next_migration_update;
     }
     return_value = sqlite3_changes (sqlite);
@@ -245,12 +245,12 @@ mg_database_retrieve_next_migration (MgDatabase *self, sqlite3 *sqlite) {
     sqlite3_stmt *statement = NULL;
     error = sqlite3_prepare_v2 (sqlite, "select value from options where key = ?;", -1, &statement, NULL);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_retrieve_next_migration;
     }
     error = sqlite3_bind_text (statement, 1, "migration", -1, SQLITE_TRANSIENT);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_retrieve_next_migration;
     }
     error = sqlite3_step (statement);
@@ -269,12 +269,12 @@ mg_database_apply_single_migration (MgDatabase *self, sqlite3 *sqlite, int migra
     gboolean return_value = 0;
     int error = sqlite3_prepare_v2 (sqlite, current_migration, -1, &statement, NULL);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_apply_single_migration;
     }
     error = sqlite3_step (statement);
     if (error != SQLITE_DONE) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         goto cleanup_mg_database_apply_single_migration;
     }
     return_value = 1;
@@ -303,7 +303,7 @@ mg_database_prepare (MgDatabase *self, char *z_sql, const char **pz_tail) {
     sqlite3 *sqlite = mg_database_get_sqlite (self);
     int error = sqlite3_prepare_v2 (sqlite, z_sql, -1, &statement, pz_tail);
     if (error != SQLITE_OK) {
-        g_warning (sqlite3_errmsg (sqlite));
+        g_warning ("%s", sqlite3_errmsg (sqlite));
         return NULL;
     }
     return mg_database_statement_new (self, statement);
diff --git a/src/database/statement.c b/src/database/statement.c
index 1599354..7218f22 100644
--- a/src/database/statement.c
+++ b/src/database/statement.c
@@ -137,7 +137,7 @@ mg_database_statement_bind_text (MgDatabaseStatement *self,
     sqlite3_stmt *stmt = mg_database_statement_get_stmt (self);
     int error = sqlite3_bind_text (stmt, index, value, -1, SQLITE_TRANSIENT);
     if ( error != SQLITE_OK ) {
-        g_error (mg_database_get_error_string (self->owner));
+        g_error ("%s", mg_database_get_error_string (self->owner));
     }
     return error;
 }
@@ -149,7 +149,7 @@ mg_database_statement_step (MgDatabaseStatement *self) {
     while ((error = sqlite3_step (stmt)) == SQLITE_BUSY) {
     }
     if (error != SQLITE_DONE && error != SQLITE_ROW) {
-        g_error (mg_database_get_error_string (self->owner));
+        g_error ("%s", mg_database_get_error_string (self->owner));
     }
     return error;
 }
