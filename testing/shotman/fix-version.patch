From d2f7ef2107b9ad1159dca0eea5b439391f8c1d5c Mon Sep 17 00:00:00 2001
From: Jan Beich <jbeich@FreeBSD.org>
Date: Fri, 10 Feb 2023 20:10:05 +0100
Subject: [PATCH] Respect SHOTMAN_VERSION as documented in README.md

Downstream may build without Git metadata or without network access
but still store checkout version somewhere, passed via environ(7).
---
 build.rs | 26 ++++++++++++++------------
 1 file changed, 14 insertions(+), 12 deletions(-)

diff --git a/build.rs b/build.rs
index 931f773..904d270 100644
--- a/build.rs
+++ b/build.rs
@@ -1,16 +1,18 @@
 use std::process::Command;
 fn main() {
-    let version = Command::new("git")
-        .args(["describe", "--tags"])
-        .output()
-        .map(|o| {
-            if o.status.success() {
-                String::from_utf8_lossy(&o.stdout).trim().to_owned()
-            } else {
-                String::from("unversioned") // git exited non-zero
-            }
-        })
-        .unwrap_or(String::from("unknown")); // failed to run git
+    if std::env::var("SHOTMAN_VERSION").is_err() {
+        let version = Command::new("git")
+            .args(["describe", "--tags"])
+            .output()
+            .map(|o| {
+                if o.status.success() {
+                    String::from_utf8_lossy(&o.stdout).trim().to_owned()
+                } else {
+                    String::from("unversioned") // git exited non-zero
+                }
+            })
+            .unwrap_or(String::from("unknown")); // failed to run git
 
-    println!("cargo:rustc-env=SHOTMAN_VERSION={version}");
+        println!("cargo:rustc-env=SHOTMAN_VERSION={version}");
+    }
 }
-- 
2.38.4

