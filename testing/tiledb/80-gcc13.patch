From 699ee9867563d4e09add7c116054e2f9f3b70e90 Mon Sep 17 00:00:00 2001
From: Isaiah Norton <isaiah@tiledb.io>
Date: Mon, 21 Aug 2023 23:51:05 -0400
Subject: [PATCH] Disable whiteboxallocator tests, fix gcc-13 build in #4191

---
 .../dynamic_memory/test/unit_dynamic_memory.cc      | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/tiledb/common/dynamic_memory/test/unit_dynamic_memory.cc b/tiledb/common/dynamic_memory/test/unit_dynamic_memory.cc
index 8c41a2697c9..d7c88f5815a 100644
--- a/tiledb/common/dynamic_memory/test/unit_dynamic_memory.cc
+++ b/tiledb/common/dynamic_memory/test/unit_dynamic_memory.cc
@@ -74,15 +74,14 @@ TEST_CASE("make_shared - TracingLabel") {
   auto x = make_shared<unsigned short>(label, 5);
 }
 
+#if defined(__GNUC__) && !defined(__clang__) && __GNUC__ < 13
+// Temporarily disabled due to compile error on GCC 13
+// - https://github.com/TileDB-Inc/TileDB/issues/4191
 TEST_CASE("make_shared_whitebox - TracingLabel") {
   auto label = TracingLabel(std::string_view("foo", 3));
   auto x = make_shared_whitebox<unsigned short>(label, 5);
 }
 
-TEST_CASE("make_shared - string constant") {
-  auto x = make_shared<unsigned short>("foo", 5);
-}
-
 TEST_CASE("make_shared_whitebox - string constant") {
   auto x = make_shared_whitebox<unsigned short>("foo", 5);
 }
@@ -100,6 +99,12 @@ TEST_CASE_METHOD(TracingFixture, "Tracer - trace make_shared") {
   WARN(TestTracer::dump());
 }
 
+#endif
+
+TEST_CASE("make_shared - string constant") {
+  auto x = make_shared<unsigned short>("foo", 5);
+}
+
 TEST_CASE_METHOD(TracingFixture, "Tracer - trace bad_alloc") {
   TracingLabel label{std::string_view(HERE(), std::string(HERE()).length())};
   TracedAllocator<int, ThrowingAllocator, TestTracer> a(label);
