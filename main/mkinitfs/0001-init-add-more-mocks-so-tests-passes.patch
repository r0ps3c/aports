From f83064db13b760560f13a8565fcb3350ed8d9dd4 Mon Sep 17 00:00:00 2001
From: Natanael Copa <ncopa@alpinelinux.org>
Date: Fri, 1 Dec 2023 14:59:15 +0100
Subject: [PATCH] init: add more mocks so tests passes

---
 initramfs-init.in | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/initramfs-init.in b/initramfs-init.in
index 9bad5b5..f4b76b3 100755
--- a/initramfs-init.in
+++ b/initramfs-init.in
@@ -273,7 +273,7 @@ find_boot_repositories() {
 }
 
 setup_nbd() {
-	modprobe -q nbd max_part=8 || return 1
+	$MOCK modprobe -q nbd max_part=8 || return 1
 	local IFS=, n=0
 	set -- $KOPT_nbd
 	unset IFS
@@ -381,7 +381,7 @@ export PATH="$PATH:/usr/bin:/bin:/usr/sbin:/sbin"
 # mounting the devtmpfs will create it implicitly as an file with the "2>" redirection.
 # The -c check is required to deal with initramfs with pre-seeded device nodes without
 # error message.
-[ -c /dev/null ] || mknod -m 666 /dev/null c 1 3
+[ -c /dev/null ] || $MOCK mknod -m 666 /dev/null c 1 3
 
 $MOCK mount -t sysfs -o noexec,nosuid,nodev sysfs /sys
 $MOCK mount -t devtmpfs -o exec,nosuid,mode=0755,size=2M devtmpfs /dev 2>/dev/null \
@@ -390,16 +390,16 @@ $MOCK mount -t devtmpfs -o exec,nosuid,mode=0755,size=2M devtmpfs /dev 2>/dev/nu
 # Make sure /dev/kmsg is a device node. Writing to /dev/kmsg allows the use of the
 # earlyprintk kernel option to monitor early init progress. As above, the -c check
 # prevents an error if the device node has already been seeded.
-[ -c /dev/kmsg ] || mknod -m 660 /dev/kmsg c 1 11
+[ -c /dev/kmsg ] || $MOCK mknod -m 660 /dev/kmsg c 1 11
 
 $MOCK mount -t proc -o noexec,nosuid,nodev proc /proc
 # pty device nodes (later system will need it)
-[ -c /dev/ptmx ] || mknod -m 666 /dev/ptmx c 5 2
-[ -d /dev/pts ] || mkdir -m 755 /dev/pts
+[ -c /dev/ptmx ] || $MOCK mknod -m 666 /dev/ptmx c 5 2
+[ -d /dev/pts ] || $MOCK mkdir -m 755 /dev/pts
 $MOCK mount -t devpts -o gid=5,mode=0620,noexec,nosuid devpts /dev/pts
 
 # shared memory area (later system will need it)
-[ -d /dev/shm ] || mkdir /dev/shm
+mkdir -p "$ROOT"/dev/shm
 $MOCK mount -t tmpfs -o nodev,nosuid,noexec shm /dev/shm
 
 
@@ -458,7 +458,7 @@ done
 # start bootcharting if wanted
 if [ "$KOPT_chart" = yes ]; then
 	ebegin "Starting bootchart logging"
-	/sbin/bootchartd start-initfs "$sysroot"
+	$MOCK /sbin/bootchartd start-initfs "$sysroot"
 	eend 0
 fi
 
@@ -489,7 +489,7 @@ else
 fi
 
 if [ -n "$KOPT_zfcp" ]; then
-	modprobe zfcp
+	$MOCK modprobe zfcp
 	for _zfcp in $(echo "$KOPT_zfcp" | tr ',' ' ' | tr [A-Z] [a-z]); do
 		echo 1 > /sys/bus/ccw/devices/"${_zfcp%%:*}"/online
 	done
@@ -497,7 +497,7 @@ fi
 
 if [ -n "$KOPT_dasd" ]; then
 	for mod in dasd_mod dasd_eckd_mod dasd_fba_mod; do
-		modprobe $mod
+		$MOCK modprobe $mod
 	done
 	for _dasd in $(echo "$KOPT_dasd" | tr ',' ' ' | tr [A-Z] [a-z]); do
 		echo 1 > /sys/bus/ccw/devices/"${_dasd%%:*}"/online
@@ -506,7 +506,7 @@ fi
 
 if [ "${KOPT_s390x_net%%,*}" = "qeth_l2" ]; then
 	for mod in qeth qeth_l2 qeth_l3; do
-		modprobe $mod
+		$MOCK modprobe $mod
 	done
 	_channel="$(echo ${KOPT_s390x_net#*,} | tr [A-Z] [a-z])"
 	echo "$_channel" > /sys/bus/ccwgroup/drivers/qeth/group
@@ -529,14 +529,14 @@ $MOCK modprobe -a $(echo "$KOPT_modules $rootfstype" | tr ',' ' ' ) loop squashf
 if [ -f "$ROOT"/etc/modules ] ; then
 	sed 's/\#.*//g' < /etc/modules |
 	while read module args; do
-		modprobe -q $module $args
+		$MOCK modprobe -q $module $args
 	done
 fi
 eend 0
 
 # workaround for vmware
-if grep -q VMware /sys/devices/virtual/dmi/id/sys_vendor 2>/dev/null; then
-	modprobe -a ata_piix mptspi sr-mod
+if grep -q VMware "$ROOT"/sys/devices/virtual/dmi/id/sys_vendor 2>/dev/null; then
+	$MOCK modprobe -a ata_piix mptspi sr-mod
 fi
 
 if [ -n "$KOPT_cryptroot" ]; then
@@ -824,7 +824,7 @@ pkgs="$pkgs alpine-base"
 
 # copy keys so apk finds them. apk looks for stuff relative --root
 mkdir -p $sysroot/etc/apk/keys/
-cp -a /etc/apk/keys $sysroot/etc/apk
+$MOCK cp -a /etc/apk/keys $sysroot/etc/apk
 
 # generate apk repositories file. needs to be done after relocation
 find_boot_repositories > $repofile
-- 
2.43.0

