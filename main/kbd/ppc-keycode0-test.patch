Hack to fix ppc64le test: https://github.com/legionus/kbd/issues/123

Patch-Source: https://salsa.debian.org/debian/kbd/-/blob/debian/latest/debian/patches/ppc-keycode0-test.patch
---
From: Andreas Henriksson <andreas@fatal.se>
Subject: PowerPC: Avoid test failure for keycode 0

We mangle the output to remove keycode 0 which appears on powerpc, ppc64 and
ppc64el architectures, but nowhere else. This is to allow the expected
test output to match (which it won't if we include keycode 0 which only appears
on PPC).

See:
https://github.com/legionus/kbd/commit/b1c599197153f89df68bebe06f8be1ac9b6e7437

> The value of keycode 0 has a special meaning, but on some architectures
> (like powerpc) keyboards may generate keycode zero.
...
> On some architectures (where it is possible to specify keycode 0) tests will
> fail.

https://github.com/legionus/kbd/issues/123

--- a/tests/libkeymap.at
+++ b/tests/libkeymap.at
@@ -123,7 +123,7 @@ AT_KEYWORDS([libkeymap unittest])
 cp -f -- \
 	"$abs_srcdir/data/dumpkeys-fulltable/ruwin_cplk-UTF-8.map" \
 	expout
-AT_CHECK([$abs_builddir/helpers/libkeymap-dumpkeys $abs_srcdir/data/dumpkeys-fulltable/ruwin_cplk-UTF-8.map FULL_TABLE TRUE],
+AT_CHECK([$abs_builddir/helpers/libkeymap-dumpkeys $abs_srcdir/data/dumpkeys-fulltable/ruwin_cplk-UTF-8.map FULL_TABLE TRUE | sed '/keycode\s*0\s*=\s*0x0200/d'],
 	[0], [expout])
 AT_CLEANUP

