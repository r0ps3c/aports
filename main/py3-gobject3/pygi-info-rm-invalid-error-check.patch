Patch-Source: https://gitlab.gnome.org/GNOME/pygobject/-/merge_requests/417
---
From cf88f6ecdd8d3510658cd38f8e8c7a8385f0a478 Mon Sep 17 00:00:00 2001
From: Christoph Reiter <reiter.christoph@gmail.com>
Date: Thu, 13 Mar 2025 19:06:59 +0100
Subject: [PATCH] pygi-info: remove invalid error check for
 gi_constant_info_get_value

Starting with 585578a82811769e182e accessing Gst.BUFFER_COPY_ALL
started to fail with "RuntimeError: unable to get value". This leads
to importing Gst fail in general since the Gst overrides access that
constant.

Downstream issue:
https://gitlab.freedesktop.org/gstreamer/gstreamer/-/issues/4301

https://gitlab.gnome.org/GNOME/glib/-/commit/14e5844f3d290feea9ab6fc5
changed gi_constant_info_get_value to correctly return unsigned, which
likely led to 585578a82811769e182e. Likely the confusion was that
gi_constant_info_get_value() returns 0 on invalid input, but it's not
documented that 0 is an error return value.

Since gi_constant_info_get_value() doesn't have an error return just
remove the check.
---
 gi/pygi-info.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/gi/pygi-info.c b/gi/pygi-info.c
index 4861fb2d..d2b2f8aa 100644
--- a/gi/pygi-info.c
+++ b/gi/pygi-info.c
@@ -1656,10 +1656,7 @@ _wrap_gi_constant_info_get_value (PyGIBaseInfo *self)
     PyObject *py_value;
     gboolean free_array = FALSE;
 
-    if (gi_constant_info_get_value ( (GIConstantInfo *) self->info, &value) == 0) {
-        PyErr_SetString (PyExc_RuntimeError, "unable to get value");
-        return NULL;
-    }
+    gi_constant_info_get_value ( (GIConstantInfo *) self->info, &value);
 
     type_info = gi_constant_info_get_type_info ( (GIConstantInfo *) self->info);
 
-- 
GitLab

