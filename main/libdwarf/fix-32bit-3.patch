Patch-Source: https://github.com/davea42/libdwarf-code/commit/bf923fc046fd868808489e5137b9f7bb0d982902
From bf923fc046fd868808489e5137b9f7bb0d982902 Mon Sep 17 00:00:00 2001
From: David Anderson <davea42@linuxmail.org>
Date: Sat, 14 Jan 2023 15:39:50 -0800
Subject: [PATCH] To avoid warnings from a careful compiler we avoid redefining
 glflags when  building test__sanitized.c by using a -DTESTING in test/ builds
 to remove the reference to glflags from dd_sanitized.c. 	modified:  
 src/bin/dwarfdump/dd_sanitized.c 	modified:   test/CMakeLists.txt

---
 src/bin/dwarfdump/dd_sanitized.c | 4 ++++
 test/CMakeLists.txt              | 3 ++-
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/bin/dwarfdump/dd_sanitized.c b/src/bin/dwarfdump/dd_sanitized.c
index 14a1d585..a9c2f46f 100644
--- a/src/bin/dwarfdump/dd_sanitized.c
+++ b/src/bin/dwarfdump/dd_sanitized.c
@@ -31,7 +31,9 @@ Copyright 2016-2018 David Anderson. All rights reserved.
 #include "libdwarf.h"
 #include "dd_globals.h"
 #include "dd_esb.h"
+#ifndef TESTING
 #include "dd_glflags.h"
+#endif
 #include "dd_sanitized.h"
 
 /*  This does a uri-style conversion of control characters.
@@ -242,9 +244,11 @@ sanitized(const char *s)
 {
     const char *sout = 0;
 
+#ifndef TESTING 
     if (glflags.gf_no_sanitize_strings) {
         return s;
     }
+#endif
     if (no_questionable_chars(s)) {
         /*  The original string is safe as is. */
         return s;
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 05138a89..2dac8193 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -159,7 +159,8 @@ if (DO_TESTING)
         ${CMAKE_SOURCE_DIR}/src/lib/libdwarf/dwarf_tsearchhash.c )
     add_executable(selftied ${TESTTIED})
     target_compile_options(selftied PRIVATE 
-        "-I${CMAKE_SOURCE_DIR}/src/lib/libdwarf" "-DLIBDWARF_BUILD")
+        "-I${CMAKE_SOURCE_DIR}/src/lib/libdwarf"
+        "-DTESTING" "-DLIBDWARF_BUILD")
     target_compile_options(selftied PRIVATE ${DW_FWALL})
     add_test(NAME selftied COMMAND selftied)
 endif()
