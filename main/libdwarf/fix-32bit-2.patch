Patch-Source: https://github.com/davea42/libdwarf-code/commit/76bebde070af2d49360a141053962949a9ea913a
From 76bebde070af2d49360a141053962949a9ea913a Mon Sep 17 00:00:00 2001
From: David Anderson <davea42@linuxmail.org>
Date: Sat, 14 Jan 2023 15:15:47 -0800
Subject: [PATCH] Each had a pointer subtraction and wanted a result of
 Dwarf_Unsigned so now using uintptr_t and Dwarf_Unsigned casts to assure
 compilers this is as intended. 	modified:  
 src/lib/libdwarf/dwarf_debuglink.c 	modified:   test/test_dwarf_tied.c

---
 src/lib/libdwarf/dwarf_debuglink.c | 8 +++++++-
 test/test_dwarf_tied.c             | 4 ++--
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/src/lib/libdwarf/dwarf_debuglink.c b/src/lib/libdwarf/dwarf_debuglink.c
index a96cab10..3717330f 100644
--- a/src/lib/libdwarf/dwarf_debuglink.c
+++ b/src/lib/libdwarf/dwarf_debuglink.c
@@ -35,6 +35,9 @@ EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
 #include <stdio.h>  /* printf() */
 #include <stdlib.h> /* free() malloc() */
 #include <string.h> /* memcpy() memset() strcmp() strdup() strlen() */
+#ifdef HAVE_STDINT_H
+#include <stdint.h> /* uintptr_t */
+#endif /* HAVE_STDINT_H */
 
 #if defined _WIN32
 #ifdef HAVE_STDAFX_H
@@ -297,7 +300,10 @@ mydirlen(char *s)
     if (lastjoinchar) {
         /*  ptrdiff_t is generated but not named */
         Dwarf_Unsigned sizetoendjoin =
-            (lastjoinchar >= s)?(lastjoinchar-s):0xffffffff;
+            (lastjoinchar >= s)?
+            (Dwarf_Unsigned)(uintptr_t)lastjoinchar -
+            (Dwarf_Unsigned)(uintptr_t)s
+            :(Dwarf_Unsigned)0xffffffff;
         /* count the last join as mydirlen. */
         if (sizetoendjoin == 0xffffffff) {
             /* impossible. */
diff --git a/test/test_dwarf_tied.c b/test/test_dwarf_tied.c
index 73cc0d03..6608d234 100644
--- a/test/test_dwarf_tied.c
+++ b/test/test_dwarf_tied.c
@@ -122,7 +122,7 @@ makeentry(Dwarf_Unsigned instance, unsigned ct)
     memset(&s8,0,sizeof(s8));
     /* Silly, but just a test...*/
     memcpy(&s8,&instance,sizeof(instance));
-    context = (Dwarf_CU_Context)instance;
+    context = (Dwarf_CU_Context)(uintptr_t)instance;
 
     entry = (struct Dwarf_Tied_Entry_s *)
         _dwarf_tied_make_entry(&s8,context);
