From 9ce2bbccb7221a5733341cc2dfffefdf761613a5 Mon Sep 17 00:00:00 2001
From: Viggodevries <viggo@highbiza.nl>
Date: Fri, 5 May 2023 17:08:17 +0200
Subject: [PATCH 2/2] Support Django 4.2, remove Python 3.7 support and add
 Python 3.11 support

---
 setup.py                                    | 15 +++----
 src/oscar/apps/basket/abstract_models.py    | 13 +++---
 src/oscar/apps/catalogue/abstract_models.py | 21 ++++++----
 src/oscar/apps/dashboard/views.py           |  7 ++++
 src/oscar/apps/shipping/abstract_models.py  |  2 +-
 src/oscar/apps/shipping/scales.py           |  2 +-
 src/oscar/core/filestorage.py               | 46 +++++++++++++++++++++
 src/oscar/defaults.py                       |  2 +
 8 files changed, 87 insertions(+), 21 deletions(-)
 create mode 100644 src/oscar/core/filestorage.py

diff --git a/setup.py b/setup.py
index 1a5f1f02c..c230b743c 100755
--- a/setup.py
+++ b/setup.py
@@ -18,7 +18,7 @@ sys.path.append(os.path.join(PROJECT_DIR, 'src'))
 from oscar import get_version  # noqa isort:skip
 
 install_requires = [
-    'django>=3.1,<3.3',
+    'django>=3.2,<4.3',
     # PIL is required for image fields, Pillow is the "friendly" PIL fork
     'pillow>=6.0',
     # We use the ModelFormSetView from django-extra-views for the basket page
@@ -43,8 +43,8 @@ install_requires = [
     'django-widget-tweaks>=1.4.1',
 ]
 
-sorl_thumbnail_version = 'sorl-thumbnail>=12.6,<12.7'
-easy_thumbnails_version = 'easy-thumbnails>=2.7,<2.8'
+sorl_thumbnail_version = 'sorl-thumbnail>=12.9,<12.10'
+easy_thumbnails_version = 'easy-thumbnails>=2.7,<2.8.6'
 
 docs_requires = [
     'Sphinx>=5.0',
@@ -59,11 +59,12 @@ test_requires = [
     'WebTest>=2.0,<2.1',
     'coverage>=5.4,<5.5',
     'django-webtest>=1.9,<1.10',
-    'psycopg2-binary>=2.8,<2.9',
+    'psycopg2-binary>=2.8,<2.10',
     'pytest-django>=3.7,<3.9',
     'pytest-xdist>=2.2,<3',
     'tox>=3.21,<4',
     'freezegun>=1.1,<2',
+    'pytz',
     sorl_thumbnail_version,
     easy_thumbnails_version,
 ]
@@ -86,7 +87,7 @@ setup(
     package_dir={'': 'src'},
     packages=find_packages('src'),
     include_package_data=True,
-    python_requires='>=3.7',
+    python_requires='>=3.8',
     install_requires=install_requires,
     extras_require={
         'docs': docs_requires,
@@ -98,17 +99,17 @@ setup(
         'Development Status :: 5 - Production/Stable',
         'Environment :: Web Environment',
         'Framework :: Django',
-        'Framework :: Django :: 3.1',
         'Framework :: Django :: 3.2',
+        'Framework :: Django :: 4.2',
         'Intended Audience :: Developers',
         'License :: OSI Approved :: BSD License',
         'Operating System :: Unix',
         'Programming Language :: Python',
         'Programming Language :: Python :: 3',
-        'Programming Language :: Python :: 3.7',
         'Programming Language :: Python :: 3.8',
         'Programming Language :: Python :: 3.9',
         'Programming Language :: Python :: 3.10',
+        'Programming Language :: Python :: 3.11',
         'Topic :: Software Development :: Libraries :: Application Frameworks']
 )
 
diff --git a/src/oscar/apps/basket/abstract_models.py b/src/oscar/apps/basket/abstract_models.py
index e7fe9ffe1..46d2add66 100644
--- a/src/oscar/apps/basket/abstract_models.py
+++ b/src/oscar/apps/basket/abstract_models.py
@@ -126,7 +126,7 @@ class AbstractBasket(models.Model):
         lost.
         """
         if self.id is None:
-            return self.lines.none()
+            return self.lines.model.objects.none()
         if self._lines is None:
             self._lines = (
                 self.lines
@@ -523,7 +523,7 @@ class AbstractBasket(models.Model):
     @property
     def num_items(self):
         """Return number of items"""
-        return sum(line.quantity for line in self.lines.all())
+        return sum(line.quantity for line in self.all_lines())
 
     @property
     def num_items_without_discount(self):
@@ -599,9 +599,12 @@ class AbstractBasket(models.Model):
         The basket can contain multiple lines with the same product, but
         different options and stockrecords. Those quantities are summed up.
         """
-        matching_lines = self.lines.filter(product=product)
-        quantity = matching_lines.aggregate(Sum('quantity'))['quantity__sum']
-        return quantity or 0
+        if self.id:
+            matching_lines = self.lines.filter(product=product)
+            quantity = matching_lines.aggregate(Sum('quantity'))['quantity__sum']
+            return quantity or 0
+
+        return 0
 
     def line_quantity(self, product, stockrecord, options=None):
         """
diff --git a/src/oscar/apps/catalogue/abstract_models.py b/src/oscar/apps/catalogue/abstract_models.py
index 57a7862c0..f02728c2a 100644
--- a/src/oscar/apps/catalogue/abstract_models.py
+++ b/src/oscar/apps/catalogue/abstract_models.py
@@ -215,12 +215,17 @@ class AbstractCategory(MP_Node):
         # Update ancestors_are_public for the sub tree.
         # note: This doesn't trigger a new save for each instance, rather
         # just a SQL update.
-        included_in_non_public_subtree = self.__class__.objects.filter(
-            is_public=False, path__rstartswith=OuterRef("path"), depth__lt=OuterRef("depth")
-        )
-        self.get_descendants_and_self().update(
-            ancestors_are_public=Exists(
-                included_in_non_public_subtree.values("id"), negated=True))
+        if self.is_root():
+            self.get_descendants_and_self().update(
+                ancestors_are_public=self.is_public
+            )
+        else:
+            included_in_public_subtree = self.__class__.objects.filter(
+                is_public=True, path__rstartswith=OuterRef("path"), depth__lt=OuterRef("depth")
+            )
+            self.get_descendants_and_self().update(
+                ancestors_are_public=Exists(
+                    included_in_public_subtree.values("id")))
 
         # Correctly populate ancestors_are_public
         self.refresh_from_db()
@@ -598,7 +603,9 @@ class AbstractProduct(models.Model):
         """
         Test if this product has any stockrecords
         """
-        return self.stockrecords.exists()
+        if self.id:
+            return self.stockrecords.exists()
+        return False
 
     @property
     def num_stockrecords(self):
diff --git a/src/oscar/apps/dashboard/views.py b/src/oscar/apps/dashboard/views.py
index b555bdd9f..92e9f3b82 100644
--- a/src/oscar/apps/dashboard/views.py
+++ b/src/oscar/apps/dashboard/views.py
@@ -306,6 +306,13 @@ class PopUpWindowDeleteMixin(PopUpWindowMixin):
         else:
             return response
 
+    def post(self, request, *args, **kwargs):
+        """
+        Calls the delete() method on the fetched object and then
+        redirects to the success URL, or closes the popup, it it is one.
+        """
+        return self.delete(request, *args, **kwargs)
+
 
 class LoginView(auth_views.LoginView):
     template_name = 'oscar/dashboard/login.html'
diff --git a/src/oscar/apps/shipping/abstract_models.py b/src/oscar/apps/shipping/abstract_models.py
index bc89d0c71..7322b088f 100644
--- a/src/oscar/apps/shipping/abstract_models.py
+++ b/src/oscar/apps/shipping/abstract_models.py
@@ -83,7 +83,7 @@ class AbstractOrderAndItemCharges(AbstractBase):
                 incl_tax=D('0.00'))
 
         charge = self.price_per_order
-        for line in basket.lines.all():
+        for line in basket.all_lines():
             if line.product.is_shipping_required:
                 charge += line.quantity * self.price_per_item
 
diff --git a/src/oscar/apps/shipping/scales.py b/src/oscar/apps/shipping/scales.py
index c62aa0c81..7429828a7 100644
--- a/src/oscar/apps/shipping/scales.py
+++ b/src/oscar/apps/shipping/scales.py
@@ -30,6 +30,6 @@ class Scale(object):
 
     def weigh_basket(self, basket):
         weight = D('0.0')
-        for line in basket.lines.all():
+        for line in basket.all_lines():
             weight += self.weigh_product(line.product) * line.quantity
         return weight
diff --git a/src/oscar/core/filestorage.py b/src/oscar/core/filestorage.py
new file mode 100644
index 000000000..1a5f32e2a
--- /dev/null
+++ b/src/oscar/core/filestorage.py
@@ -0,0 +1,46 @@
+from django.contrib.staticfiles.storage import ManifestStaticFilesStorage
+
+module_patterns = (
+    ('*.js', (
+        (
+            r"""
+                (^|;)\s*(?P<matched>(?P<prefix>import(\s*\*\s*as\s+\w+\s+|\s+\w+\s+|\s*{[\w,\s]*?}\s*)from\s*)['"](?P<url>.*?)['"])
+            """,
+            "%(prefix)s '%(url)s'",
+        ),
+    )),
+)
+
+
+def get_static_url(path):
+    from django.contrib.staticfiles.storage import staticfiles_storage
+
+    return staticfiles_storage.url(path)
+
+
+class NoSourceMapsStorage(ManifestStaticFilesStorage):
+    """
+    ManifestStaticFilesStorage with additional features:
+    1. If you have a manifest files error, the page to render the error probably
+    has the same error, and then you can't debug it. This returns the error
+    string so one can see in the rendered html there was a problem
+    2. Remove the sourcemap patterns, add javascript module support.
+    """
+
+    # ------ Temp until: https://code.djangoproject.com/ticket/33353#comment:11
+    no_sourcemap_patterns = (
+        ("*.css", (
+            r"""(?P<matched>url\(['"]{0,1}\s*(?P<url>.*?)["']{0,1}\))""",
+            (
+                r"""(?P<matched>@import\s*["']\s*(?P<url>.*?)["'])""",
+                """@import url("%(url)s")""",
+            ),
+        )),
+    )
+    patterns = no_sourcemap_patterns + module_patterns
+
+    def stored_name(self, name):
+        try:
+            return super().stored_name(name)
+        except ValueError as e:
+            return f"{name}.could_not_find_static_file_to_calc_manifest_hash, {e}"
diff --git a/src/oscar/defaults.py b/src/oscar/defaults.py
index 4322ac53c..556b36ed6 100644
--- a/src/oscar/defaults.py
+++ b/src/oscar/defaults.py
@@ -1,6 +1,8 @@
 from django.urls import reverse_lazy
 from django.utils.translation import gettext_lazy as _
 
+STATICFILES_STORAGE = "oscar.core.filestorage.NoSourceMapsStorage"
+
 OSCAR_SHOP_NAME = 'Oscar'
 OSCAR_SHOP_TAGLINE = ''
 OSCAR_HOMEPAGE = reverse_lazy('catalogue:index')
-- 
2.40.1

