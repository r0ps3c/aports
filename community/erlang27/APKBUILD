# Maintainer: Celeste <cielesti@protonmail.com>
maintainer="Celeste <cielesti@protonmail.com>"
_pkgname=erlang
pkgver=27.3.4.1
pkgrel=0
_pkgver=${pkgver/_rc/-rc}
_majorver=${pkgver%%.*}
_prevmajorver=$((_majorver - 1))
pkgname=$_pkgname$_majorver
pkgdesc="General-purpose programming language and runtime environment, version $_majorver"
url="https://www.erlang.org/"
license="Apache-2.0"
arch="all"
depends_dev="$pkgname=$pkgver-r$pkgrel"
makedepends="
	autoconf
	font-terminus
	glu-dev
	linux-headers
	ncurses-dev
	openssl-dev
	perl
	perl-dev
	unixodbc-dev
	wxwidgets-dev
	xauth
	zlib-dev
	"
subpackages="
	$pkgname-dev
	$pkgname-doc
	$pkgname-debugger:_mv_erlang_lib
	$pkgname-dialyzer:_mv_erlang_lib
	$pkgname-et:_mv_erlang_lib
	$pkgname-megaco:_mv_erlang_lib
	$pkgname-observer:_mv_erlang_lib
	$pkgname-odbc:_mv_erlang_lib
	$pkgname-reltool:_mv_erlang_lib
	$pkgname-wx:_mv_erlang_lib
	"
source="https://github.com/erlang/otp/releases/download/OTP-$_pkgver/otp_src_$_pkgver.tar.gz"

builddir="$srcdir/otp_src_$_pkgver"

# Whether this package provides "erlang" without the version suffix.
_default_erlang="yes"

if [ "$_default_erlang" = yes ]; then
	_prover=$((100 + $_majorver))
elif [ "$_pkgver" = "$pkgver" ]; then
	# non-rc versions
	_prover=$_majorver
else
	_prover=0.$_majorver
fi

provides="erlang=$_prover"
replaces="erlang erlang$_prevmajorver"

# Disable Java support (jinterface) on architectures that lack OpenJDK 8
case "$CARCH" in
riscv64)
	;;
*)
	makedepends="$makedepends openjdk8"
	[ "$CARCH" = "loongarch64" ] &&
		makedepends="$makedepends-loongarch"
	export PATH="/usr/lib/jvm/java-1.8-openjdk/bin:$PATH"
	;;
esac

build() {
	# it's a whole language runtime
	export CFLAGS="${CFLAGS//-Os/-O2} -D_BSD_SOURCE"
	export CXXFLAGS="${CXXFLAGS//-Os/-O2}"

	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--host="$CHOST" \
		--build="$CBUILD" \
		--enable-pie \
		--enable-threads \
		--enable-shared-zlib \
		--enable-ssl=dynamic-ssl-lib
	make
	make DOC_TARGETS="chunks man" docs
}

check() {
	ERL_TOP="$builddir" make release_tests
}

package() {
	make DESTDIR="$pkgdir" \
		DOC_TARGETS="chunks man" \
		install \
		install-docs
}

_mv_erlang_lib() {
	_default_provide

	depends="$pkgname=$pkgver-r$pkgrel"

	local lib=${subpkgname#"$pkgname-"}
	lib=${lib//-/_}
	case "$lib" in
	debugger)	depends="$depends $pkgname-wx=$pkgver-r$pkgrel" ;;
	dialyzer)	depends="$depends $pkgname-wx=$pkgver-r$pkgrel" ;;
	et)		depends="$depends $pkgname-wx=$pkgver-r$pkgrel" ;;
	megaco)		depends="$depends $pkgname-debugger=$pkgver-r$pkgrel $pkgname-et=$pkgver-r$pkgrel" ;;
	observer)	depends="$depends $pkgname-et=$pkgver-r$pkgrel $pkgname-wx=$pkgver-r$pkgrel" ;;
	reltool)	depends="$depends $pkgname-wx=$pkgver-r$pkgrel" ;;
	wx)		depends="$depends xauth font-terminus" ;;
	esac

	rm -f "$pkgdir"/usr/lib/erlang/lib/$lib-*/src/*.erl
	amove usr/lib/erlang/lib/$lib-*
}

dev() {
	default_dev
	_default_provide
}

doc() {
	default_doc
	_default_provide

	pkgdesc="$pkgdesc (documentation chunks and man pages)"

	amove \
		usr/lib/erlang/lib/*/doc \
		usr/lib/erlang/man
}

# helper script to manually check the dependencies of subpackages
verifydeps() {
	local _p
	for _p in $subpackages; do
		case "$_p" in
		*:*) _p=${_p%:*} ;;
		*) continue ;;
		esac
		local _subdir="$pkgdir/../$_p"
		local _pkginfo="$pkgdir/../.control.$_p"/.PKGINFO
		msg "$_p"
		grep '^depend ='  $_pkginfo || true
		find "$_subdir" -name '*.app' | while read -r _f; do
			echo "  $_f"
			sed -n '/{runtime_dependencies/,/}/p' $_f
		done
	done
}

_default_provide() {
	provides="erlang${subpkgname#"$pkgname"}=$_prover"
	replaces="erlang${subpkgname#"$pkgname"} erlang${_prevmajorver}${subpkgname#"$pkgname"}"
}

sha512sums="
ed052e2439041d3a8d8e04b33ba41b42a5cc8c020a8fceea7f3b4314a780cf0c9bfca716a412ce92d1308b4f88bcb4ac69e2fe3fc784923a217cace833498007  otp_src_27.3.4.1.tar.gz
"
