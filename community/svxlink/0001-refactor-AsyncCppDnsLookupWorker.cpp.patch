From d4b01029096216781fc165fafb26dc769b4b48f9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Milan=20P=2E=20Stani=C4=87?= <mps@arvanta.net>
Date: Tue, 26 Mar 2024 20:20:17 +0000
Subject: [PATCH] refactor AsyncCppDnsLookupWorker.cpp

this are fixes to build on musl libc
---
 src/async/cpp/AsyncCppDnsLookupWorker.cpp | 11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

diff --git a/src/async/cpp/AsyncCppDnsLookupWorker.cpp b/src/async/cpp/AsyncCppDnsLookupWorker.cpp
index f2e39b07..33bbc004 100644
--- a/src/async/cpp/AsyncCppDnsLookupWorker.cpp
+++ b/src/async/cpp/AsyncCppDnsLookupWorker.cpp
@@ -305,17 +305,15 @@ void CppDnsLookupWorker::workerFunc(CppDnsLookupWorker::ThreadContext& ctx)
 
   if (qtype != 0)
   {
-    struct __res_state state;
-    int ret = res_ninit(&state);
+		int ret = 0;
     if (ret != -1)
     {
-      state.options = RES_DEFAULT;
       const char *dname = ctx.label.c_str();
-      ctx.anslen = res_nsearch(&state, dname, ns_c_in, qtype,
+      ctx.anslen = res_search(dname, ns_c_in, qtype,
                                ctx.answer, sizeof(ctx.answer));
       if (ctx.anslen == -1)
       {
-        th_cerr << "*** ERROR: Name resolver failure -- res_nsearch: "
+        th_cerr << "*** ERROR: Name resolver failure -- res_search: "
                 << hstrerror(h_errno) << std::endl;
       }
 
@@ -324,7 +322,6 @@ void CppDnsLookupWorker::workerFunc(CppDnsLookupWorker::ThreadContext& ctx)
         //        does not grow with every failed lookup. But even so, it seems
         //        that res_close is not cleaning up properly.
         //        Glibc 2.33-18 on Fedora 34.
-      res_nclose(&state);
     }
     else
     {
@@ -538,7 +535,7 @@ void CppDnsLookupWorker::printErrno(const std::string& msg)
 {
   char errbuf[1024];
   char* errmsg = errbuf;
-#if (_POSIX_C_SOURCE >= 200112L) && ! _GNU_SOURCE
+#ifndef __GLIBC__
   int ret = strerror_r(errno, errbuf, sizeof(errbuf));
   assert(ret == 0);
 #else
-- 
2.44.0

