Patch-Source: https://github.com/jazzband/django-oauth-toolkit/commit/a1538231ce6d076d42b63cb358dfec91d3c10740.patch
--
From a1538231ce6d076d42b63cb358dfec91d3c10740 Mon Sep 17 00:00:00 2001
From: Alan Crosswell <alan@columbia.edu>
Date: Fri, 20 Sep 2024 11:39:20 -0400
Subject: [PATCH] deal with 404 or 405 validator error (#1499)

* deal with 404 or 405 validator error (apparently varies with version of django)

* refactor: more precise test name

* mock the post request instead of POSTing to example.com

---------

Co-authored-by: Darrel O'Pry <darrel.opry@spry-group.com>
---
 tests/test_oauth2_validators.py | 33 +++++++++++++++++++++------------
 1 file changed, 21 insertions(+), 12 deletions(-)

diff --git a/tests/test_oauth2_validators.py b/tests/test_oauth2_validators.py
index 31d97f64..14c74506 100644
--- a/tests/test_oauth2_validators.py
+++ b/tests/test_oauth2_validators.py
@@ -3,6 +3,7 @@
 import json
 
 import pytest
+import requests
 from django.contrib.auth import get_user_model
 from django.contrib.auth.hashers import make_password
 from django.utils import timezone
@@ -501,18 +502,26 @@ def setUpTestData(cls):
         cls.introspection_token = "test_introspection_token"
         cls.validator = OAuth2Validator()
 
-    def test_response_when_auth_server_response_return_404(self):
-        with self.assertLogs(logger="oauth2_provider") as mock_log:
-            self.validator._get_token_from_authentication_server(
-                self.token, self.introspection_url, self.introspection_token, None
-            )
-            self.assertIn(
-                "ERROR:oauth2_provider:Introspection: Failed to "
-                "get a valid response from authentication server. "
-                "Status code: 404, Reason: "
-                "Not Found.\nNoneType: None",
-                mock_log.output,
-            )
+    def test_response_when_auth_server_response_not_200(self):
+        """
+        Ensure we log the error when the authentication server returns a non-200 response.
+        """
+        mock_response = requests.Response()
+        mock_response.status_code = 404
+        mock_response.reason = "Not Found"
+        with mock.patch("requests.post") as mock_post:
+            mock_post.return_value = mock_response
+            with self.assertLogs(logger="oauth2_provider") as mock_log:
+                self.validator._get_token_from_authentication_server(
+                    self.token, self.introspection_url, self.introspection_token, None
+                )
+                self.assertIn(
+                    "ERROR:oauth2_provider:Introspection: Failed to "
+                    "get a valid response from authentication server. "
+                    "Status code: 404, Reason: "
+                    "Not Found.\nNoneType: None",
+                    mock_log.output,
+                )
 
 
 @pytest.mark.oauth2_settings(presets.OIDC_SETTINGS_RW)
