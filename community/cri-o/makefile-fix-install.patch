--- a/Makefile
+++ b/Makefile
@@ -9,11 +9,11 @@
 
 PROJECT := github.com/cri-o/cri-o
 CRIO_INSTANCE := crio_dev
-PREFIX ?= ${DESTDIR}/usr/local
+PREFIX ?= /usr/local
 BINDIR ?= ${PREFIX}/bin
 LIBEXECDIR ?= ${PREFIX}/libexec
 MANDIR ?= ${PREFIX}/share/man
-ETCDIR ?= ${DESTDIR}/etc
+ETCDIR ?= /etc
 ETCDIR_CRIO ?= ${ETCDIR}/crio
 DATAROOTDIR ?= ${PREFIX}/share/containers
 BUILDTAGS ?= containers_image_ostree_stub \
@@ -26,7 +26,7 @@
 # Device mapper is deprecated; keep this tag until the dm code
 # is removed from the c/storage vendored here.
 BUILDTAGS += exclude_graphdriver_devicemapper
-CRICTL_CONFIG_DIR=${DESTDIR}/etc
+CRICTL_CONFIG_DIR= /etc
 CONTAINER_RUNTIME ?= podman
 PWD := $(shell pwd)
 BUILD_PATH := ${PWD}/build
@@ -259,72 +259,74 @@
 		-t quay.io/crio/metrics-exporter:latest
 
 .PHONY: install
-install: install.bin install.man install.completions install.systemd install.config ## Install the project locally.
+install: install.bin install.man install.completions install.config ## Install the project locally.
 
 .PHONY: install.bin-nobuild
 install.bin-nobuild: ## Install the binaries.
-	install ${SELINUXOPT} -D -m 755 bin/crio $(BINDIR)/crio
-	install ${SELINUXOPT} -D -m 755 bin/pinns $(BINDIR)/pinns
+	install ${SELINUXOPT} -D -m 755 bin/crio ${DESTDIR}$(BINDIR)/crio
+	install ${SELINUXOPT} -D -m 755 bin/pinns ${DESTDIR}$(BINDIR)/pinns
 
 .PHONY: install.bin
 install.bin: binaries install.bin-nobuild ## Build and install the binaries.
 
 .PHONY: install.man-nobuild
 install.man-nobuild: ## Install the man pages.
-	install ${SELINUXOPT} -d -m 755 $(MANDIR)/man5
-	install ${SELINUXOPT} -d -m 755 $(MANDIR)/man8
-	install ${SELINUXOPT} -m 644 $(filter %.5,$(MANPAGES)) -t $(MANDIR)/man5
-	install ${SELINUXOPT} -m 644 $(filter %.8,$(MANPAGES)) -t $(MANDIR)/man8
+	install ${SELINUXOPT} -d -m 755 ${DESTDIR}$(MANDIR)/man5
+	install ${SELINUXOPT} -d -m 755 ${DESTDIR}$(MANDIR)/man8
+	install ${SELINUXOPT} -m 644 $(filter %.5,$(MANPAGES)) -t ${DESTDIR}$(MANDIR)/man5
+	install ${SELINUXOPT} -m 644 $(filter %.8,$(MANPAGES)) -t ${DESTDIR}$(MANDIR)/man8
 
 .PHONY: install.man
 install.man: $(MANPAGES) install.man-nobuild ## Build and install the man pages.
 
 .PHONY: install.config-nobuild
 install.config-nobuild: ## Install the configuration files.
-	install ${SELINUXOPT} -d $(DATAROOTDIR)/oci/hooks.d
-	install ${SELINUXOPT} -d $(ETCDIR_CRIO)/crio.conf.d
-	install ${SELINUXOPT} -D -m 644 crio.conf $(ETCDIR_CRIO)/crio.conf
-	install ${SELINUXOPT} -D -m 644 crio-umount.conf $(OCIUMOUNTINSTALLDIR)/crio-umount.conf
-	install ${SELINUXOPT} -D -m 644 crictl.yaml $(CRICTL_CONFIG_DIR)
+	install ${SELINUXOPT} -d ${DESTDIR}$(ETCDIR_CRIO)/crio.conf.d
+	install ${SELINUXOPT} -d ${DESTDIR}$(ETCDIR)/containers/oci/hooks.d
+	install ${SELINUXOPT} -d ${DESTDIR}$(DATAROOTDIR)/oci/hooks.d
+	install ${SELINUXOPT} -D -m 644 crio.conf ${DESTDIR}$(ETCDIR_CRIO)/crio.conf
+	install ${SELINUXOPT} -D -m 644 crio-umount.conf ${DESTDIR}$(OCIUMOUNTINSTALLDIR)/crio-umount.conf
+	install ${SELINUXOPT} -D -m 644 crictl.yaml ${DESTDIR}$(CRICTL_CONFIG_DIR)
 
 .PHONY: install.config
 install.config: crio.conf install.config-nobuild ## Build and install the configuration files.
 
 .PHONY: install.completions
 install.completions: ## Install the completions.
-	install ${SELINUXOPT} -d -m 755 ${BASHINSTALLDIR}
-	install ${SELINUXOPT} -d -m 755 ${FISHINSTALLDIR}
-	install ${SELINUXOPT} -d -m 755 ${ZSHINSTALLDIR}
-	install ${SELINUXOPT} -D -m 644 -t ${BASHINSTALLDIR} completions/bash/crio
-	install ${SELINUXOPT} -D -m 644 -t ${FISHINSTALLDIR} completions/fish/crio.fish
-	install ${SELINUXOPT} -D -m 644 -t ${ZSHINSTALLDIR}  completions/zsh/_crio
+	install ${SELINUXOPT} -d -m 755 ${DESTDIR}${BASHINSTALLDIR}
+	install ${SELINUXOPT} -d -m 755 ${DESTDIR}${FISHINSTALLDIR}
+	install ${SELINUXOPT} -d -m 755 ${DESTDIR}${ZSHINSTALLDIR}
+	install ${SELINUXOPT} -D -m 644 -t ${DESTDIR}${BASHINSTALLDIR} completions/bash/crio
+	install ${SELINUXOPT} -D -m 644 -t ${DESTDIR}${FISHINSTALLDIR} completions/fish/crio.fish
+	install ${SELINUXOPT} -D -m 644 -t ${DESTDIR}${ZSHINSTALLDIR}  completions/zsh/_crio
 
 .PHONY: install.systemd
 install.systemd: ## Install the systemd unit files.
-	install ${SELINUXOPT} -D -m 644 contrib/systemd/crio.service $(PREFIX)/lib/systemd/system/crio.service
-	install ${SELINUXOPT} -D -m 644 contrib/systemd/crio-wipe.service $(PREFIX)/lib/systemd/system/crio-wipe.service
+	install ${SELINUXOPT} -D -m 644 contrib/systemd/crio.service ${DESTDIR}$(PREFIX)/lib/systemd/system/crio.service
+	install ${SELINUXOPT} -D -m 644 contrib/systemd/crio-wipe.service ${DESTDIR}$(PREFIX)/lib/systemd/system/crio-wipe.service
 
 .PHONY: uninstall
 uninstall: ## Uninstall all files.
-	rm -f $(BINDIR)/crio
-	rm -f $(BINDIR)/pinns
+	rm -f $(DESTDIR)$(BINDIR)/crio
+	rm -f $(DESTDIR)$(BINDIR)/pinns
 	for i in $(filter %.5,$(MANPAGES)); do \
-		rm -f $(MANDIR)/man5/$$(basename $${i}); \
+		rm -f $(DESTDIR)$(MANDIR)/man5/$$(basename $${i}); \
 	done
 	for i in $(filter %.8,$(MANPAGES)); do \
-		rm -f $(MANDIR)/man8/$$(basename $${i}); \
+		rm -f $(DESTDIR)$(MANDIR)/man8/$$(basename $${i}); \
 	done
-	rm -f ${BASHINSTALLDIR}/crio
-	rm -f ${FISHINSTALLDIR}/crio.fish
-	rm -f ${ZSHINSTALLDIR}/_crio
-	rm -f $(PREFIX)/lib/systemd/system/crio-wipe.service
-	rm -f $(PREFIX)/lib/systemd/system/crio.service
-	rm -f $(PREFIX)/lib/systemd/system/cri-o.service
-	rm -rf $(DATAROOTDIR)/oci/hooks.d
-	rm -f $(ETCDIR_CRIO)/crio.conf
-	rm -rf $(ETCDIR_CRIO)/crio.conf.d
-	rm -f $(OCIUMOUNTINSTALLDIR)/crio-umount.conf
-	rm -f $(CRICTL_CONFIG_DIR)/crictl.yaml
+	rm -f $(DESTDIR)${BASHINSTALLDIR}/crio
+	rm -f $(DESTDIR)${FISHINSTALLDIR}/crio.fish
+	rm -f $(DESTDIR)${ZSHINSTALLDIR}/_crio
+	rm -f $(DESTDIR)$(PREFIX)/lib/systemd/system/crio-wipe.service
+	rm -f $(DESTDIR)$(PREFIX)/lib/systemd/system/crio.service
+	rm -f $(DESTDIR)$(PREFIX)/lib/systemd/system/cri-o.service
+	rm -f $(DESTDIR)$(ETCDIR_CRIO)/crio.conf
+	rm -rf $(DESTDIR)$(ETCDIR_CRIO)/crio.conf.d
+	rm -rf $(DESTDIR)$(ETCDIR)/containers/oci/hooks.d
+	rm -rf $(DESTDIR)$(DATAROOTDIR)/oci/hooks.d
+	rm -f $(DESTDIR)$(OCIUMOUNTINSTALLDIR)/crio-umount.conf
+	rm -f $(DESTDIR)$(CRICTL_CONFIG_DIR)/crictl.yaml
 
 ##@ Verify targets:
 
