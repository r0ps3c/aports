Disable the version check as the package is managed through apk

diff --git a/src/openrct2/Version.cpp b/src/openrct2/Version.cpp
index 703d110..5121a3a 100644
--- a/src/openrct2/Version.cpp
+++ b/src/openrct2/Version.cpp
@@ -59,38 +59,5 @@ NewVersionInfo get_latest_version()
     // with invalid data.
     std::string tag = gVersionInfoTag;
     NewVersionInfo verinfo{ tag, "", "", "" };
-#ifndef DISABLE_HTTP
-    auto now = std::chrono::duration_cast<std::chrono::seconds>(std::chrono::system_clock::now().time_since_epoch()).count();
-    auto then = gConfigGeneral.LastVersionCheckTime;
-    if (then < now - 24 * 60 * 60)
-    {
-        Http::Request request;
-        request.url = "https://api.github.com/repos/OpenRCT2/OpenRCT2/releases/latest";
-        request.method = Http::Method::GET;
-
-        Http::Response res;
-        try
-        {
-            res = Do(request);
-            if (res.status != Http::Status::Ok)
-                throw std::runtime_error("bad http status");
-        }
-        catch (std::exception& e)
-        {
-            Console::Error::WriteLine("Failed to download '%s', cause %s", request.url.c_str(), e.what());
-            return {};
-        }
-
-        json_t root = Json::FromString(res.body);
-
-        verinfo.tag = Json::GetString(root["tag_name"]);
-        verinfo.name = Json::GetString(root["name"]);
-        verinfo.changelog = Json::GetString(root["body"]);
-        verinfo.url = Json::GetString(root["html_url"]);
-
-        gConfigGeneral.LastVersionCheckTime = now;
-        ConfigSaveDefault();
-    }
-#endif
     return verinfo;
 }
