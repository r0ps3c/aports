From f87d83f227ceee8aa48250108041ef9ce3b00e4a Mon Sep 17 00:00:00 2001
From: Sven Tennie <sven.tennie@gmail.com>
Date: Thu, 5 Sep 2024 19:26:11 +0200
Subject: [PATCH] Fix C warnings (#25237)

GCC 14 treats the fixed warnings as errors by default. I.e. we're
gaining GCC 14 compatibility with these fixes.
---
 .../tests/rts/pause-resume/list_threads_and_misc_roots_c.c  | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/testsuite/tests/rts/pause-resume/list_threads_and_misc_roots_c.c b/testsuite/tests/rts/pause-resume/list_threads_and_misc_roots_c.c
index 634bab75e2..1df0c76930 100644
--- a/testsuite/tests/rts/pause-resume/list_threads_and_misc_roots_c.c
+++ b/testsuite/tests/rts/pause-resume/list_threads_and_misc_roots_c.c
@@ -27,10 +27,10 @@ void checkGcRoots(void)
     rts_listThreads(&collectTSOsCallback, NULL);
     for (int i = 0; i < tsoCount; i++)
     {
-        StgTSO *tso = UNTAG_CLOSURE(tsos[i]);
+        StgClosure *tso = UNTAG_CLOSURE((StgClosure*) tsos[i]);
         if (get_itbl(tso)->type != TSO)
         {
-            fprintf(stderr, "tso returned a non-TSO type %zu at index %i\n",
+            fprintf(stderr, "tso returned a non-TSO type %u at index %i\n",
                 tso->header.info->type,
                 i);
             exit(1);
@@ -44,7 +44,7 @@ void checkGcRoots(void)
         StgClosure *root = UNTAG_CLOSURE(miscRoots[i]);
         if (get_itbl(root)->type == TSO)
         {
-            fprintf(stderr, "rts_listThreads unexpectedly returned an TSO type at index %i (TSO=%zu)\n", i, TSO);
+            fprintf(stderr, "rts_listThreads unexpectedly returned an TSO type at index %i (TSO=%d)\n", i, TSO);
             exit(1);
         }
     }
