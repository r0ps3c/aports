diff --git a/data/61-gdm.rules.in b/data/61-gdm.rules.in
index 5bc9941..e509b47 100644
--- a/data/61-gdm.rules.in
+++ b/data/61-gdm.rules.in
@@ -1,7 +1,7 @@
 # identify virtio graphics cards to find passthrough setups
 SUBSYSTEM!="virtio", GOTO="gdm_virtio_device_end"
 ACTION!="add", GOTO="gdm_virtio_device_end"
-ATTR{vendor}=="0x1af4", ATTR{device}=="0x0010", RUN+="/usr/bin/touch /run/udev/gdm-machine-has-virtual-gpu", ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}="1", GOTO="gdm_virtio_device_end"
+ATTR{vendor}=="0x1af4", ATTR{device}=="0x0010", RUN+="/bin/touch /run/udev/gdm-machine-has-virtual-gpu", ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}="1", GOTO="gdm_virtio_device_end"
 LABEL="gdm_virtio_device_end"
 
 SUBSYSTEM!="pci", GOTO="gdm_pci_device_end"
@@ -9,11 +9,11 @@ ACTION!="bind", GOTO="gdm_pci_device_end"
 
 # identify virtio graphics cards to find passthrough setups
 # cirrus
-ATTR{vendor}=="0x1013", ATTR{device}=="0x00b8", ATTR{subsystem_vendor}=="0x1af4", ATTR{subsystem_device}=="0x1100", RUN+="/usr/bin/touch /run/udev/gdm-machine-has-virtual-gpu", ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}="1", GOTO="gdm_pci_device_end"
+ATTR{vendor}=="0x1013", ATTR{device}=="0x00b8", ATTR{subsystem_vendor}=="0x1af4", ATTR{subsystem_device}=="0x1100", RUN+="/bin/touch /run/udev/gdm-machine-has-virtual-gpu", ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}="1", GOTO="gdm_pci_device_end"
 # vga
-ATTR{vendor}=="0x1b36", ATTR{device}=="0x0100", RUN+="/usr/bin/touch /run/udev/gdm-machine-has-virtual-gpu", ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}="1", GOTO="gdm_pci_device_end"
+ATTR{vendor}=="0x1b36", ATTR{device}=="0x0100", RUN+="/bin/touch /run/udev/gdm-machine-has-virtual-gpu", ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}="1", GOTO="gdm_pci_device_end"
 # qxl
-ATTR{vendor}=="0x1234", ATTR{device}=="0x1111", RUN+="/usr/bin/touch /run/udev/gdm-machine-has-virtual-gpu", ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}="1", GOTO="gdm_pci_device_end"
+ATTR{vendor}=="0x1234", ATTR{device}=="0x1111", RUN+="/bin/touch /run/udev/gdm-machine-has-virtual-gpu", ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}="1", GOTO="gdm_pci_device_end"
 
 # disable Wayland on Hi1710 chipsets
 ATTR{vendor}=="0x19e5", ATTR{device}=="0x1711", GOTO="gdm_disable_wayland"
@@ -38,7 +38,7 @@ LABEL="gdm_pci_device_end"
 KERNEL!="card[0-9]*", GOTO="gdm_nomodeset_end"
 SUBSYSTEM!="drm", GOTO="gdm_nomodeset_end"
 IMPORT{parent}="GDM_MACHINE_HAS_VIRTUAL_GPU"
-ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}!="1", RUN+="/usr/bin/touch /run/udev/gdm-machine-has-hardware-gpu"
+ENV{GDM_MACHINE_HAS_VIRTUAL_GPU}!="1", RUN+="/bin/touch /run/udev/gdm-machine-has-hardware-gpu"
 # but keep it enabled for simple framebuffer drivers
 DRIVERS=="simple-framebuffer", GOTO="gdm_nomodeset_end"
 IMPORT{cmdline}="nomodeset", GOTO="gdm_disable_wayland"
@@ -50,7 +50,7 @@ LABEL="gdm_nomodeset_end"
 KERNEL!="nvidia", GOTO="gdm_nvidia_end"
 SUBSYSTEM!="module", GOTO="gdm_nvidia_end"
 ACTION!="add", GOTO="gdm_nvidia_end"
-RUN+="/usr/bin/touch /run/udev/gdm-machine-has-vendor-nvidia-driver"
+RUN+="/bin/touch /run/udev/gdm-machine-has-vendor-nvidia-driver"
 
 # Check if suspend/resume services necessary for working wayland support is available
 TEST{0711}!="/usr/bin/nvidia-sleep.sh", GOTO="gdm_disable_wayland"
@@ -72,7 +72,7 @@ LABEL="gdm_nvidia_end"
 KERNEL!="card[0-9]-eDP-*", GOTO="gdm_laptop_check_end"
 SUBSYSTEM!="drm", GOTO="gdm_laptop_check_end"
 ACTION!="add", GOTO="gdm_laptop_check_end"
-RUN+="/usr/bin/touch /run/udev/gdm-machine-is-laptop"
+RUN+="/bin/touch /run/udev/gdm-machine-is-laptop"
 GOTO="gdm_hybrid_nvidia_laptop_check"
 LABEL="gdm_laptop_check_end"
 
@@ -81,7 +81,7 @@ KERNEL!="card[1-9]*", GOTO="gdm_hybrid_graphics_check_end"
 KERNEL=="card[1-9]-*", GOTO="gdm_hybrid_graphics_check_end"
 SUBSYSTEM!="drm", GOTO="gdm_hybrid_graphics_check_end"
 ACTION!="add", GOTO="gdm_hybrid_graphics_check_end"
-RUN+="/usr/bin/touch /run/udev/gdm-machine-has-hybrid-graphics"
+RUN+="/bin/touch /run/udev/gdm-machine-has-hybrid-graphics"
 LABEL="gdm_hybrid_graphics_check_end"
 
 # If this is a hybrid graphics laptop with vendor nvidia driver, disable wayland
