Patch-Source: https://github.com/aio-libs/multidict/pull/1226
---
From 754ed56975e6204c8b984d279207022fce3d59ac Mon Sep 17 00:00:00 2001
From: "J. Nick Koston" <nick@koston.org>
Date: Sat, 28 Jun 2025 07:36:55 -0500
Subject: [PATCH 1/3] Fix format strings on 32bit platforms

fixes #1225
---
 multidict/_multilib/hashtable.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/multidict/_multilib/hashtable.h b/multidict/_multilib/hashtable.h
index 438acbc90..0e0a28e50 100644
--- a/multidict/_multilib/hashtable.h
+++ b/multidict/_multilib/hashtable.h
@@ -1963,7 +1963,7 @@ static inline int
 _md_dump(MultiDictObject *md)
 {
     htkeys_t *keys = md->keys;
-    printf("Dump %p [%ld from %ld usable %ld nentries %ld]\n",
+    printf("Dump %p [%zd from %zd usable %zd nentries %zd]\n",
            (void *)md,
            md->used,
            htkeys_nslots(keys),
@@ -1971,7 +1971,7 @@ _md_dump(MultiDictObject *md)
            keys->nentries);
     for (Py_ssize_t i = 0; i < htkeys_nslots(keys); i++) {
         Py_ssize_t ix = htkeys_get_index(keys, i);
-        printf("  %ld -> %ld\n", i, ix);
+        printf("  %zd -> %zd\n", i, ix);
     }
     printf("  --------\n");
     entry_t *entries = htkeys_entries(keys);
@@ -1980,9 +1980,9 @@ _md_dump(MultiDictObject *md)
         PyObject *identity = entry->identity;
 
         if (identity == NULL) {
-            printf("  %ld [deleted]\n", i);
+            printf("  %zd [deleted]\n", i);
         } else {
-            printf("  %ld h=%20ld, i=\'", i, entry->hash);
+            printf("  %zd h=%20zd, i=\'", i, entry->hash);
             PyObject_Print(entry->identity, stdout, Py_PRINT_RAW);
             printf("\', k=\'");
             PyObject_Print(entry->key, stdout, Py_PRINT_RAW);

From 0de62b1d7535936b23e64eaed4402db9139ddcf5 Mon Sep 17 00:00:00 2001
From: "J. Nick Koston" <nick@koston.org>
Date: Sat, 28 Jun 2025 07:39:29 -0500
Subject: [PATCH 2/3] Fix format strings on 32bit platforms

fixes #1225
---
 CHANGELOG/1225.bugfix.rst | 1 +
 CHANGELOG/1226.bugfix.rst | 1 +
 2 files changed, 2 insertions(+)
 create mode 120000 CHANGELOG/1225.bugfix.rst
 create mode 100644 CHANGELOG/1226.bugfix.rst

diff --git a/CHANGELOG/1225.bugfix.rst b/CHANGELOG/1225.bugfix.rst
new file mode 120000
index 000000000..81bf8d823
--- /dev/null
+++ b/CHANGELOG/1225.bugfix.rst
@@ -0,0 +1 @@
+1226.bugfix.rst
\ No newline at end of file
diff --git a/CHANGELOG/1226.bugfix.rst b/CHANGELOG/1226.bugfix.rst
new file mode 100644
index 000000000..9f73bd134
--- /dev/null
+++ b/CHANGELOG/1226.bugfix.rst
@@ -0,0 +1 @@
+Fixed format string compilation errors in debug builds on 32-bit platforms by using portable `%zd` format specifiers for `Py_ssize_t` values instead of `%ld`.
\ No newline at end of file

From 23c850edc028041e6d78c5e813bcde42b37bf296 Mon Sep 17 00:00:00 2001
From: "J. Nick Koston" <nick@koston.org>
Date: Sat, 28 Jun 2025 07:39:33 -0500
Subject: [PATCH 3/3] Fix format strings on 32bit platforms

fixes #1225
---
 CHANGELOG/1226.bugfix.rst | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/CHANGELOG/1226.bugfix.rst b/CHANGELOG/1226.bugfix.rst
index 9f73bd134..f47c6c225 100644
--- a/CHANGELOG/1226.bugfix.rst
+++ b/CHANGELOG/1226.bugfix.rst
@@ -1 +1 @@
-Fixed format string compilation errors in debug builds on 32-bit platforms by using portable `%zd` format specifiers for `Py_ssize_t` values instead of `%ld`.
\ No newline at end of file
+Fixed format string compilation errors in debug builds on 32-bit platforms by using portable `%zd` format specifiers for `Py_ssize_t` values instead of `%ld` -- by :user:`bdraco`.
\ No newline at end of file
