gcc14 enables various warnings as errors by default. This causes the code to
check for open_memstream and fmemopen presence to no longer compile. Therefore,
cyclone incorrectly assumes that these features are not available which causes
some SRFI-28 test failures.

See https://github.com/justinethier/cyclone/pull/544

diff -upr cyclone-0.36.0.orig/Makefile.config cyclone-0.36.0/Makefile.config
--- cyclone-0.36.0.orig/Makefile.config	2024-09-22 13:03:40.583675507 +0200
+++ cyclone-0.36.0/Makefile.config	2024-09-22 13:04:49.237232698 +0200
@@ -91,8 +91,8 @@ DESTDIR   ?=
 
 # Automatically detect platform-specific flags, instead of using autoconf
 #CYC_PLATFORM_HAS_MEMSTREAM ?= 1
-CYC_PLATFORM_HAS_MEMSTREAM := $(shell echo "main(){char *buf; int len; open_memstream(&buf, &len);}" | $(CC) -xc - >/dev/null 2>/dev/null && echo 1 || echo 0)
-CYC_PLATFORM_HAS_FMEMOPEN := $(shell echo "main(){char *buf; fmemopen(&buf, 0, \"r\");}" | $(CC) -xc - >/dev/null 2>/dev/null && echo 1 || echo 0)
+CYC_PLATFORM_HAS_MEMSTREAM := $(shell printf "#include <stdio.h>\n%s\n" "int main(void){char *buf; size_t len; open_memstream(&buf, &len);}" | $(CC) -xc - >/dev/null 2>/dev/null && echo 1 || echo 0)
+CYC_PLATFORM_HAS_FMEMOPEN := $(shell printf "#include <stdio.h>\n%s\n" "int main(void){char *buf; fmemopen(&buf, 0, \"r\");}" | $(CC) -xc - >/dev/null 2>/dev/null && echo 1 || echo 0)
 
 # code from chibi's makefile to detect platform
 ifndef PLATFORM
