musl and glibc behave differently when strtod is called on a non-numeric
input. This changes the code to work with both.
diff --color -rupN a/src/spicelib/parser/inpgmod.c b/src/spicelib/parser/inpgmod.c
--- a/src/spicelib/parser/inpgmod.c	2023-12-27 19:58:03.000000000 +0100
+++ b/src/spicelib/parser/inpgmod.c	2024-02-29 18:41:21.981838463 +0100
@@ -156,21 +156,21 @@ create_model(CKTcircuit *ckt, INPmodel *
                             wl_cons(value,
                                     modtmp->INPmodfast->defaults));
             } else {
-
-                double dval;
-
                 /* want only the parameter names in output - not the values */
                 errno = 0;    /* To distinguish success/failure after call */
-                dval = strtod(parm, &endptr);
-                /* Check for various possible errors */
-                if ((errno == ERANGE && dval == HUGE_VAL) || errno != 0) {
-                    perror("strtod");
-                    controlled_exit(EXIT_FAILURE);
+                (void)strtod(parm, &endptr);
+                /* check if parsing happened */
+                if (endptr == parm) {
+                    if ((errno == EINVAL) || (errno == 0)) {
+                        /* it was no number - it is really a string */
+                        err = INPerrCat(err,
+                                        tprintf("unrecognized parameter (%s) - ignored",
+                                                parm));
+                    } else {
+                        perror("strtod");
+                        controlled_exit(EXIT_FAILURE);
+                    }
                 }
-                if (endptr == parm) /* it was no number - it is really a string */
-                    err = INPerrCat(err,
-                                    tprintf("unrecognized parameter (%s) - ignored",
-                                            parm));
             }
         }
         FREE(parm);
