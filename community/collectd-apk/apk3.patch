diff --git a/apk.c b/apk.c
index 9dba4a4..e93fb87 100644
--- a/apk.c
+++ b/apk.c
@@ -39,9 +39,6 @@
 
 #define UNUSED __attribute__((unused))
 
-extern unsigned int apk_flags;
-extern int apk_verbosity;
-
 // Override function from libapk defined in src/print.c.
 void apk_log (const char UNUSED *_prefix, const char *format, ...) {
 	va_list ap;
@@ -169,21 +166,24 @@ static json_object *apk_change_to_json (struct apk_change *change) {
 static int find_upgradable_pkgs (struct apk_database *db, json_object *array) {
 	assert(db && db->open_complete);
 	assert(json_object_is_type(array, json_type_array));
-
 	struct apk_changeset changeset = {0};
+	int ret = 0;
+
+	apk_change_array_init(&changeset.changes);
 	if (apk_solver_solve(db, APK_SOLVERF_UPGRADE, db->world, &changeset) != 0) {
-		return -1;
+		ret = -1;
+		goto ret;
 	}
 
-	struct apk_change *change;
-	foreach_array_item(change, changeset.changes) {
+	apk_array_foreach(change, changeset.changes) {
 		if (change->old_pkg != change->new_pkg) {
 			json_object_array_add(array, apk_change_to_json(change));
 		}
 	}
-	apk_change_array_free(&changeset.changes);
 
-	return 0;
+ret:
+	apk_change_array_free(&changeset.changes);
+	return ret;
 }
 
 static int apk_upgradable_read (void) {
@@ -192,15 +192,21 @@ static int apk_upgradable_read (void) {
 	json_object *pkgs = json_object_new_array();
 	meta_data_t *meta = meta_data_create();
 
-	struct apk_db_options db_opts = {0};
-	list_init(&db_opts.repository_list);
-	db_opts.open_flags = APK_OPENF_READ | APK_OPENF_NO_AUTOUPDATE;
+	apk_crypto_init();
+
+	struct apk_ctx ac = {0};
+	apk_ctx_init(&ac);
+	// Cached APKINDEXes may be outdated and we would need root privileges to
+	// update them, so better to always fetch fresh APKINDEXes in-memory.
+	ac.flags = APK_NO_CACHE | APK_SIMULATE;
+	ac.open_flags = APK_OPENF_READ | APK_OPENF_NO_AUTOUPDATE;
+	apk_ctx_prepare(&ac);
 
 	struct apk_database db;
-	apk_db_init(&db);
+	apk_db_init(&db, &ac);
 
 	int r = 0;
-	if ((r = apk_db_open(&db, &db_opts)) != 0) {
+	if ((r = apk_db_open(&db)) != 0) {
 		log_err("failed to open apk database: %s", apk_error_str(r));
 		goto done;
 	}
@@ -230,9 +236,7 @@ static int apk_upgradable_read (void) {
 
 	rc = 0;
 done:
-	if (db.open_complete) {
-		apk_db_close(&db);
-	}
+	apk_db_close(&db);
 	meta_data_destroy(meta);
 	json_object_put(pkgs);
 
@@ -241,10 +245,6 @@ done:
 
 // cppcheck-suppress unusedFunction
 void module_register (void) {
-	// Cached APKINDEXes may be outdated and we would need root privileges to
-	// update them, so better to always fetch fresh APKINDEXes in-memory.
-	apk_flags = APK_NO_CACHE | APK_SIMULATE;
-
 	INFO("registering plugin " PLUGIN_NAME " " PLUGIN_VERSION);
 	plugin_register_read(PLUGIN_NAME, apk_upgradable_read);
 }
