commit 3414163
Author: Pablo Correa GÃ³mez <ablocorrea@hotmail.com>
Date:   Mon Apr 22 21:45:04 2024 +0200

    fix(apk-tools,apk-polkit-rs): APK_SIGN_NONE has been removed
    
    And seems to be no way to reproduce the previous behavior, so remove
    it from everything but from new to avoid breaking our API
    
    Ref https://gitlab.alpinelinux.org/alpine/apk-tools/-/commit/70dc66a6f2bd4a40cbd442daedbeafb4507f28c3

diff --git a/apk-polkit-rs/src/dbus_server.rs b/apk-polkit-rs/src/dbus_server.rs
index e13dcef..57bda79 100644
--- a/apk-polkit-rs/src/dbus_server.rs
+++ b/apk-polkit-rs/src/dbus_server.rs
@@ -18,7 +18,6 @@ use zbus::{self, dbus_interface, Connection, MessageHeader};
 
 #[derive(Default)]
 pub struct DBusServer {
-    allow_untrusted_repos: bool,
     additional_repo_uri: Option<String>,
     root: Option<String>,
 }
@@ -30,12 +29,11 @@ pub struct ApkRepositoryDBus(ApkRepository);
 impl DBusServer {
     #[cfg(test)]
     pub fn new(
-        allow_untrusted_repos: bool,
+        _allow_untrusted_repos: bool,
         additional_repo_uri: Option<String>,
         root: Option<String>,
     ) -> Self {
         Self {
-            allow_untrusted_repos,
             additional_repo_uri,
             root,
         }
@@ -204,7 +202,7 @@ impl DBusServer {
     ) -> error::Result<()> {
         DBusServer::check_polkit_auth("UpdateRepositories", &header, connection).await?;
         let mut db = self.create_database(false)?;
-        db.update_repositories(self.allow_untrusted_repos)?;
+        db.update_repositories()?;
         Command::new("alpine-appstream-downloader").output()?;
         Ok(())
     }
diff --git a/apk-tools/src/apk_database.rs b/apk-tools/src/apk_database.rs
index c7877f4..ee50325 100644
--- a/apk-tools/src/apk_database.rs
+++ b/apk-tools/src/apk_database.rs
@@ -577,10 +577,7 @@ impl ApkDatabase {
      * Updates all available repositories. Returns `false` if updating one of the repositories
      * went wrong.
      */
-    pub fn update_repositories(
-        &mut self,
-        allow_untrusted_repositories: bool,
-    ) -> Result<(), Errors> {
+    pub fn update_repositories(&mut self) -> Result<(), Errors> {
         let mut err_vec = Vec::new();
         info!("Updating repositories");
 
@@ -588,7 +585,7 @@ impl ApkDatabase {
             if i == APK_REPOSITORY_CACHED {
                 continue;
             }
-            if let Err(e) = self.update_repository(i, allow_untrusted_repositories) {
+            if let Err(e) = self.update_repository(i) {
                 err_vec.push(e);
             }
         }
@@ -754,29 +751,19 @@ impl ApkDatabase {
         }
     }
 
-    fn update_repository(
-        &mut self,
-        repo_num: u32,
-        allow_untrusted_repositories: bool,
-    ) -> Result<(), Error> {
+    fn update_repository(&mut self, repo_num: u32) -> Result<(), Error> {
         trace!(
             "Updating repository {}",
             unsafe { CStr::from_ptr(self.db.repos[usize::try_from(repo_num).unwrap()].url) }
                 .to_str()
                 .unwrap(),
         );
-        let apk_verify = if allow_untrusted_repositories {
-            warn!("Allowing untrusted repos!");
-            APK_SIGN_NONE
-        } else {
-            APK_SIGN_VERIFY
-        };
         let download_res = unsafe {
             apk_cache_download(
                 self.db.as_mut(),
                 &mut self.db.repos[usize::try_from(repo_num).unwrap()],
                 null_mut(),
-                i32::try_from(apk_verify)?,
+                i32::try_from(APK_SIGN_VERIFY)?,
                 0,
                 None,
                 null_mut(),
