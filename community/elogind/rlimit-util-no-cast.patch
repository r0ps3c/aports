Patch-Source: https://github.com/elogind/elogind/pull/295
---
From b3577b79d2b88e4a87950814ec1e35cf548c0a8d Mon Sep 17 00:00:00 2001
From: fossdd <fossdd@pwned.life>
Date: Tue, 3 Dec 2024 09:31:29 +0100
Subject: [PATCH] rlimit-util: Remove musl-specific uinitmax cast

rl.rlim_cur already has type 'long unsigned int', also on musl libc.

Otherwise build on musl fails with:

../src/basic/rlimit-util.c:417:47: error: format '%llu' expects argument of type 'long long unsigned int', but argument 7 has type 'long unsigned int' [-Werror=format=]
  417 |                 return log_debug_errno(errno, "Failed to lower RLIMIT_NOFILE's soft limit to " RLIM_FMT ": %m", (uintmax_t)rl.rlim_cur);
      |                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                  ~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                                                 |
      |                                                                                                                 long unsigned int
---
 src/basic/rlimit-util.c | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/src/basic/rlimit-util.c b/src/basic/rlimit-util.c
index 091c111df7..59bdc35a06 100644
--- a/src/basic/rlimit-util.c
+++ b/src/basic/rlimit-util.c
@@ -428,11 +428,7 @@ int rlimit_nofile_safe(void) {
         rl.rlim_max = MIN(rl.rlim_max, (rlim_t) read_nr_open());
         rl.rlim_cur = MIN((rlim_t) FD_SETSIZE, rl.rlim_max);
         if (setrlimit(RLIMIT_NOFILE, &rl) < 0)
-#ifdef __GLIBC__ /// To be compatible with musl-libc, elogind uses an (uintmax_t) cast.
                 return log_debug_errno(errno, "Failed to lower RLIMIT_NOFILE's soft limit to " RLIM_FMT ": %m", rl.rlim_cur);
-#else // __GLIBC__
-                return log_debug_errno(errno, "Failed to lower RLIMIT_NOFILE's soft limit to " RLIM_FMT ": %m", (uintmax_t)rl.rlim_cur);
-#endif // __GLIBC__
 
         return 1;
 }
