diff --git a/src/3rdparty/chromium/BUILD.gn b/src/3rdparty/chromium/BUILD.gn
index 07c18edc73..ffe980226f 100644
--- a/src/3rdparty/chromium/BUILD.gn
+++ b/src/3rdparty/chromium/BUILD.gn
@@ -1699,8 +1699,7 @@ if (use_blink && !is_cronet_build) {
 
 # TODO(cassew): Add more OS's that don't support x86.
 is_valid_x86_target =
-    target_os != "ios" && target_os != "mac" &&
-    (target_os != "linux" || use_libfuzzer || !build_with_chromium)
+    target_os != "ios" && target_os != "mac"
 
 # Note: v8_target_cpu == arm allows using the V8 arm simulator on x86 for fuzzing.
 assert(
diff --git a/src/3rdparty/chromium/v8/BUILD.gn b/src/3rdparty/chromium/v8/BUILD.gn
index dcc3acbf8b..3123dbb93c 100644
--- a/src/3rdparty/chromium/v8/BUILD.gn
+++ b/src/3rdparty/chromium/v8/BUILD.gn
@@ -784,7 +784,7 @@ config("internal_config") {
     defines += [ "BUILDING_V8_SHARED" ]
   }
 
-  if (v8_current_cpu == "riscv64" || v8_current_cpu == "riscv32") {
+  if (v8_current_cpu == "riscv64" || v8_current_cpu == "riscv32" || v8_current_cpu == "x86") {
     if (!is_clang) {
       libs = [ "atomic" ]
     }
@@ -6396,6 +6396,7 @@ v8_source_set("v8_base_without_compiler") {
       v8_current_cpu == "ppc64" ||
       (current_os != "zos" &&
        (v8_current_cpu == "s390" || v8_current_cpu == "s390x")) ||
+      v8_current_cpu == "x86" ||
       v8_current_cpu == "riscv64" || v8_current_cpu == "riscv32") {
     if (!is_clang) {
       libs += [ "atomic" ]
@@ -6807,7 +6808,7 @@ v8_component("v8_libbase") {
     sources += [ "src/base/ubsan.cc" ]
   }
 
-  if (v8_current_cpu == "riscv64" || v8_current_cpu == "riscv32") {
+  if (v8_current_cpu == "riscv64" || v8_current_cpu == "riscv32" || v8_current_cpu == "x86") {
     if (!is_clang) {
       libs += [ "atomic" ]
     }
