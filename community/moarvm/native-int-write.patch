Patch-Source: https://github.com/MoarVM/MoarVM/commit/14f4f2a93a76c1b76a0875a4a7d387eb165dce8d
--
From 14f4f2a93a76c1b76a0875a4a7d387eb165dce8d Mon Sep 17 00:00:00 2001
From: Elizabeth Mattijsen <liz@raku.rocks>
Date: Mon, 24 Mar 2025 13:41:25 +0100
Subject: [PATCH] Add 32bit/64bit native int write support

Following up on https://github.com/rakudo/rakudo/issues/5776
---
 src/io/io.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/src/io/io.c b/src/io/io.c
index 19604cec70..c2871214bc 100644
--- a/src/io/io.c
+++ b/src/io/io.c
@@ -151,8 +151,18 @@ void MVM_io_write_bytes(MVMThreadContext *tc, MVMObject *oshandle, MVMObject *bu
         output_size = ((MVMArray *)buffer)->body.elems * sizeof(MVMuint16);
         output = (char *)(((MVMArray *)buffer)->body.slots.i16 + ((MVMArray *)buffer)->body.start);
     }
+    else if (((MVMArrayREPRData *)STABLE(buffer)->REPR_data)->slot_type == MVM_ARRAY_U32
+        || ((MVMArrayREPRData *)STABLE(buffer)->REPR_data)->slot_type == MVM_ARRAY_I32) {
+        output_size = ((MVMArray *)buffer)->body.elems * sizeof(MVMuint32);
+        output = (char *)(((MVMArray *)buffer)->body.slots.i32 + ((MVMArray *)buffer)->body.start);
+    }
+    else if (((MVMArrayREPRData *)STABLE(buffer)->REPR_data)->slot_type == MVM_ARRAY_U64
+        || ((MVMArrayREPRData *)STABLE(buffer)->REPR_data)->slot_type == MVM_ARRAY_I64) {
+        output_size = ((MVMArray *)buffer)->body.elems * sizeof(MVMuint64);
+        output = (char *)(((MVMArray *)buffer)->body.slots.i64 + ((MVMArray *)buffer)->body.start);
+    }
     else
-        MVM_exception_throw_adhoc(tc, "write_fhb requires a native array of uint8, int8, uint16 or int16");
+        MVM_exception_throw_adhoc(tc, "write_fhb requires a native array of (u)int8/16/32/64");
 
     if (handle->body.ops->sync_writable) {
         MVMROOT(tc, handle) {
