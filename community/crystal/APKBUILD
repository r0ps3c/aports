# Contributor: Jakub Jirutka <jakub@jirutka.cz>
# Contributor: Milan P. StaniÄ‡ <mps@arvanta.net>
# Maintainer: Jakub Jirutka <jakub@jirutka.cz>
pkgname=crystal
pkgver=1.9.2
pkgrel=0
_bootver=1.8.2
_llvmver=16
pkgdesc="The Crystal Programming Language"
url="https://crystal-lang.org/"
arch="x86_64 aarch64"
license="Apache-2.0"
depends="
	gc-dev
	gcc
	gmp-dev
	libatomic_ops
	libevent-dev
	libevent-static
	musl-dev
	pcre2-dev
	"
checkdepends="
	openssl-dev
	tzdata
	yaml-dev
	zlib-dev
	"
makedepends="
	libxml2-dev
	llvm$_llvmver-dev
	"
[ "$BUILD_STATIC" -eq 1 ] && makedepends="$makedepends
	libxml2-static
	llvm$_llvmver-static
	zlib-static
	zstd-static
	"
subpackages="$pkgname-doc
	$pkgname-bash-completion
	$pkgname-zsh-completion
	"
source="$pkgname-$pkgver.tar.gz::https://github.com/crystal-lang/$pkgname/archive/$pkgver.tar.gz
	https://dev.alpinelinux.org/archive/crystal/crystal-$_bootver-x86_64-alpine-linux-musl.tar.gz
	https://dev.alpinelinux.org/archive/crystal/crystal-$_bootver-aarch64-alpine-linux-musl.tar.gz
	"

_coredir="/usr/lib/$pkgname/core"
_shardsdir="/usr/lib/$pkgname/shards"

export CRYSTAL_CONFIG_VERSION="$pkgver"
export CRYSTAL_CACHE_DIR="$srcdir/.cache"
export LLVM_CONFIG="/usr/lib/llvm$_llvmver/bin/llvm-config"

# Build static crystal binary and upload it to dev.a.o, so it can be used
# for building crystal next time (needed for bootstrapping).
# NOTE: After https://github.com/crystal-lang/crystal/issues/5689 is fixed,
# we can also use prebuilt binary from upstream if needed.
snapshot() {
	local binary="$builddir/.build/crystal"
	local tarname="$pkgname-$pkgver-$CTARGET"

	if [ ! -f "$binary" ] || ! file "$binary" | grep -qw 'statically linked'; then
		msg "Building statically linked crystal..."
		BUILD_STATIC=1 \
			abuild deps clean unpack prepare build
	fi

	cd "$srcdir"

	strip "$builddir"/.build/crystal
	install -D -m 755 "$builddir"/.build/crystal "$tarname"/bin/crystal
	tar -czf "$tarname.tar.gz" "$tarname"

	msg "Uploading $tarname.tar.gz to dev.alpinelinux.org"
	scp "$tarname.tar.gz" dev.alpinelinux.org:/archive/$pkgname/

	APKBUILD="../APKBUILD" abuild undeps
}

prepare() {
	default_prepare

	# FIXME: These specs fail with invalid memory access.
	rm spec/compiler/compiler_spec.cr

	cat > Makefile.local <<-EOF
		progress = 1
		threads = ${JOBS:-2}
		verbose = 1
		FLAGS = --verbose --target $CTARGET ${BUILD_STATIC:+"--link-flags=-no-pie"}
		LLVM_CONFIG = $LLVM_CONFIG
	EOF
}

build() {
	make crystal \
		CRYSTAL_CONFIG_BUILD_COMMIT= \
		CRYSTAL_CONFIG_PATH="lib:$_shardsdir:$_coredir" \
		PATH="$srcdir/$pkgname-$_bootver-$CBUILD/bin:$PATH" \
		release=1 \
		static=${BUILD_STATIC:-}
}

check() {
	make std_spec threads=1 SPEC_FLAGS='--no-color --verbose'

	find samples -name '*.cr' -print0 | xargs -0 -tn 1 ./bin/crystal build --no-codegen

	# Takes ~1 hour on x86_64, ~1.5 hour on aarch64.
	#make compiler_spec threads=1 SPEC_FLAGS='--no-color --verbose'
}

package() {
	install -D -m 755 .build/crystal "$pkgdir"/usr/bin/crystal
	install -D -m 644 man/crystal.1 "$pkgdir"/usr/share/man/man1/crystal.1

	mkdir -p "$pkgdir$_coredir" "$pkgdir$_shardsdir"
	cp -r src/* "$pkgdir$_coredir"/

	install -D -m 644 etc/completion.bash \
		"$pkgdir"/usr/share/bash-completion/completions/$pkgname
	install -D -m 644 etc/completion.zsh \
		"$pkgdir"/usr/share/zsh/site-functions/_$pkgname

	rm "$pkgdir$_coredir"/llvm/ext/llvm_ext.o
}

sha512sums="
9356b7e267bfa2183af2184e633cd91ef23487e46e73db33f4363ce4fcf5515349555dfd5c056a0616855e49cff4bbab07d1eeed84e087ae469bfc0eb49b63b1  crystal-1.9.2.tar.gz
d89f136811f00c4e114a47cc9ba0ac4455cc6f7034e2a80da879ed51bb0c451c9c03f13f5b1c8350abb4670726f8b5a86d65db62c909c89a9e7406b2a2e66483  crystal-1.8.2-x86_64-alpine-linux-musl.tar.gz
534dcaaebc1c1a245c54413a849be1e37e3a2e3fa5618312d522a1a4374e519eede11b47e639c9a169dea7b355c637d3c31385d3e75cd5f7979d921c1ea221df  crystal-1.8.2-aarch64-alpine-linux-musl.tar.gz
"
