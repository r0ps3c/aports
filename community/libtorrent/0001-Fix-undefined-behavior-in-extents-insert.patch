From e887ee1115d46fdbffc0649a6de9e9791617863d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=B6ren=20Tempel?= <soeren+git@soeren-tempel.net>
Date: Wed, 12 Feb 2025 01:01:04 +0100
Subject: [PATCH] Fix undefined behavior in extents::insert

The extents::insert may dereference the end iterator, which is undefined
behavior. This occurs when there is no element that is greater than the
specified key. In which case, iter will point to the element before the
end pointer, the loop body will then increment the iter (causing it
to point to the end pointer) and dereference it, unless there is an
overlap.
---
 src/torrent/utils/extents.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/torrent/utils/extents.h b/src/torrent/utils/extents.h
index 64605d4a..9933b57d 100644
--- a/src/torrent/utils/extents.h
+++ b/src/torrent/utils/extents.h
@@ -64,7 +64,7 @@ void extents<Address, Value, Compare>::insert(key_type address_start, key_type a
     if(do_delete_due_to_overlap || do_delete_due_to_total_overlap) {
       range_map.erase (delete_key);
     }
-    else {
+    else if (iter != range_map.end()) {
       ignore_due_to_total_overlap = ignore_due_to_total_overlap || ( iter->first <= address_start && (iter->second).first >= address_end );
     }
   }
