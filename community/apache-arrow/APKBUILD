# Contributor: Duncan Bellamy <dunk@denkimushi.com>
# Maintainer: Duncan Bellamy <dunk@denkimushi.com>
pkgname=apache-arrow
pkgver=20.0.0
pkgrel=1
_dotver=${pkgver//./}
pkgdesc="multi-language toolbox for accelerated data interchange and in-memory processing"
url="https://arrow.apache.org/"
arch="all"
license="Apache-2.0"
_py3depends="
	cython
	py3-gpep517
	py3-numpy-dev
	py3-setuptools
	py3-setuptools_scm
	py3-typing-extensions
	py3-wheel
	python3-dev
	"
makedepends="
	abseil-cpp-dev
	apache-orc-dev
	boost-dev
	brotli-dev
	bzip2-dev
	cmake
	glog-dev
	grpc-dev
	gtest-dev
	lz4-dev
	openssl-dev>3
	protobuf-dev
	rapidjson-dev
	re2-dev
	samurai
	snappy-dev
	thrift-dev
	utf8proc-dev
	zlib-dev
	zstd-dev
	$_py3depends
	"
_py3checkdepends="
	py3-cffi
	py3-hypothesis
	py3-pandas
	py3-pytest
	py3-pytest-xdist
	"
checkdepends="bash grep gzip perl python3 tzdata $_py3checkdepends"
somask="libarrow_python.so.$_dotver libarrow_python_flight.so.$_dotver libarrow_python_parquet_encryption.so.$_dotver"
subpackages="
	$pkgname-dev
	$pkgname-doc
	$pkgname-gdb
	py3-pyarrow-pyc
	py3-pyarrow:python_arrow
	libarrow:lib
	libarrow_acero:lib
	libarrow_dataset:lib
	libarrow_flight:lib
	libparquet:lib
	"
_arrowsha="d2a13712303498963395318a4eb42872e66aead7"
_parquetsha="18d17540097fca7c40be3d42c167e6bfad90763c"
# cpp/thirdparty/versions.txt
_mimalloc_ver=2.0.6
source="https://archive.apache.org/dist/arrow/arrow-$pkgver/apache-arrow-$pkgver.tar.gz
	$pkgname-arrow-testing-$_arrowsha.tar.gz::https://github.com/apache/arrow-testing/archive/$_arrowsha.tar.gz
	$pkgname-parquet-testing-$_parquetsha.tar.gz::https://github.com/apache/parquet-testing/archive/$_parquetsha.tar.gz
	mimalloc-$_mimalloc_ver.tar.gz::https://github.com/microsoft/mimalloc/archive/v$_mimalloc_ver.tar.gz
	"

case "$CARCH" in
aarch64|x86|x86_64)
	makedepends="$makedepends xsimd-dev"
	;;
esac

build() {
	if [ "$CBUILD" != "$CHOST" ]; then
		CMAKE_CROSSOPTS="-DCMAKE_SYSTEM_NAME=Linux -DCMAKE_HOST_SYSTEM_NAME=Linux"
	fi
	local _tests="$(want_check && echo ON || echo OFF)"
	case "$CARCH" in
	aarch64|x86|x86_64)
		local _SIMD="MAX" ;;
	arm*)
		local _CPU="-DARROW_CPU_FLAG=aarch32"
		local _SIMD="NONE" ;;
	ppc64le)
		_tests=OFF
		_SIMD="NONE" ;;
	*)
		_SIMD="NONE" ;;
	esac

	export CFLAGS="$CFLAGS -O2 -DNDEBUG"
	export CXXFLAGS="$CXXFLAGS -O2 -DNDEBUG"

	export ARROW_MIMALLOC_URL="$srcdir/mimalloc-$_mimalloc_ver"
	cmake -B build-cpp -G Ninja \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_INSTALL_LIBDIR=lib \
		-DCMAKE_BUILD_TYPE=MinSizeRel \
		-DARROW_BUILD_STATIC=OFF \
		-DARROW_DEPENDENCY_SOURCE=SYSTEM \
		-DARROW_RUNTIME_SIMD_LEVEL="$_SIMD" \
		-DARROW_BUILD_EXAMPLES=OFF \
		-DARROW_BUILD_TESTS="$_tests" \
		-DARROW_COMPUTE=ON \
		-DARROW_CSV=ON \
		-DARROW_DATASET=ON \
		-DARROW_FILESYSTEM=ON \
		-DARROW_FLIGHT=ON \
		-DARROW_HDFS=ON \
		-DARROW_JSON=ON \
		-DARROW_PARQUET=ON \
		-DARROW_SIMD_LEVEL="NONE" \
		-DARROW_TENSORFLOW=ON \
		-DARROW_USE_GLOG=ON \
		-DARROW_ORC=ON \
		-DARROW_WITH_BROTLI=ON \
		-DARROW_WITH_BZ2=ON \
		-DARROW_WITH_LZ4=ON \
		-DARROW_WITH_MUSL=ON \
		-DARROW_WITH_SNAPPY=ON \
		-DARROW_WITH_ZLIB=ON \
		-DARROW_WITH_ZSTD=ON \
		-DPARQUET_REQUIRE_ENCRYPTION=ON "$_CPU"\
		-S cpp \
		$CMAKE_CROSSOPTS
	cmake3.5 --build build-cpp

	# install in Arrow_DIR for python build to find
	DESTDIR="$builddir/dist-cpp" cmake --install build-cpp

	cd python
	export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver
	export Arrow_DIR="$builddir/dist-cpp/usr"
	export ArrowAcero_DIR="$Arrow_DIR"
	export ArrowDataset_DIR="$Arrow_DIR"
	export ArrowFlight_DIR="$Arrow_DIR"
	export Parquet_DIR="$Arrow_DIR"
	export PYARROW_CMAKE_OPTIONS="-DARROW_RUNTIME_SIMD_LEVEL=$_SIMD $_CPU"
	gpep517 build-wheel \
		--wheel-dir .dist \
		--output-fd 3 3>&1 >&2
}

check() {
	export PARQUET_TEST_DATA="$srcdir/parquet-testing-$_parquetsha/data"
	export ARROW_TEST_DATA="$srcdir/arrow-testing-$_arrowsha/data"
	python3 -m venv --clear --without-pip --system-site-packages .testenv
	local _pypath=".testenv$(.testenv/bin/python3 -c 'import site; print(site.getsitepackages()[0].partition(".testenv")[2])')/pyarrow/tests"
	.testenv/bin/python3 -m installer python/.dist/*.whl

	case "$CARCH" in
	arm*)
		local _extratests="|arrow-flight-test"
		local _pyextratests="--deselect=$_pypath/test_flight.py --deselect=$_pypath/test_dataset.py"
		;;
	s390x)
		local _extratests="|arrow-dataset-file-parquet-test|arrow-dataset-file-parquet-encryption-test|arrow-ipc-message-internal-test|\
parquet-internals-test|parquet-reader-test|parquet-arrow-test|parquet-arrow-internals-test|parquet-encryption-test"
		;;
	ppc64le) return ;;
	esac
	# exclude broken tests
	ctest -j4 --test-dir build-cpp -E "arrow-compute-scalar-temporal-test|arrow-orc-adapter-test$_extratests"

	#python tests broken on s390x
	[ "$CARCH" == "s390x" ] && return
	PARQUET_TEST_DATA="$srcdir/parquet-testing-$_parquetsha/data" \
	LD_LIBRARY_PATH="$PWD/dist-cpp/usr/lib:$LD_LIBRARY_PATH" \
	.testenv/bin/python3 -m pytest -n4 --pyargs pyarrow \
		--deselect="$_pypath"/test_orc.py::test_timezone_database_absent \
		--deselect="$_pypath"/test_orc.py::test_timezone_absent \
		--deselect="$_pypath"/test_extension_type.py::test_cpp_extension_in_python \
		--deselect="$_pypath"/test_cython.py::test_visit_strings \
		--deselect="$_pypath"/test_cython.py::test_cython_api $_pyextratests
}

package() {
	DESTDIR="$pkgdir" cmake --install build-cpp

	cd python
	python3 -m installer -d "$pkgdir" .dist/*.whl

	rm -r "$pkgdir"/usr/lib/python3*/site-packages/pyarrow/tests
}

python_arrow() {
	pkgdesc="$pkgdesc (python module)"
	depends="python3 py3-cffi py3-numpy"

	# renamed from this to avoid confusion as in python this is "pyarrow"
	provides="py3-apache-arrow=$pkgver-r$pkgrel"
	replaces="py3-apache-arrow"

	amove usr/lib/python3*
}

gdb() {
	pkgdesc="$pkgdesc (gdb integration)"
	install_if="$pkgname=$pkgver-r$pkgrel gdb"

	amove \
		usr/share/arrow/gdb/ \
		usr/share/gdb/
}

lib() {
	pkgdesc="$pkgdesc ($subpkgname library)"
	depends="$pkgname=$pkgver-r$pkgrel"

	amove usr/lib/$subpkgname.so.*
}

sha512sums="
067e62d7d311cebfca43473b0aacaacc534da47c3450b75328517df69281d8be1e79b0430cc7e975eb613e05c62a62d6ca92a4c4f7882ae7733f826d774d9081  apache-arrow-20.0.0.tar.gz
e6b76e4ab34744bc804ecfe5baba3e1f483c874f883cc44e8e2504a718b847cb05f0c7559e40a446deab99da20d1f9bbfe03d553ee2bb5543bef889c2b555259  apache-arrow-arrow-testing-d2a13712303498963395318a4eb42872e66aead7.tar.gz
2cadc694e6cd2e52869b4ff0d2659c77c613fc870b54ca7f4cb64068d0e7956723549b6d5513a117a2e147d4161e2fcdbe15992a3d8e56306b25923676f182a0  apache-arrow-parquet-testing-18d17540097fca7c40be3d42c167e6bfad90763c.tar.gz
f2fc0fbfb6384e85959897f129e5d5d9acc51bda536d5cabcd7d4177dbda9fb735b8a8c239b961f8bea31d37c9ae10f66da23aa91d497f95393253d4ac792bb3  mimalloc-2.0.6.tar.gz
"
