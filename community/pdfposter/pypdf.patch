diff --git a/pdftools/pdfposter/__init__.py b/pdftools/pdfposter/__init__.py
index 051e139..c32d100 100644
--- a/pdftools/pdfposter/__init__.py
+++ b/pdftools/pdfposter/__init__.py
@@ -24,9 +24,9 @@ __copyright__ = "Copyright 2008-2022 by Hartmut Goebel <h.goebel@crazy-compilers
 __license__ = "SPDX-License-Identifier: GPL-3.0-or-later"
 __version__ = "0.8.1"
 
-from PyPDF2 import PdfWriter, PdfReader, PageObject
-from PyPDF2.types import NameObject
-from PyPDF2.generic import ContentStream, RectangleObject, IndirectObject
+from pypdf import PdfWriter, PdfReader, PageObject
+from pypdf.types import NameObject
+from pypdf.generic import ContentStream, RectangleObject, IndirectObject
 
 import logging
 from logging import log
diff --git a/pdftools/pdfposter/cmd.py b/pdftools/pdfposter/cmd.py
index d7dee2a..a0c0c4b 100644
--- a/pdftools/pdfposter/cmd.py
+++ b/pdftools/pdfposter/cmd.py
@@ -27,7 +27,7 @@ __license__ = "SPDX-License-Identifier: GPL-3.0-or-later"
 
 from . import main, __version__, DEFAULT_MEDIASIZE, papersizes, DecryptionError
 import re
-import PyPDF2.errors
+import pypdf.errors
 import argparse
 
 # pattern for parsing user textual box spec
@@ -192,7 +192,7 @@ def run(args=None):
         main(args, infilename=args.infilename, outfilename=args.outfilename)
     except DecryptionError as e:
         raise SystemExit(str(e))
-    except PyPDF2.errors.PdfReadError as e:
+    except pypdf.errors.PdfReadError as e:
         parser.error('The input-file is either currupt or no PDF at all: %s'
                      % e)
 
diff --git a/test/functional/test_end_to_end.py b/test/functional/test_end_to_end.py
index f8b8295..96dcad1 100644
--- a/test/functional/test_end_to_end.py
+++ b/test/functional/test_end_to_end.py
@@ -19,13 +19,13 @@ import pytest
 import os, sys
 
 from pdftools.pdfposter import cmd
-import PyPDF2
+import pypdf
 
 CHESSBOARD = os.path.join(os.path.dirname(__file__), '..', 'chessboard.pdf')
 
 def get_num_pages(filename):
     with open(filename, 'rb') as fh:
-        reader = PyPDF2.PdfReader(fh)
+        reader = pypdf.PdfReader(fh)
         return len(reader.pages)
 
 def test_without_options(tmpdir):
diff --git a/test/gen-allboxespage.py b/test/gen-allboxespage.py
index b2a6240..bfd4152 100644
--- a/test/gen-allboxespage.py
+++ b/test/gen-allboxespage.py
@@ -37,8 +37,8 @@ from reportlab.lib.colors import black, white, pink, lightblue, blue
 from reportlab.lib.pagesizes import A4, legal, landscape
 from reportlab.pdfgen.canvas import Canvas
 
-from PyPDF2 import PdfFileWriter, PdfFileReader
-from PyPDF2.generic import RectangleObject
+from pypdf import PdfFileWriter, PdfFileReader
+from pypdf.generic import RectangleObject
 
 def draw_box(canvas, color, x,y, width,height, text=None):
     canvas.setStrokeColorRGB(*color)
diff --git a/test/gen-trimmedpage.py b/test/gen-trimmedpage.py
index 157bfc0..92a1b7b 100644
--- a/test/gen-trimmedpage.py
+++ b/test/gen-trimmedpage.py
@@ -40,8 +40,8 @@ from reportlab.lib.colors import black, white, pink, lightblue, blue
 from reportlab.lib.pagesizes import A4, legal, landscape
 from reportlab.pdfgen.canvas import Canvas
 
-from PyPDF2 import PdfFileWriter, PdfFileReader
-from PyPDF2.generic import RectangleObject
+from pypdf import PdfFileWriter, PdfFileReader
+from pypdf.generic import RectangleObject
 
 def draw_box(canvas, color, x,y, width,height, text=None):
     canvas.setStrokeColorRGB(*color)
