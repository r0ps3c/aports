diff --git a/dask/_compatibility.py b/dask/_compatibility.py
index ba2a898..62c2870 100644
--- a/dask/_compatibility.py
+++ b/dask/_compatibility.py
@@ -1,7 +1,7 @@
 import sys
 import warnings
 
-from importlib_metadata import entry_points as _entry_points
+from importlib.metadata import entry_points as _entry_points
 from packaging.version import parse as parse_version
 
 PY_VERSION = parse_version(".".join(map(str, sys.version_info[:3])))
diff --git a/dask/backends.py b/dask/backends.py
index d79030e..ffce7e2 100644
--- a/dask/backends.py
+++ b/dask/backends.py
@@ -3,7 +3,7 @@ from __future__ import annotations
 from functools import lru_cache, wraps
 from typing import TYPE_CHECKING, Callable, Generic, TypeVar
 
-import importlib_metadata
+import importlib.metadata
 
 from dask import config
 from dask.utils import funcname
@@ -40,7 +40,7 @@ class DaskBackendEntrypoint:
 @lru_cache(maxsize=1)
 def detect_entrypoints(entry_point_name):
     return {
-        ep.name: ep for ep in importlib_metadata.entry_points(group=entry_point_name)
+        ep.name: ep for ep in importlib.metadata.entry_points(group=entry_point_name)
     }
 
 
diff --git a/dask/cli.py b/dask/cli.py
index 21eda99..b21e9d3 100644
--- a/dask/cli.py
+++ b/dask/cli.py
@@ -2,7 +2,7 @@ import warnings
 from functools import reduce
 
 import click
-import importlib_metadata
+import importlib.metadata
 from yaml import dump
 
 import dask
@@ -114,7 +114,7 @@ def run_cli():
 
     # discover "dask_cli" entry points and try to register them to the
     # top level `cli`.
-    for ep in importlib_metadata.entry_points(group="dask_cli"):
+    for ep in importlib.metadata.entry_points(group="dask_cli"):
         _register_command_ep(cli, ep)
 
     cli()
diff --git a/dask/sizeof.py b/dask/sizeof.py
index 82ab4b6..e22e4d7 100644
--- a/dask/sizeof.py
+++ b/dask/sizeof.py
@@ -4,7 +4,7 @@ import random
 import sys
 from array import array
 
-import importlib_metadata
+import importlib.metadata
 
 from dask.utils import Dispatch
 
@@ -251,7 +251,7 @@ def register_pyarrow():
 
 def _register_entry_point_plugins():
     """Register sizeof implementations exposed by the entry_point mechanism."""
-    for entry_point in importlib_metadata.entry_points(group="dask.sizeof"):
+    for entry_point in importlib.metadata.entry_points(group="dask.sizeof"):
         registrar = entry_point.load()
         try:
             registrar(sizeof)
diff --git a/dask/tests/test_ci.py b/dask/tests/test_ci.py
index 6a2bbc9..48c4476 100644
--- a/dask/tests/test_ci.py
+++ b/dask/tests/test_ci.py
@@ -1,6 +1,6 @@
 import os
 
-import importlib_metadata
+import importlib.metadata
 import pytest
 from packaging.version import Version
 
@@ -35,5 +35,5 @@ def test_upstream_packages_installed():
         # "zict",
     ]
     for package in packages:
-        v = Version(importlib_metadata.version(package))
+        v = Version(importlib.metadata.version(package))
         assert v.is_prerelease or v.local is not None, (package, str(v))
diff --git a/dask/tests/test_cli.py b/dask/tests/test_cli.py
index b94762c..27ea00e 100644
--- a/dask/tests/test_cli.py
+++ b/dask/tests/test_cli.py
@@ -3,7 +3,7 @@ import platform
 import sys
 
 import click
-import importlib_metadata
+import importlib.metadata
 import pytest
 from click.testing import CliRunner
 
@@ -90,13 +90,13 @@ def good_command_2():
 def test_register_command_ep():
     from dask.cli import _register_command_ep
 
-    bad_ep = importlib_metadata.EntryPoint(
+    bad_ep = importlib.metadata.EntryPoint(
         name="bad",
         value="dask.tests.test_cli:bad_command",
         group="dask_cli",
     )
 
-    good_ep = importlib_metadata.EntryPoint(
+    good_ep = importlib.metadata.EntryPoint(
         name="good",
         value="dask.tests.test_cli:good_command",
         group="dask_cli",
@@ -118,13 +118,13 @@ def dummy_cli_2():
 def test_repeated_name_registration_warn():
     from dask.cli import _register_command_ep
 
-    one = importlib_metadata.EntryPoint(
+    one = importlib.metadata.EntryPoint(
         name="one",
         value="dask.tests.test_cli:good_command",
         group="dask_cli",
     )
 
-    two = importlib_metadata.EntryPoint(
+    two = importlib.metadata.EntryPoint(
         name="two",
         value="dask.tests.test_cli:good_command_2",
         group="dask_cli",
