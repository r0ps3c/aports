fusermount is provided by package "fuse", but pyfuse3 requires package "fuse3",
which provides command fusermount3, not fusermount.

diff --git a/test/util.py b/test/util.py
index f0b53ec..eb31958 100644
--- a/test/util.py
+++ b/test/util.py
@@ -30,9 +30,9 @@ def fuse_test_marker():
         return
     skip = lambda x: pytest.mark.skip(reason=x)
 
-    fusermount_path = shutil.which('fusermount')
+    fusermount_path = shutil.which('fusermount3')
     if fusermount_path is None:
-        return skip("Can't find fusermount executable")
+        return skip("Can't find fusermount3 executable")
 
     if not os.path.exists('/dev/fuse'):
         return skip("FUSE kernel module does not seem to be loaded")
@@ -42,7 +42,7 @@ def fuse_test_marker():
 
     mode = os.stat(fusermount_path).st_mode
     if mode & stat.S_ISUID == 0:
-        return skip('fusermount executable not setuid, and we are not root.')
+        return skip('fusermount3 executable not setuid, and we are not root.')
 
     try:
         fd = os.open('/dev/fuse', os.O_RDWR)
@@ -94,7 +94,7 @@ def cleanup(mount_process, mnt_dir):
         subprocess.call(['umount', '-l', mnt_dir], stdout=subprocess.DEVNULL,
                         stderr=subprocess.STDOUT)
     else:
-        subprocess.call(['fusermount', '-z', '-u', mnt_dir], stdout=subprocess.DEVNULL,
+        subprocess.call(['fusermount3', '-z', '-u', mnt_dir], stdout=subprocess.DEVNULL,
                         stderr=subprocess.STDOUT)
 
     mount_process.terminate()
@@ -113,7 +113,7 @@ def umount(mount_process, mnt_dir):
     if platform.system() == 'Darwin':
         subprocess.check_call(['umount', '-l', mnt_dir])
     else:
-        subprocess.check_call(['fusermount', '-z', '-u', mnt_dir])
+        subprocess.check_call(['fusermount3', '-z', '-u', mnt_dir])
     assert not os.path.ismount(mnt_dir)
 
     if isinstance(mount_process, subprocess.Popen):
