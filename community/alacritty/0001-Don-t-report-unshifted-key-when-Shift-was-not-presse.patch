From 6fefa78eafa43f13998439cb9eaf15bc0441f004 Mon Sep 17 00:00:00 2001
From: Kirill Chibisov <contact@kchibisov.com>
Date: Sun, 9 Feb 2025 08:39:01 +0300
Subject: [PATCH] Don't report unshifted key when Shift was not pressed

---
 alacritty/src/input/keyboard.rs | 21 ++++++++++++---------

diff --git a/alacritty/src/input/keyboard.rs b/alacritty/src/input/keyboard.rs
index af9bfbb2..417f599b 100644
--- a/alacritty/src/input/keyboard.rs
+++ b/alacritty/src/input/keyboard.rs
@@ -342,18 +342,21 @@ impl SequenceBuilder {
         };
 
         if character.chars().count() == 1 {
-            let character = character.chars().next().unwrap();
-            let base_character = character.to_lowercase().next().unwrap();
+            let shift = self.modifiers.contains(SequenceModifiers::SHIFT);
 
-            let alternate_key_code = u32::from(character);
-            let mut unicode_key_code = u32::from(base_character);
+            let ch = character.chars().next().unwrap();
+            let unshifted_ch = if shift { ch.to_lowercase().next().unwrap() } else { ch };
+
+            let alternate_key_code = u32::from(ch);
+            let mut unicode_key_code = u32::from(unshifted_ch);
 
             // Try to get the base for keys which change based on modifier, like `1` for `!`.
-            match key.key_without_modifiers().as_ref() {
-                Key::Character(unmodded) if alternate_key_code == unicode_key_code => {
-                    unicode_key_code = u32::from(unmodded.chars().next().unwrap_or(base_character));
-                },
-                _ => (),
+            //
+            // However it should only be performed when `SHIFT` is pressed.
+            if shift && alternate_key_code == unicode_key_code {
+                if let Key::Character(unmodded) = key.key_without_modifiers().as_ref() {
+                    unicode_key_code = u32::from(unmodded.chars().next().unwrap_or(unshifted_ch));
+                }
             }
 
             // NOTE: Base layouts are ignored, since winit doesn't expose this information
