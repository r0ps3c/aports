diff --git a/src/core/control/CrashHandlerUnix.h b/src/core/control/CrashHandlerUnix.h
index cdbc264..5fe7463 100644
--- a/src/core/control/CrashHandlerUnix.h
+++ b/src/core/control/CrashHandlerUnix.h
@@ -13,7 +13,6 @@
 #include <bitset>
 #include <fstream>  // std::ofstream
 
-#include <execinfo.h>
 #include <gtk/gtk.h>
 
 #include "util/PathUtil.h"
@@ -112,10 +111,7 @@ static void crashHandler(int sig) {
     void* array[100];
     char** messages;
 
-    size_t size;
-
-    // get void*'s for all entries on the stack
-    size = backtrace(array, 100);
+    size_t size = 0;
 
     time_t curtime = time(0);
     char stime[128];
@@ -141,15 +137,6 @@ static void crashHandler(int sig) {
        << std::endl
        << std::endl;
 
-    messages = backtrace_symbols(array, size);
-
-    for (size_t i = 0; i < size; i++) {
-        fp << FORMAT_STR("[bt]: ({1}) {2}") % i % messages[i];
-        fp << "\n";
-    }
-
-    free(messages);
-
     fp << "\n\nTry to get a better stracktrace...\n";
 
     Stacktrace::printStracktrace(fp);
diff --git a/src/util/Stacktrace.cpp b/src/util/Stacktrace.cpp
index 0cfff32..aedd748 100644
--- a/src/util/Stacktrace.cpp
+++ b/src/util/Stacktrace.cpp
@@ -10,7 +10,6 @@
 #include <Windows.h>
 #else
 
-#include <execinfo.h>  // for backtrace, backtrace_symbols
 #include <unistd.h>    // for readlink, ssize_t
 
 #ifdef __APPLE__
@@ -87,14 +86,12 @@ void Stacktrace::printStracktrace(std::ostream& stream) {
     std::array<void*, 32> trace{};
     std::array<char, 2048> buff{};
 
-    int trace_size = backtrace(trace.data(), trace.size());
-    char** messages = backtrace_symbols(trace.data(), trace_size);
+    int trace_size = 0;
 
     std::string exeName = getExePath();
 
     // skip first stack frame (points here)
     for (int i = 1; i < trace_size; ++i) {
-        stream << "[bt] #" << i << " " << messages[i] << endl;
 
         std::array<char, 1024> syscom{};
 
