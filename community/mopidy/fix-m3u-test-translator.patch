Backport m3u/test_translator.py updates to fix AssertionErrors.
Source: https://github.com/mopidy/mopidy/blob/4016fd6a0a97e5795ee2893648ec3bd78eadc703/tests/m3u/test_translator.py
--
--- a/tests/m3u/test_translator.py
+++ b/tests/m3u/test_translator.py
@@ -19,14 +19,14 @@
 
 
 @pytest.mark.parametrize(
-    "path,scheme,expected",
+    ("path", "scheme", "expected"),
     [
         ("test", None, "m3u:test"),
         ("test.m3u", None, "m3u:test.m3u"),
         ("./test.m3u", None, "m3u:test.m3u"),
         ("foo/../test.m3u", None, "m3u:test.m3u"),
         ("Test Playlist.m3u", None, "m3u:Test%20Playlist.m3u"),
-        ("test.mp3", "file", "file:///test.mp3"),
+        ("/test.mp3", "file", "file:///test.mp3"),
     ],
 )
 def test_path_to_uri(path, scheme, expected):
@@ -51,7 +51,7 @@
 
 
 @pytest.mark.parametrize(
-    "path,expected",
+    ("path", "expected"),
     [
         ("test", "test"),
         ("test.m3u", "test"),
@@ -72,7 +72,7 @@
 
 
 @pytest.mark.parametrize(
-    "path,expected",
+    ("path", "expected"),
     [
         ("test.m3u", ("m3u:test.m3u", "test")),
         ("Test Playlist.m3u", ("m3u:Test%20Playlist.m3u", "Test Playlist")),
@@ -86,7 +86,7 @@
 
 
 @pytest.mark.parametrize(
-    "contents,basedir,expected",
+    ("contents", "basedir", "expected"),
     [
         ("", ".", None),
         ("test.mp3", "/playlists", ("file:///playlists/test.mp3", "test")),
@@ -111,23 +111,25 @@
     if expected is not None:
         assert [Ref.track(uri=expected[0], name=expected[1])] == result
     else:
-        assert [] == result
+        assert result == []
 
 
 def test_dump_items():
     assert dumps([]) == ""
-    assert dumps([Ref.track(uri="file:///test.mp3")]) == ("file:///test.mp3\n")
+    assert dumps([Ref.track(uri="file:///test.mp3", name=None)]) == (
+        "file:///test.mp3\n"
+    )
     assert dumps([Ref.track(uri="file:///test.mp3", name="test")]) == (
-        "#EXTM3U\n" "#EXTINF:-1,test\n" "file:///test.mp3\n"
+        "#EXTM3U\n#EXTINF:-1,test\nfile:///test.mp3\n"
     )
     assert dumps([Track(uri="file:///test.mp3", name="test", length=42)]) == (
-        "#EXTM3U\n" "#EXTINF:-1,test\n" "file:///test.mp3\n"
+        "#EXTM3U\n#EXTINF:-1,test\nfile:///test.mp3\n"
     )
     assert dumps([Track(uri="http://example.com/stream")]) == (
         "http://example.com/stream\n"
     )
     assert dumps([Track(uri="http://example.com/stream", name="Test")]) == (
-        "#EXTM3U\n" "#EXTINF:-1,Test\n" "http://example.com/stream\n"
+        "#EXTM3U\n#EXTINF:-1,Test\nhttp://example.com/stream\n"
     )
 
 
@@ -137,9 +139,13 @@
     path = pathlib.Path("test.m3u")
 
     assert playlist(path) == Playlist(uri="m3u:test.m3u", name="test")
-    assert playlist(path, [Ref(uri="file:///test.mp3")], 1) == Playlist(
+    assert playlist(
+        path,
+        [Ref.track(uri="file:///test.mp3", name="test")],
+        1,
+    ) == Playlist(
         uri="m3u:test.m3u",
         name="test",
-        tracks=[Track(uri="file:///test.mp3")],
+        tracks=(Track(uri="file:///test.mp3", name="test"),),
         last_modified=1000,
     )
