Original Patch-Source: https://github.com/kiwix/kiwix-desktop/commit/ab80463b58a40f035555810d79bd60d67f0f1ee3.patch

Backported to be compatible with version 2.3.1

--- a/src/library.cpp	2024-04-30 22:57:36.971771232 +0200
+++ b/src/library.cpp	2024-04-30 23:17:53.570595481 +0200
@@ -11,26 +11,26 @@
 class LibraryManipulator: public kiwix::LibraryManipulator {
   public:
     LibraryManipulator(Library* p_library)
-        : kiwix::LibraryManipulator(&p_library->getKiwixLibrary())
+        : kiwix::LibraryManipulator(p_library->getKiwixLibrary())
         , mp_library(p_library)
     {}
     virtual ~LibraryManipulator() {}
     bool addBookToLibrary(kiwix::Book book) {
-        auto ret = mp_library->m_library.addBook(book);
+        auto ret = mp_library->mp_library->addBook(book);
         emit(mp_library->booksChanged());
         return ret;
     }
     void addBookmarkToLibrary(kiwix::Bookmark bookmark) {
-        mp_library->m_library.addBookmark(bookmark);
+        mp_library->mp_library->addBookmark(bookmark);
     }
     Library* mp_library;
 };
 
 Library::Library(const QString& libraryDirectory)
-  : m_libraryDirectory(libraryDirectory)
+  : mp_library(kiwix::Library::create()),
+    m_libraryDirectory(libraryDirectory)
 {
-    auto manipulator = LibraryManipulator(this);
-    auto manager = kiwix::Manager(&manipulator);
+    auto manager = kiwix::Manager(LibraryManipulator(this));
     manager.readFile(kiwix::appendToDirectory(m_libraryDirectory.toStdString(),"library.xml"), false);
     manager.readBookmarkFile(kiwix::appendToDirectory(m_libraryDirectory.toStdString(),"library.bookmarks.xml"));
     emit(booksChanged());
@@ -44,11 +44,11 @@ Library::~Library()
 QString Library::openBookFromPath(const QString &zimPath)
 {
     try {
-        auto& book = m_library.getBookByPath(zimPath.toStdString());
+        auto& book = mp_library->getBookByPath(zimPath.toStdString());
         return QString::fromStdString(book.getId());
     } catch(std::out_of_range& e) { }
 
-    kiwix::Manager manager(&m_library);
+    kiwix::Manager manager(mp_library);
     auto id =  manager.addBookFromPathAndGetId(zimPath.toStdString());
     if (id == "") {
         throw std::invalid_argument("invalid zim file");
@@ -60,18 +60,18 @@ QString Library::openBookFromPath(const
 
 std::shared_ptr<zim::Archive> Library::getArchive(const QString &zimId)
 {
-    return m_library.getArchiveById(zimId.toStdString());
+    return mp_library->getArchiveById(zimId.toStdString());
 }
 
 std::shared_ptr<zim::Searcher> Library::getSearcher(const QString &zimId)
 {
-    return m_library.getSearcherById(zimId.toStdString());
+    return mp_library->getSearcherById(zimId.toStdString());
 }
 
 QStringList Library::getBookIds() const
 {
     QStringList list;
-    for(auto& id: m_library.getBooksIds()) {
+    for(auto& id: mp_library->getBooksIds()) {
         list.append(QString::fromStdString(id));
     }
     return list;
@@ -80,8 +80,8 @@ QStringList Library::getBookIds() const
 QStringList Library::listBookIds(const kiwix::Filter& filter, kiwix::supportedListSortBy sortBy, bool ascending) const
 {
     QStringList list;
-    auto bookIds = m_library.filter(filter);
-    m_library.sort(bookIds, sortBy, ascending);
+    auto bookIds = mp_library->filter(filter);
+    mp_library->sort(bookIds, sortBy, ascending);
     for(auto& id: bookIds) {
         list.append(QString::fromStdString(id));
     }
@@ -90,29 +90,29 @@ QStringList Library::listBookIds(const k
 
 void Library::addBookToLibrary(kiwix::Book &book)
 {
-    m_library.addBook(book);
+    mp_library->addBook(book);
 }
 
 void Library::removeBookFromLibraryById(const QString& id) {
-    m_library.removeBookById(id.toStdString());
+    mp_library->removeBookById(id.toStdString());
 }
 
 void Library::addBookmark(kiwix::Bookmark &bookmark)
 {
-    m_library.addBookmark(bookmark);
+    mp_library->addBookmark(bookmark);
     emit bookmarksChanged();
 }
 
 void Library::removeBookmark(const QString &zimId, const QString &url)
 {
-    m_library.removeBookmark(zimId.toStdString(), url.toStdString());
+    mp_library->removeBookmark(zimId.toStdString(), url.toStdString());
     emit bookmarksChanged();
 }
 
 void Library::save()
 {
-    m_library.writeToFile(kiwix::appendToDirectory(m_libraryDirectory.toStdString(),"library.xml"));
-    m_library.writeBookmarksToFile(kiwix::appendToDirectory(m_libraryDirectory.toStdString(), "library.bookmarks.xml"));
+    mp_library->writeToFile(kiwix::appendToDirectory(m_libraryDirectory.toStdString(),"library.xml"));
+    mp_library->writeBookmarksToFile(kiwix::appendToDirectory(m_libraryDirectory.toStdString(), "library.bookmarks.xml"));
 }
 
 void Library::setMonitorDirZims(QStringList zimList)
@@ -153,14 +153,13 @@ void Library::loadMonitorDir(QString mon
 #endif
     QStringList addedZims = (newDir - oldDir).values();
     QStringList removedZims = (oldDir - newDir).values();
-    auto manipulator = LibraryManipulator(this);
-    auto manager = kiwix::Manager(&manipulator);
+    auto manager = kiwix::Manager(LibraryManipulator(this));
     bool needsRefresh = !removedZims.empty();
     for (auto book : addedZims) {
         needsRefresh |= manager.addBookFromPath(book.toStdString());
     }
     for (auto bookPath : removedZims) {
-        removeBookFromLibraryById(QString::fromStdString(m_library.getBookByPath(bookPath.toStdString()).getId()));
+        removeBookFromLibraryById(QString::fromStdString(mp_library->getBookByPath(bookPath.toStdString()).getId()));
     }
     if (needsRefresh) {
         setMonitorDirZims(newDir.values());
@@ -177,5 +176,5 @@ void Library::asyncLoadMonitorDir(QStrin
 
 const kiwix::Book &Library::getBookById(QString id) const
 {
-    return m_library.getBookById(id.toStdString());
+    return mp_library->getBookById(id.toStdString());
 }
--- a/src/kiwixapp.cpp	2024-04-30 22:57:03.749186828 +0200
+++ b/src/kiwixapp.cpp	2024-04-30 23:08:16.727216255 +0200
@@ -32,8 +32,8 @@ KiwixApp::KiwixApp(int& argc, char *argv
       mp_downloader(nullptr),
       mp_manager(nullptr),
       mp_mainWindow(nullptr),
-      m_nameMapper(m_library.getKiwixLibrary(), false),
-      m_server(&m_library.getKiwixLibrary(), &m_nameMapper)
+      mp_nameMapper(std::make_shared<kiwix::UpdatableNameMapper>(m_library.getKiwixLibrary(), false)),
+      m_server(m_library.getKiwixLibrary(), mp_nameMapper)
 {
     try {
         m_translation.setTranslation(QLocale());
@@ -453,7 +453,7 @@ void KiwixApp::disableItemsOnLibraryPage
 
 void KiwixApp::updateNameMapper()
 {
-  m_nameMapper.update();
+  mp_nameMapper->update();
 }
 
 void KiwixApp::printVersions(std::ostream& out) {
--- a/src/contentmanager.cpp	2024-04-30 22:56:41.133029992 +0200
+++ b/src/contentmanager.cpp	2024-04-30 23:05:56.243697297 +0200
@@ -15,6 +15,7 @@
 ContentManager::ContentManager(Library* library, kiwix::Downloader* downloader, QObject *parent)
     : QObject(parent),
       mp_library(library),
+      mp_remoteLibrary(kiwix::Library::create()),
       mp_downloader(downloader),
       m_remoteLibraryManager()
 {
@@ -179,7 +180,7 @@ QStringList ContentManager::updateDownlo
     } catch(...) {
         kiwix::Book bCopy(b);
         bCopy.setDownloadId("");
-        mp_library->getKiwixLibrary().addOrUpdateBook(bCopy);
+        mp_library->getKiwixLibrary()->addOrUpdateBook(bCopy);
         mp_library->save();
         emit(mp_library->booksChanged());
         return values;
@@ -194,7 +195,7 @@ QStringList ContentManager::updateDownlo
         bCopy.setPathValid(true);
         // removing book url so that download link in kiwix-serve is not displayed.
         bCopy.setUrl("");
-        mp_library->getKiwixLibrary().addOrUpdateBook(bCopy);
+        mp_library->getKiwixLibrary()->addOrUpdateBook(bCopy);
         mp_library->save();
         mp_library->bookmarksChanged();
         if (!m_local) {
@@ -407,8 +408,8 @@ void ContentManager::updateLibrary() {
 
 #define CATALOG_URL "library.kiwix.org"
 void ContentManager::updateRemoteLibrary(const QString& content) {
-    m_remoteLibrary = kiwix::Library();
-    kiwix::Manager manager(&m_remoteLibrary);
+    mp_remoteLibrary = kiwix::Library::create();
+    kiwix::Manager manager(mp_remoteLibrary);
     manager.readOpds(content.toStdString(), CATALOG_URL);
     emit(this->booksChanged());
     emit(this->pendingRequest(false));
@@ -457,8 +458,8 @@ QStringList ContentManager::getBookIds()
         return mp_library->listBookIds(filter, m_sortBy, m_sortOrderAsc);
     } else {
         filter.remote(true);
-        auto bookIds = m_remoteLibrary.filter(filter);
-        m_remoteLibrary.sort(bookIds, m_sortBy, m_sortOrderAsc);
+        auto bookIds = mp_remoteLibrary->filter(filter);
+        mp_remoteLibrary->sort(bookIds, m_sortBy, m_sortOrderAsc);
         QStringList list;
         for(auto& bookId:bookIds) {
             list.append(QString::fromStdString(bookId));
--- a/src/library.h	2024-04-30 22:57:46.914880421 +0200
+++ b/src/library.h	2024-04-30 23:19:24.705232459 +0200
@@ -32,7 +32,7 @@ public:
     std::shared_ptr<zim::Searcher> getSearcher(const QString& zimId);
     QStringList getBookIds() const;
     QStringList listBookIds(const kiwix::Filter& filter, kiwix::supportedListSortBy sortBy, bool ascending) const;
-    const std::vector<kiwix::Bookmark> getBookmarks(bool onlyValidBookmarks = false) const { return m_library.getBookmarks(onlyValidBookmarks); }
+    const std::vector<kiwix::Bookmark> getBookmarks(bool onlyValidBookmarks = false) const { return mp_library->getBookmarks(onlyValidBookmarks); }
     QStringList getLibraryZimsFromDir(QString dir) const;
     void setMonitorDirZims(QStringList zimList);
     void addBookToLibrary(kiwix::Book& book);
@@ -42,7 +42,7 @@ public:
     void save();
     void loadMonitorDir(QString dir);
     void asyncLoadMonitorDir(QString dir);
-    kiwix::Library& getKiwixLibrary() { return m_library; }
+    kiwix::LibraryPtr getKiwixLibrary() { return mp_library; }
 public slots:
     const kiwix::Book& getBookById(QString id) const;
 
@@ -51,7 +51,7 @@ signals:
     void bookmarksChanged();
 
 private:
-    kiwix::Library m_library;
+    kiwix::LibraryPtr mp_library;
     QString m_libraryDirectory;
     QStringList m_monitorDirZims;
 friend class LibraryManipulator;
--- a/src/urlschemehandler.cpp	2024-04-30 22:58:08.491057431 +0200
+++ b/src/urlschemehandler.cpp	2024-04-30 23:20:24.990551663 +0200
@@ -131,9 +131,11 @@ UrlSchemeHandler::handleSearchRequest(QW
         request->fail(QWebEngineUrlRequestJob::UrlInvalid);
         return;
     }
-    IdNameMapper nameMapper;
-    kiwix::SearchRenderer renderer(search->getResults(start, pageLength), &nameMapper, search->getEstimatedMatches(),
-                            start);
+    kiwix::SearchRenderer renderer(
+        search->getResults(start, pageLength),
+        std::make_shared<IdNameMapper>(),
+        search->getEstimatedMatches(),
+        start);
     renderer.setSearchPattern(searchQuery);
     renderer.setSearchBookQuery("content="+bookId.toStdString());
     renderer.setProtocolPrefix("zim://");
--- a/src/kiwixapp.h	2024-04-30 22:57:22.872089078 +0200
+++ b/src/kiwixapp.h	2024-04-30 23:08:48.819832250 +0200
@@ -108,7 +108,7 @@ private:
     ContentManager* mp_manager;
     MainWindow* mp_mainWindow;
     QErrorMessage* mp_errorDialog;
-    kiwix::UpdatableNameMapper m_nameMapper;
+    std::shared_ptr<kiwix::UpdatableNameMapper> mp_nameMapper;
     kiwix::Server m_server;
     Translation m_translation;
     QFileSystemWatcher m_watcher;
--- a/src/contentmanager.h	2024-04-30 22:56:51.276134675 +0200
+++ b/src/contentmanager.h	2024-04-30 23:06:58.762292289 +0200
@@ -29,7 +29,7 @@ public:
 
 private:
     Library* mp_library;
-    kiwix::Library m_remoteLibrary;
+    kiwix::LibraryPtr mp_remoteLibrary;
     kiwix::Downloader* mp_downloader;
     OpdsRequestManager m_remoteLibraryManager;
     ContentManagerView* mp_view;
--- a/src/contentmanager.cpp      2024-04-30 23:30:47.066633267 +0200
+++ b/src/contentmanager.cpp  2024-04-30 23:30:38.910148206 +0200
@@ -57,7 +57,7 @@ QStringList ContentManager::getBookInfos
             return &mp_library->getBookById(id);
         } catch (...) {
             try {
-                return &m_remoteLibrary.getBookById(id.toStdString());
+                return &mp_remoteLibrary->getBookById(id.toStdString());
             } catch(...) { return nullptr; }
         }
     }();
@@ -256,7 +256,7 @@ QString ContentManager::downloadBook(con
         return "";
     const auto& book = [&]()->const kiwix::Book& {
         try {
-            return m_remoteLibrary.getBookById(id.toStdString());
+            return mp_remoteLibrary->getBookById(id.toStdString());
         } catch (...) {
             return mp_library->getBookById(id);
         }
