Source commit: https://github.com/mvantellingen/python-zeep/commit/d1b0257eb7b8f41bc74c0fa178e820c2d739cf30.patch
Patch was backported for the current version.
---
--- a/src/zeep/xsd/types/builtins.py
+++ b/src/zeep/xsd/types/builtins.py
@@ -201,7 +201,9 @@
 class Date(BuiltinType):
     _default_qname = xsd_ns("date")
     accepted_types = [datetime.date, str]
+    _pattern = re.compile(r"(\d{4})-(\d{2})-(\d{2})")
 
+
     @check_no_collection
     def xmlvalue(self, value):
         if isinstance(value, str):
@@ -210,7 +212,16 @@
 
     @treat_whitespace("collapse")
     def pythonvalue(self, value):
-        return isodate.parse_date(value)
+        try:
+            return isodate.parse_date(value)
+        except isodate.ISO8601Error:
+            # Recent versions of isodate don't support timezone in date's. This
+            # is not really ISO8601 compliant anway, but we should try to handle
+            # it, so lets just use a regex to parse the date directly.
+            m = self._pattern.match(value)
+            if m:
+                return datetime.date(*map(int, m.groups()))
+            raise
 
 
 class gYearMonth(BuiltinType):
--- a/tests/test_xsd_builtins.py
+++ b/tests/test_xsd_builtins.py
@@ -242,6 +242,8 @@
         instance = builtins.Date()
         assert instance.pythonvalue("2016-03-04") == datetime.date(2016, 3, 4)
         assert instance.pythonvalue("2001-10-26+02:00") == datetime.date(2001, 10, 26)
+        assert instance.pythonvalue("2001-10-26-02:00") == datetime.date(2001, 10, 26)
+        assert instance.pythonvalue("2024-08-21-10:00") == datetime.date(2024, 8, 21)
         assert instance.pythonvalue("2001-10-26Z") == datetime.date(2001, 10, 26)
         assert instance.pythonvalue("2001-10-26+00:00") == datetime.date(2001, 10, 26)
         assert instance.pythonvalue("\r\n\t 2016-03-04   ") == datetime.date(2016, 3, 4)
