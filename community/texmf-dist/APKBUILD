# Contributor: Marian Buschsieweke <marian.buschsieweke@ovgu.de>
# Maintainer: Marian Buschsieweke <marian.buschsieweke@ovgu.de>
pkgname=texmf-dist
pkgver=2024.0
_release=20240312
pkgrel=5
pkgdesc="TeX Live texmf core distribution"
url="https://tug.org/texlive/"
# texlive
arch="noarch !s390x !ppc64le !riscv64"
license="LPPL-1.0 LPPL-1.1 LPPL-1.2 LPPL-1.3a LPPL-1.3c GPL-2.0-only"
depends="
	perl-file-homedir
	perl-unicode-linebreak
	perl-yaml-tiny
	"
# using gawk speeds parsing the tlpdb up, reduces packaging time significantly.
makedepends="
	gawk
	"
subpackages="
	texmf-dist-doc
	texmf-dist-examples:_examples
	texmf-dist-lang:_lang
	texmf-dist-full:_full
	texmf-dist-full-examples:_full_examples
	texmf-dist-most:_most
	"

_collections="
	bibtexextra
	binextra
	context
	fontsextra
	fontsrecommended
	fontutils
	formatsextra
	games
	humanities
	langarabic
	langchinese
	langcjk
	langcyrillic
	langczechslovak
	langenglish
	langeuropean
	langfrench
	langgerman
	langgreek
	langitalian
	langjapanese
	langkorean
	langother
	langpolish
	langportuguese
	langspanish
	latex
	latexextra
	latexrecommended
	luatex
	mathscience
	metapost
	music
	pictures
	plaingeneric
	pstricks
	publishers
	xetex
	"
source="
	https://ftp.tu-chemnitz.de/pub/tug/historic/systems/texlive/${_release:0:4}/texlive-$_release-texmf.tar.xz
	tlpkg-$pkgver.tar.gz::https://ftp.tu-chemnitz.de/pub/tug/historic/systems/texlive/${_release:0:4}/install-tl-unx.tar.gz
	texlive-$pkgver.tlpdb::https://git.texlive.info/texlive/plain/Master/tlpkg/texlive.tlpdb?h=tags/texlive-$pkgver

	0001-texmfcnf.patch
	0002-fix-newtt-map.patch
	"
builddir="$srcdir/texlive-$_release-texmf"

# One subpackage and doc package per collection. All collections are packed
# by the _subpkg function, which will based on the subpkgname pack both the
# srcfiles and runfiles into the subpkg folder, but also copy the docfiles
# into the -doc subpackage folder. This avoids searching the package twice
# in the db. The split function for the -doc subpackages will then only
# compress the man pages.
for collection in $_collections; do
	# the runfiles and srcfiles go in here
	subpackages="$subpackages $pkgname-$collection:_subpkg"
	# the man pages go in here
	subpackages="$subpackages $pkgname-$collection-doc:_subpkgdoc:noarch"
	# the other documentation goes in here
	subpackages="$subpackages $pkgname-$collection-examples:_subpkgexamples:noarch"
done

_tlpdb="$srcdir/texlive-$pkgver.tlpdb"

_tlpdb_get_values() {
	local pkg
	local key
	pkg="$1"
	key="$2"

	awk \
		"/^name $pkg\$/,/^$/{if(/^$key /) print substr(\$0, length(\"$key\") + 2)}" \
		"$_tlpdb"
}

_tlpdb_write_pkgsnip() {
	local pkg
	pkg="$1"
	local snip
	snip="$2"

	awk \
		"/^name $pkg\$/,/^\$/{print \$0}" \
		"$_tlpdb" > "$snip"
}

_tlpdb_get_xfiles() {
	local pkg
	local type
	snip="$1"
	type="$2"

	awk \
		'/^'"$type"'files size=[0-9]*$/ {flag=1; next} flag && /^ texmf-dist/ {print $1; next} flag && !/^ / {exit}' \
		"$snip"
}

_tlpdb_get_docfiles() {
	_tlpdb_get_xfiles "$1" doc
}

_tlpdb_get_datafiles() {
	_tlpdb_get_xfiles "$1" run
	_tlpdb_get_xfiles "$1" src
}

_tlpdb_get_collections() {
	awk \
		'/^name collection-([a-z0-9_-]+)$/{print substr($0, 17)}' \
		"$_tlpdb"
}

_pack_collection() {
	local collection
	local datadir
	local deps
	local pkgsnip
	pkgsnip="$(mktemp)"
	collection="$1"
	datadir="$2"
	docdir="$3"
	examplesdir="$4"
	deps="$(_tlpdb_get_values "collection-$collection" "depend")"

	for dep in $deps; do
		case "$dep" in
		collection-basic)
			# All subpackages already depend on texmf-dist
			;;
		collection-*)
			local actualdep
			actualdep="texmf-dist-${dep#collection-}"
			msg "Injecting dependency to $actualdep"
			depends="$depends $actualdep"
			;;
		*)
			msg "Adding $dep"
			# writing part of DB for current package into temporary file, so
			# that when parsing metadata from it we do not need to search the
			# whole DB again.
			_tlpdb_write_pkgsnip "$dep" "$pkgsnip"
			local paths
			paths="$(_tlpdb_get_datafiles "$pkgsnip")"
			for path in $paths; do
				mkdir -p "$datadir/usr/share/$(dirname "$path")"
				cp "$builddir/$path" "$datadir/usr/share/$path"
			done
			paths="$(_tlpdb_get_docfiles "$pkgsnip")"
			for path in $paths; do
				case "$path" in
				texmf-dist/doc/man/*.pdf)
					# all man pages are provided twice, one as PDF and once
					# as troff. Since they are identical content-wise, we only
					# pack the smaller troff file
					;;
				texmf-dist/doc/man/*.1)
					mkdir -p "$docdir/usr/share/man/man1"
					cp "$builddir/$path" "$docdir/usr/share/man/man1/${path##*/}texmf-dist"
					;;
				texmf-dist/doc/man/*.5)
					mkdir -p "$docdir/usr/share/man/man5"
					cp "$builddir/$path" "$docdir/usr/share/man/man5/${path##*/}texmf-dist"
					;;
				*)
					mkdir -p "$examplesdir/usr/share/$(dirname "$path")"
					cp "$builddir/$path" "$examplesdir/usr/share/$path"
					;;
				esac
			done
			;;
		esac
	done

	rm -f "$pkgsnip"
}

prepare() {
	default_prepare

	# Don't install a pre-compiled binaries. The source code is distributed
	# along the pre-compiled binaries for those who need them. There are few
	# offenders with niche use cases, such as bible typesetting.
	local bin_files
	bin_files="
		texmf-dist/doc/luatex/opbible/txs-gen/mod2tex
		"

	for bin_file in $bin_files; do
		local escaped_path
		escaped_path="${bin_file//\//\\/}"
		sed -e "/^ $escaped_path\$/d" \
			-i "$_tlpdb"
	done

	# Script files with a shebang should be executable. Fix this, where
	# needed.
	# shellcheck disable=SC3045 # Not caring about dash compatibility here
	find . \
		-type f \
		\( -name '*.sh' -o -name '*.py' -o -name '*.lua' -o -name '*.perl' \) \
		-print0 \
		| while IFS= read -r -d '' scriptfile; do

		if head -n 1 "$scriptfile" | grep -Eq '^#!/(|usr/)bin'; then
			chmod +x "$scriptfile"
		fi
	done
}

build() {
	# We don't really "build" things here
	return 0
}

check() {
	# there are no unit tests, but we check if the subpackages do still
	# match the list of collections in the tlpdb
	local collections
	collections="$(_tlpdb_get_collections)"

	for collection in $collections; do
		case "$collection" in
		basic)
			# no subpackage for basic, the basic collection goes into the root
			# package instead
			;;
		texworks)
			# windows-only package
			;;
		wintools)
			# windows-only package
			;;
		*)
			case "$subpackages" in
			*"texmf-dist-$collection"*)
				# collection in subpackages, everything fine
				;;
			*)
				echo "subpackage \"texmf-dist-$collection\" missing"
				return 1
			esac
			;;
		esac
	done
}

package() {
	_pack_collection "basic" "$pkgdir" "${pkgdir%/}-doc" "${pkgdir%/}-examples"

	# install tlpkg parts needed for texconfig
	mkdir -p "$pkgdir"/usr/share/tlpkg
	cp -r "$srcdir/install-tl-$_release/tlpkg/TeXLive" \
		"$pkgdir"/usr/share/tlpkg/
}

_subpkg() {
	local collection
	collection="${subpkgname#texmf-dist-}"
	pkgdesc="texmf-dist: $(_tlpdb_get_values "collection-$collection" shortdesc)"
	depends="texmf-dist"

	case "$collection" in
	bibtexextra)
		local biblatexver
		biblatexver="$(gawk 'match($0, /\\def\\abx@version{([0-9]+\.[0-9]*)}/, arr) {print arr[1]}' "$builddir/texmf-dist/tex/latex/biblatex/biblatex.sty")"
		provides="biblatex=$biblatexver.$pkgver-r$pkgrel"
	esac

	_pack_collection "$collection" "$subpkgdir" "${subpkgdir%/}-doc"  "${subpkgdir%/}-examples"
}

_subpkgdoc() {
	local base
	base="${subpkgname%-doc}"
	local collection
	collection="${base#texmf-dist-}"
	# We cannot use default_doc, as this does not work for subpackges
	pkgdesc="texmf-dist: $(_tlpdb_get_values "collection-$collection" shortdesc) (man pages)"

	install_if="docs ${subpkgname%-doc}=$pkgver-r$pkgrel"

	# compress man pages, if the doc packages contains some uncompressed ones
	if [ -d "$subpkgdir"/usr/share/man ]; then
		find "$subpkgdir"/usr/share/man -type f ! -name "*.gz" \
			-exec gzip -9 {} \;
	fi

	mkdir -p "$subpkgdir"
}

_subpkgexamples() {
	local base
	base="${subpkgname%-examples}"
	local collection
	collection="${base#texmf-dist-}"
	pkgdesc="texmf-dist: $(_tlpdb_get_values "collection-$collection" shortdesc) (examples and documentation)"
	depends="$base $base-doc"

	mkdir -p "$subpkgdir"
}

_most() {
	pkgdesc="TeX Live texmf distribution including most packages"
	# everything but texmf-dist-lang* and texmf-dist-fontsextra
	depends="$pkgname"

	for collection in $_collections; do
		case "$collection" in
		lang*)
			;;
		basic)
			;;
		fontsextra)
			;;
		*)
			depends="$depends texmf-dist-$collection"
			;;
		esac
	done
	mkdir -p "$subpkgdir"
}

_lang() {
	pkgdesc="TeX Live texmf distribution: Additional languages"
	depends="$pkgname"

	for collection in $_collections; do
		case "$collection" in
		lang*)
			depends="$depends texmf-dist-$collection"
			;;
		esac
	done
	mkdir -p "$subpkgdir"
}

_examples() {
	pkgdesc="$pkgdesc (examples and doc)"
	depends="$pkgname $pkgname-doc"

	mkdir -p "$subpkgdir"
}

_full() {
	pkgdesc="Full TeX Live texmf distribution"
	depends="$pkgname-most $pkgname-lang $pkgname-fontsextra"
	mkdir -p "$subpkgdir"
}

_full_examples() {
	pkgdesc="All examples and documentation for the TeX Live texmf distribution"
	depends="$pkgname-examples"
	for collection in $_collections; do
		depends="$depends $pkgname-$collection-doc $pkgname-$collection-examples"
	done
	mkdir -p "$subpkgdir"
}

sha512sums="
32d65b59e8ee334c301e1d918d7e3c8fa7c9be1d0a367331a76c658082200cd95f7318ce857c192f08bd9c1fcc1b31d4350f4ae0b59ec493565711fb06148830  texlive-20240312-texmf.tar.xz
d86fcf4a4d6a42d8236aded827175d764835f54fa5eefcb74641b35e53fdbc439fdbf7ada3a1baa88c62c2a7b9d683099aecbb77ef694bf9df5fccca7d1277d6  tlpkg-2024.0.tar.gz
2b419f95abeb6a061aa4c8f4a3b480611fbd1ca5e0acf7e9176e53c64c3a6709df1a3771c7e898b4e24ddccfaa0e98e3455c442e28477a5028a74f6fd8d536c9  texlive-2024.0.tlpdb
f4a071332067c5fd598110106614a5b3d4a11708d86c5483822961b05a663e39498f99223e389f5dbb57b5eb4295730b65d022e479703499c970adc6272d3a68  0001-texmfcnf.patch
1599bbe462196b21ae6ffbdb0bb971ba69011126fa5f882f0c6795715f7cde1b394a7eebe442047fa8ef4387f357cd0ebb34684c1661a0cb76b9352620f5891e  0002-fix-newtt-map.patch
"
