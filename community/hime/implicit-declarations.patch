--- a/src/hime-gtk-compatible.h
+++ b/src/hime-gtk-compatible.h
@@ -41,9 +41,6 @@
 #define GtkStatusIcon GObject
 #define gtk_status_icon_position_menu NULL
 
-#define GTK_COLOR_SELECTION
-#define GTK_COLOR_SELECTION_DIALOG
-
 #define GDK_WINDOW_XWINDOW GDK_WINDOW_XID
 #endif
 
@@ -112,5 +109,58 @@
 #ifndef PANGO_VERSION_CHECK
 #define PANGO_VERSION_CHECK(x, y, z) FALSE
 #endif
+
+#define GTK_TYPE_COLOR_SELECTION			(gtk_color_selection_get_type ())
+#define GTK_COLOR_SELECTION(obj)			(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COLOR_SELECTION, GtkColorSelection))
+#define GTK_TYPE_COLOR_SELECTION_DIALOG            (gtk_color_selection_dialog_get_type ())
+#define GTK_COLOR_SELECTION_DIALOG(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COLOR_SELECTION_DIALOG, GtkColorSelectionDialog))
+
+typedef struct _GtkColorSelection       GtkColorSelection;
+typedef struct _GtkColorSelectionPrivate  GtkColorSelectionPrivate;
+typedef struct _GtkColorSelectionDialog              GtkColorSelectionDialog;
+typedef struct _GtkColorSelectionDialogPrivate       GtkColorSelectionDialogPrivate;
+
+struct _GtkColorSelection
+{
+  GtkBox parent_instance;
+
+  /*< private >*/
+  GtkColorSelectionPrivate *private_data;
+};
+
+struct _GtkColorSelectionDialog
+{
+  GtkDialog parent_instance;
+
+  /*< private >*/
+  GtkColorSelectionDialogPrivate *priv;
+};
+
+GType      gtk_color_selection_get_type                (void) G_GNUC_CONST;
+GType      gtk_color_selection_dialog_get_type            (void) G_GNUC_CONST;
+GtkWidget* gtk_color_selection_dialog_get_color_selection (GtkColorSelectionDialog *colorsel);
+GtkWidget* gtk_color_selection_dialog_new                 (const gchar *title);
+void     gtk_color_selection_set_current_rgba    (GtkColorSelection *colorsel,
+                                                  const GdkRGBA     *rgba);
+void     gtk_color_selection_get_current_rgba    (GtkColorSelection *colorsel,
+                                                  GdkRGBA           *rgba);
+gboolean              gtk_status_icon_get_geometry       (GtkStatusIcon      *status_icon,
+							  GdkScreen         **screen,
+							  GdkRectangle       *area,
+							  GtkOrientation     *orientation);
+gint                  gtk_status_icon_get_size           (GtkStatusIcon      *status_icon);
+gboolean              gtk_status_icon_is_embedded        (GtkStatusIcon      *status_icon);
+GtkStatusIcon        *gtk_status_icon_new                (void);
+GtkStatusIcon        *gtk_status_icon_new_from_file      (const gchar        *filename);
+void                  gtk_status_icon_set_from_file      (GtkStatusIcon      *status_icon,
+							  const gchar        *filename);
+void                  gtk_status_icon_set_from_pixbuf    (GtkStatusIcon      *status_icon,
+							  GdkPixbuf          *pixbuf);
+void                  gtk_status_icon_set_tooltip_text   (GtkStatusIcon      *status_icon,
+                                                          const gchar        *text);
+void                  gtk_status_icon_set_visible        (GtkStatusIcon      *status_icon,
+							  gboolean            visible);
+void        gtk_widget_modify_font        (GtkWidget            *widget,
+                                           PangoFontDescription *font_desc);
 
 #endif /* HIME_GTK_COMPATIBLE_H */
