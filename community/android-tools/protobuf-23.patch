abseil stringviews don't have as_string
--
diff --git a/vendor/CMakeLists.adb.txt b/vendor/CMakeLists.adb.txt
index 8d82937..97dc023 100644
--- a/vendor/CMakeLists.adb.txt
+++ b/vendor/CMakeLists.adb.txt
@@ -62,6 +62,7 @@ target_include_directories(libadb PUBLIC
 	libbase/include
 	libziparchive/include
 	native/include)
+target_link_libraries(libadb PUBLIC absl_log_internal_check_op)
 
 add_library(libadb_crypto_defaults STATIC
 	adb/crypto/key.cpp
diff --git a/vendor/extras/libjsonpb/parse/jsonpb.cpp b/vendor/extras/libjsonpb/parse/jsonpb.cpp
index 62d651d..462759c 100644
--- a/vendor/extras/libjsonpb/parse/jsonpb.cpp
+++ b/vendor/extras/libjsonpb/parse/jsonpb.cpp
@@ -51,7 +51,7 @@ ErrorOr<std::string> MessageToJsonString(const Message& message) {
 #if GOOGLE_PROTOBUF_VERSION < 3016000
     return MakeError<std::string>(status.error_message().as_string());
 #else
-    return MakeError<std::string>(status.message().as_string());
+    return MakeError<std::string>(std::string{status.message()});
 #endif
   }
   return ErrorOr<std::string>(std::move(json));
@@ -68,7 +68,7 @@ ErrorOr<std::monostate> JsonStringToMessage(const std::string& content, Message*
 #if GOOGLE_PROTOBUF_VERSION < 3016000
     return MakeError<std::monostate>(status.error_message().as_string());
 #else
-    return MakeError<std::monostate>(status.message().as_string());
+    return MakeError<std::monostate>(std::string{status.message()});
 #endif
   }
   if (!message->ParseFromString(binary)) {
