--- a/third_party/material_color_utilities/src/cpp/palettes/tones.cc
+++ b/third_party/material_color_utilities/src/cpp/palettes/tones.cc
@@ -19,6 +19,8 @@
 #include "cpp/cam/cam.h"
 #include "cpp/cam/hct.h"
 
+#include <cmath>
+
 namespace material_color_utilities {
 
 TonalPalette::TonalPalette(Argb argb) : key_color_(0.0, 0.0, 0.0) {
@@ -55,7 +57,7 @@
 Hct TonalPalette::createKeyColor(double hue, double chroma) {
   double start_tone = 50.0;
   Hct smallest_delta_hct(hue, chroma, start_tone);
-  double smallest_delta = abs(smallest_delta_hct.get_chroma() - chroma);
+  double smallest_delta = std::abs(smallest_delta_hct.get_chroma() - chroma);
   // Starting from T50, check T+/-delta to see if they match the requested
   // chroma.
   //
@@ -67,17 +69,17 @@
     // case where requested chroma is 16.51, and the closest chroma is 16.49.
     // Error is minimized, but when rounded and displayed, requested chroma
     // is 17, key color's chroma is 16.
-    if (round(chroma) == round(smallest_delta_hct.get_chroma())) {
+    if (std::round(chroma) == std::round(smallest_delta_hct.get_chroma())) {
       return smallest_delta_hct;
     }
     Hct hct_add(hue, chroma, start_tone + delta);
-    double hct_add_delta = abs(hct_add.get_chroma() - chroma);
+    double hct_add_delta = std::abs(hct_add.get_chroma() - chroma);
     if (hct_add_delta < smallest_delta) {
       smallest_delta = hct_add_delta;
       smallest_delta_hct = hct_add;
     }
     Hct hct_subtract(hue, chroma, start_tone - delta);
-    double hct_subtract_delta = abs(hct_subtract.get_chroma() - chroma);
+    double hct_subtract_delta = std::abs(hct_subtract.get_chroma() - chroma);
     if (hct_subtract_delta < smallest_delta) {
       smallest_delta = hct_subtract_delta;
       smallest_delta_hct = hct_subtract;
