# Contributor: Carlo Landmeter <clandmeter@alpinelinux.org>
# Contributor: Natanael Copa <ncopa@alpinelinux.org>
# Maintainer: psykose <alice@ayaya.dev>
pkgname=chromium
pkgver=114.0.5735.198
pkgrel=0
# https://source.chromium.org/chromium/chromium/src/+/main:third_party/test_fonts/test_fonts.tar.gz.sha1
# (for the given version, when it changes)
_testfonts=336e775eec536b2d785cc80eff6ac39051931286
pkgdesc="Chromium web browser"
url="https://www.chromium.org/Home"
arch="aarch64 armv7 x86_64"
license="BSD-3-Clause"
# explicit depends for --headless
# XXX: eudev-libs replaced by so:libudev.so.1 to allow installation with libudev-zero
# take care if libudev.so ever updates somajor..
depends="
	font-opensans
	gtk+3.0
	icu-data-full
	mesa-dri-gallium
	musl>=1.2.3_git20230322-r0
	so:libudev.so.1
	xdg-utils
	"
makedepends="
	alsa-lib-dev
	aom-dev
	bash
	bison
	bsd-compat-headers
	brotli-dev
	bzip2-dev
	cairo-dev
	clang-dev
	compiler-rt
	cups-dev
	curl-dev
	dav1d-dev
	dbus-glib-dev
	elfutils
	elfutils-dev
	eudev-dev
	ffmpeg-dev
	findutils
	flac-dev
	flex
	freetype-dev
	gn
	gperf
	gtk+3.0-dev
	gzip
	harfbuzz-dev
	hunspell-dev
	hwdata-dev
	jpeg-dev
	jsoncpp-dev
	krb5-dev
	lcms2-dev
	libavif-dev
	libbsd-dev
	libcap-dev
	libevdev-dev
	libevent-dev
	libexif-dev
	libffi-dev
	libgcrypt-dev
	libjpeg-turbo-dev
	libusb-dev
	libva-dev
	libwebp-dev
	libxcomposite-dev
	libxcursor-dev
	libxinerama-dev
	libxml2-dev
	libxrandr-dev
	libxscrnsaver-dev
	libxslt-dev
	linux-headers
	lld
	llvm
	mesa-dev
	minizip-dev
	ninja
	nodejs-current
	nss-dev
	opus-dev
	pciutils-dev
	perl
	pipewire-dev
	pulseaudio-dev
	py3-setuptools
	python3
	qt5-qtbase-dev
	snappy-dev
	speex-dev
	sqlite-dev
	woff2-dev
	xcb-proto
	zlib-dev
	"
checkdepends="py3-six"
subpackages="
	$pkgname-qt5
	$pkgname-chromedriver
	$pkgname-doc
	$pkgname-lang
	$pkgname-swiftshader
	"
source="https://commondatastorage.googleapis.com/chromium-browser-official/chromium-$pkgver.tar.xz
	https://commondatastorage.googleapis.com/chromium-browser-official/chromium-$pkgver-testdata.tar.xz
	test_fonts-$_testfonts.tar.gz::https://chromium-fonts.storage.googleapis.com/$_testfonts
	chromium-launcher.sh
	chromium.conf
	google-api.keys

	add-some-typename-s-that-are-required-in-C-17.patch
	chromium-revert-drop-of-system-java.patch
	chromium-use-alpine-target.patch
	disable-failing-tests.patch
	download-bubble-typename.patch
	fc-cache-version.patch
	fix-missing-cstdint-include-musl.patch
	fstatat-32bit.patch
	gdbinit.patch
	import-version.patch
	libstdc++13.patch
	mman.patch
	musl-sandbox.patch
	musl-tid-caching.patch
	musl-v8-monotonic-pthread-cont_timedwait.patch
	no-execinfo.patch
	no-mallinfo.patch
	no-res-ninit-nclose.patch
	no-sandbox-settls.patch
	pipewire-fcntl-call.patch
	pvalloc.patch
	revert-llvm16-linker-flag.patch
	quiche-array.patch
	temp-failure-retry.patch
	webauthn-variant.patch
	"
# chrome-sandbox can use suid when user namespaces aren't available, but uses only userns and drops privileges normally
options="suid"

# backwards compat (merged into primary)
provides="$pkgname-angle=$pkgver-r$pkgrel"

case "$CARCH" in
riscv64)
	;;
*)
	# dbg outside riscv only
	subpackages="$pkgname-dbg $subpackages"
	;;
esac

case "$CARCH" in
x86_64)
	;;
*)
	# 32-bit fails a bunch of tests for various size-related reasons
	# aarch64 gets timeout related failures due to builder setup, no easy way to
	# raise timeouts
	options="$options !check"
	;;
esac

# secfixes:
#   103.0.5060.134-r0:
#     - CVE-2022-2163
#     - CVE-2022-2477
#     - CVE-2022-2478
#     - CVE-2022-2479
#     - CVE-2022-2480
#     - CVE-2022-2481
#   103.0.5060.114-r0:
#     - CVE-2022-2294
#     - CVE-2022-2295
#     - CVE-2022-2296
#   103.0.5060.53-r0:
#     - CVE-2022-2156
#     - CVE-2022-2157
#     - CVE-2022-2158
#     - CVE-2022-2160
#     - CVE-2022-2161
#     - CVE-2022-2162
#     - CVE-2022-2163
#     - CVE-2022-2164
#     - CVE-2022-2165
#   102.0.5005.61-r0:
#     - CVE-2022-1853
#     - CVE-2022-1854
#     - CVE-2022-1855
#     - CVE-2022-1856
#     - CVE-2022-1857
#     - CVE-2022-1858
#     - CVE-2022-1859
#     - CVE-2022-1860
#     - CVE-2022-1861
#     - CVE-2022-1862
#     - CVE-2022-1863
#     - CVE-2022-1864
#     - CVE-2022-1865
#     - CVE-2022-1866
#     - CVE-2022-1867
#     - CVE-2022-1868
#     - CVE-2022-1869
#     - CVE-2022-1870
#     - CVE-2022-1871
#     - CVE-2022-1872
#     - CVE-2022-1873
#     - CVE-2022-1874
#     - CVE-2022-1875
#     - CVE-2022-1876
#   101.0.4951.64-r0:
#     - CVE-2022-1633
#     - CVE-2022-1634
#     - CVE-2022-1635
#     - CVE-2022-1636
#     - CVE-2022-1637
#     - CVE-2022-1638
#     - CVE-2022-1639
#     - CVE-2022-1640
#     - CVE-2022-1641
#   101.0.4951.54-r0:
#     - CVE-2022-1477
#     - CVE-2022-1478
#     - CVE-2022-1479
#     - CVE-2022-1481
#     - CVE-2022-1482
#     - CVE-2022-1483
#     - CVE-2022-1484
#     - CVE-2022-1485
#     - CVE-2022-1486
#     - CVE-2022-1487
#     - CVE-2022-1488
#     - CVE-2022-1489
#     - CVE-2022-1490
#     - CVE-2022-1491
#     - CVE-2022-1492
#     - CVE-2022-1493
#     - CVE-2022-1494
#     - CVE-2022-1495
#     - CVE-2022-1496
#     - CVE-2022-1497
#     - CVE-2022-1498
#     - CVE-2022-1499
#     - CVE-2022-1500
#     - CVE-2022-1501
#   100.0.4896.127-r0:
#     - CVE-2022-1364
#   99.0.4844.84-r0:
#     - CVE-2022-1096
#   98.0.4758.102-r0:
#     - CVE-2022-0452
#     - CVE-2022-0453
#     - CVE-2022-0454
#     - CVE-2022-0455
#     - CVE-2022-0456
#     - CVE-2022-0457
#     - CVE-2022-0458
#     - CVE-2022-0459
#     - CVE-2022-0460
#     - CVE-2022-0461
#     - CVE-2022-0462
#     - CVE-2022-0463
#     - CVE-2022-0464
#     - CVE-2022-0465
#     - CVE-2022-0466
#     - CVE-2022-0467
#     - CVE-2022-0468
#     - CVE-2022-0469
#     - CVE-2022-0470
#     - CVE-2022-0603
#     - CVE-2022-0604
#     - CVE-2022-0605
#     - CVE-2022-0606
#     - CVE-2022-0607
#     - CVE-2022-0608
#     - CVE-2022-0609
#     - CVE-2022-0610
#   93.0.4577.82-r0:
#     - CVE-2021-30625
#     - CVE-2021-30626
#     - CVE-2021-30627
#     - CVE-2021-30628
#     - CVE-2021-30629
#     - CVE-2021-30630
#     - CVE-2021-30631
#     - CVE-2021-30632
#     - CVE-2021-30633
#   93.0.4577.63-r0:
#     - CVE-2021-30606
#     - CVE-2021-30607
#     - CVE-2021-30608
#     - CVE-2021-30609
#     - CVE-2021-30610
#     - CVE-2021-30611
#     - CVE-2021-30612
#     - CVE-2021-30613
#     - CVE-2021-30614
#     - CVE-2021-30615
#     - CVE-2021-30616
#     - CVE-2021-30617
#     - CVE-2021-30618
#     - CVE-2021-30619
#     - CVE-2021-30620
#     - CVE-2021-30621
#     - CVE-2021-30622
#     - CVE-2021-30623
#     - CVE-2021-30624
#   92.0.4515.159-r0:
#     - CVE-2021-30598
#     - CVE-2021-30599
#     - CVE-2021-30600
#     - CVE-2021-30601
#     - CVE-2021-30602
#     - CVE-2021-30603
#     - CVE-2021-30604
#     - CVE-2021-30590
#     - CVE-2021-30591
#     - CVE-2021-30592
#     - CVE-2021-30593
#     - CVE-2021-30594
#     - CVE-2021-30596
#     - CVE-2021-30597
#   92.0.4515.107-r0:
#     - CVE-2021-30565
#     - CVE-2021-30566
#     - CVE-2021-30567
#     - CVE-2021-30568
#     - CVE-2021-30569
#     - CVE-2021-30571
#     - CVE-2021-30572
#     - CVE-2021-30573
#     - CVE-2021-30574
#     - CVE-2021-30575
#     - CVE-2021-30576
#     - CVE-2021-30577
#     - CVE-2021-30578
#     - CVE-2021-30579
#     - CVE-2021-30580
#     - CVE-2021-30581
#     - CVE-2021-30582
#     - CVE-2021-30583
#     - CVE-2021-30584
#     - CVE-2021-30585
#     - CVE-2021-30586
#     - CVE-2021-30587
#     - CVE-2021-30588
#     - CVE-2021-30589
#   91.0.4472.164-r0:
#     - CVE-2021-30559
#     - CVE-2021-30541
#     - CVE-2021-30560
#     - CVE-2021-30561
#     - CVE-2021-30562
#     - CVE-2021-30563
#     - CVE-2021-30564
#   91.0.4472.114-r0:
#     - CVE-2021-30554
#     - CVE-2021-30555
#     - CVE-2021-30556
#     - CVE-2021-30557
#   91.0.4472.101-r0:
#     - CVE-2021-30544
#     - CVE-2021-30545
#     - CVE-2021-30546
#     - CVE-2021-30547
#     - CVE-2021-30548
#     - CVE-2021-30549
#     - CVE-2021-30550
#     - CVE-2021-30551
#     - CVE-2021-30552
#     - CVE-2021-30553
#   91.0.4472.77-r0:
#     - CVE-2021-30521
#     - CVE-2021-30522
#     - CVE-2021-30523
#     - CVE-2021-30524
#     - CVE-2021-30525
#     - CVE-2021-30526
#     - CVE-2021-30527
#     - CVE-2021-30528
#     - CVE-2021-30529
#     - CVE-2021-30530
#     - CVE-2021-30531
#     - CVE-2021-30532
#     - CVE-2021-30533
#     - CVE-2021-30534
#     - CVE-2021-30535
#     - CVE-2021-30536
#     - CVE-2021-30537
#     - CVE-2021-30538
#     - CVE-2021-30539
#     - CVE-2021-30540
#   90.0.4430.72-r0:
#     - CVE-2021-21201
#     - CVE-2021-21202
#     - CVE-2021-21203
#     - CVE-2021-21204
#     - CVE-2021-21205
#     - CVE-2021-21221
#     - CVE-2021-21207
#     - CVE-2021-21208
#     - CVE-2021-21209
#     - CVE-2021-21210
#     - CVE-2021-21211
#     - CVE-2021-21212
#     - CVE-2021-21213
#     - CVE-2021-21214
#     - CVE-2021-21215
#     - CVE-2021-21216
#     - CVE-2021-21217
#     - CVE-2021-21218
#     - CVE-2021-21219
#   89.0.4389.128-r0:
#     - CVE-2021-21206
#     - CVE-2021-21220
#   89.0.4389.114-r0:
#     - CVE-2021-21194
#     - CVE-2021-21195
#     - CVE-2021-21196
#     - CVE-2021-21197
#     - CVE-2021-21198
#     - CVE-2021-21199
#   89.0.4389.90-r0:
#     - CVE-2021-21191
#     - CVE-2021-21192
#     - CVE-2021-21193
#   89.0.4389.72-r0:
#     - CVE-2021-21158
#     - CVE-2021-21159
#     - CVE-2021-21160
#     - CVE-2021-21161
#     - CVE-2021-21162
#     - CVE-2021-21163
#     - CVE-2021-21164
#     - CVE-2021-21165
#     - CVE-2021-21166
#     - CVE-2021-21167
#     - CVE-2021-21168
#     - CVE-2021-21169
#     - CVE-2021-21170
#     - CVE-2021-21171
#     - CVE-2021-21172
#     - CVE-2021-21173
#     - CVE-2021-21174
#     - CVE-2021-21175
#     - CVE-2021-21176
#     - CVE-2021-21177
#     - CVE-2021-21178
#     - CVE-2021-21179
#     - CVE-2021-21180
#     - CVE-2020-27844
#     - CVE-2021-21181
#     - CVE-2021-21182
#     - CVE-2021-21183
#     - CVE-2021-21184
#     - CVE-2021-21185
#     - CVE-2021-21186
#     - CVE-2021-21187
#     - CVE-2021-21188
#     - CVE-2021-21189
#     - CVE-2021-21190
#   83.0.4103.116-r0:
#     - CVE-2020-6505
#     - CVE-2020-6506
#     - CVE-2020-6507
#     - CVE-2020-6509
#   72.0.3626.121-r0:
#     - CVE-2019-5786

_chromium_testsuites="
	base_unittests
	net_unittests
	"

upstream_version() {
	curl --silent https://omahaproxy.appspot.com/all \
		| awk -F, '$1 == "linux" && $2 == "stable" {print $3}'
}

prepare() {
	default_prepare

	mv ../test_fonts/ ./third_party/test_fonts/

	# https://groups.google.com/a/chromium.org/d/topic/chromium-packagers/9JX1N2nf4PU/discussion
	touch chrome/test/data/webui/i18n_process_css_test.html
	# Use the file at run time instead of effectively compiling it in
	sed 's|//third_party/usb_ids/usb.ids|/usr/share/hwdata/usb.ids|g' \
		-i services/device/public/cpp/usb/BUILD.gn

	mkdir -p third_party/node/linux/node-linux-x64/bin
	ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/

	# reusable system library settings
	# libavif - https://github.com/AOMediaCodec/libavif/commit/4d2776a3
	# libaom - https://aomedia.googlesource.com/aom/+/706ee36dcc82%5E%21/
	local use_system="
		brotli
		dav1d
		ffmpeg
		flac
		fontconfig
		freetype
		harfbuzz-ng
		icu
		jsoncpp
		libdrm
		libevent
		libjpeg
		libwebp
		libxml
		libxslt
		opus
		snappy
		woff2
		zlib
		"

	for _lib in $use_system libjpeg_turbo; do
		msg "Removing buildscripts for system provided $_lib"
			find . -type f -path "*third_party/$_lib/*" \
			\! -path "*third_party/$_lib/chromium/*" \
			\! -path "*third_party/$_lib/google/*" \
			\! -path './base/third_party/icu/*' \
			\! -path './third_party/libxml/*' \
			\! -path './third_party/pdfium/third_party/freetype/include/pstables.h' \
			\! -path './third_party/harfbuzz-ng/utils/hb_scoped.h' \
			\! -path './third_party/crashpad/crashpad/third_party/zlib/zlib_crashpad.h' \
			\! -regex '.*\.\(gn\|gni\|isolate\|py\)' \
			-delete
	done

	msg "Replacing gn files"
	python3 build/linux/unbundle/replace_gn_files.py --system-libraries \
		$use_system
	python3 third_party/libaddressinput/chromium/tools/update-strings.py

	# prevent annoying errors when regenerating gni
	sed -i 's,^update_readme$,#update_readme,' \
		third_party/libvpx/generate_gni.sh

	# allow system dependencies in "official builds"
	sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' \
		tools/generate_shim_headers/generate_shim_headers.py

	# https://crbug.com/893950
	sed -i -e 's/\<xmlMalloc\>/malloc/' -e 's/\<xmlFree\>/free/' \
		third_party/blink/renderer/core/xml/*.cc \
		third_party/blink/renderer/core/xml/parser/xml_document_parser.cc \
		third_party/libxml/chromium/*.cc \
		third_party/maldoca/src/maldoca/ole/oss_utils.h

	_configure
}

_configure() {
	cd "$builddir"

	##############################################################
	# Please dont use these keys outside of Alpine Linux project #
	# You can create your own at:                                #
	# http://www.chromium.org/developers/how-tos/api-keys        #
	##############################################################
	local _google_api_key _google_default_client_id _google_default_client_secret
	eval "$(base64 -d < $srcdir/google-api.keys)"

	export CFLAGS="${CFLAGS/-g/} -O2 -Wno-unknown-warning-option -Wno-builtin-macro-redefined -Wno-deprecated-declarations"
	export CXXFLAGS="${CXXFLAGS/-g/} -O2 -Wno-unknown-warning-option -Wno-builtin-macro-redefined -Wno-deprecated-declarations"
	export CPPFLAGS="${CPPFLAGS/-g/} -D__DATE__=  -D__TIME__=  -D__TIMESTAMP__="

	# breaks chromium
	export CXXFLAGS="${CXXFLAGS/-D_GLIBCXX_ASSERTIONS=1}"
	export CXXFLAGS="${CXXFLAGS/-fstack-clash-protection}"
	export CFLAGS="${CFLAGS/-fstack-clash-protection}"

	export AR="llvm-ar"
	export CC="clang"
	export CXX="clang++"
	export NM="llvm-nm"

	msg "Configuring build"

	# this should be at 0 for -dbg too. change it for local debugging only
	local symbol_level=0

	case "$CARCH" in
	armv7|riscv64)
		# fails, due to oversized alloc
		# riscv doesn't support this yet
		local lto="false"
		;;
	*)
		local lto="true"
		;;
	esac

	case "$CARCH" in
	riscv64)
		# no vaapi on riscv support
		local vaapi=false
		;;
	*)
		local vaapi=true
		;;
	esac

	# shellcheck disable=2089
	local gn_config="
		blink_enable_generated_code_formatting=false
		chrome_pgo_phase=0
		clang_base_path=\"/usr\"
		clang_use_chrome_plugins=false
		custom_toolchain=\"//build/toolchain/linux/unbundle:default\"
		disable_fieldtrial_testing_config=true
		enable_hangout_services_extension=true
		enable_nacl=false
		enable_stripping=false
		enable_vr=false
		fatal_linker_warnings=false
		ffmpeg_branding=\"Chrome\"
		google_api_key=\"$_google_api_key\"
		google_default_client_id=\"$_google_default_client_id\"
		google_default_client_secret=\"$_google_default_client_secret\"
		host_toolchain=\"//build/toolchain/linux/unbundle:default\"
		icu_use_data_file=false
		is_cfi=false
		is_component_ffmpeg=true
		is_debug=false
		is_official_build=true
		link_pulseaudio=true
		proprietary_codecs=true
		rtc_link_pipewire=true
		rtc_use_pipewire=true
		symbol_level=$symbol_level
		treat_warnings_as_errors=false
		use_custom_libcxx=false
		use_gnome_keyring=false
		use_lld=true
		use_pulseaudio=true
		use_sysroot=false
		use_system_freetype=true
		use_system_harfbuzz=true
		use_system_lcms2=true
		use_system_libdrm=true
		use_system_libffi=true
		use_system_libjpeg=true
		use_system_zlib=true
		use_thin_lto=$lto
		use_vaapi=$vaapi
		"

	# shellcheck disable=2090,2116
	gn gen out/bld --args="$(echo $gn_config)"
}

build() {
	msg "Ninja turtles GO!"

	# final link needs lots of file descriptors
	ulimit -n 4096

	# moc and friends not in path by default
	export PATH="$PATH:/usr/lib/qt5/bin"

	# shellcheck disable=2046
	ninja -C out/bld \
		chrome \
		chrome_sandbox \
		chromedriver.unstripped \
		chrome_crashpad_handler \
		$(want_check && echo $_chromium_testsuites)

}

check() {
	# vpython3 execs system python3 with this set
	export VPYTHON_BYPASS="manually managed python not supported by chrome operations"
	# for vpython3 in cwd
	export PATH="$PATH:$PWD/third_party/depot_tools"

	for testsuite in $_chromium_testsuites; do
		msg "running testsuite $testsuite"
		./out/bld/$testsuite
	done
}

package() {
	cd ./out/bld

	mkdir -p "$pkgdir"/usr/bin

	# binaries
	install -Dm755 chrome "$pkgdir"/usr/lib/$pkgname/chromium
	# backward compat symlink
	ln -sfv chromium "$pkgdir"/usr/lib/$pkgname/chrome
	install -Dm4755 chrome_sandbox "$pkgdir"/usr/lib/$pkgname/chrome-sandbox
	install -Dm755 chrome_crashpad_handler -t "$pkgdir"/usr/lib/$pkgname/

	# qt5
	install -Dm755 libqt5_shim.so -t "$pkgdir"/usr/lib/$pkgname/

	# chromedriver
	install -Dm755 chromedriver.unstripped "$pkgdir"/usr/lib/$pkgname/chromedriver
	ln -sfv ../lib/$pkgname/chromedriver "$pkgdir"/usr/bin/chromedriver

	# resources
	install -Dm644 snapshot_blob.bin -t "$pkgdir"/usr/lib/$pkgname/
	install -Dm644 v8_context_snapshot.bin -t "$pkgdir"/usr/lib/$pkgname/
	if [ -f icudtl.dat ]; then
		install -Dm644 icudtl.dat -t "$pkgdir"/usr/lib/$pkgname/
	fi

	install -Dm755 xdg-mime -t "$pkgdir"/usr/lib/$pkgname/
	install -Dm755 xdg-settings -t "$pkgdir"/usr/lib/$pkgname/

	# Vulkan
	install -Dm755 libvulkan.so.1 -t "$pkgdir"/usr/lib/$pkgname/

	# Angle
	install -Dm755 libEGL.so -t "$pkgdir"/usr/lib/$pkgname/
	install -Dm755 libGLESv2.so -t "$pkgdir"/usr/lib/$pkgname/

	install -Dm755 "$srcdir"/chromium-launcher.sh \
		-t "$pkgdir"/usr/lib/$pkgname/

	cp -a MEIPreload "$pkgdir"/usr/lib/$pkgname/

	# It is important that we name the target "chromium-browser",
	# xdg-utils expect it; bug https://bugs.gentoo.org/355517
	ln -sfv ../lib/$pkgname/chromium-launcher.sh "$pkgdir"/usr/bin/chromium-browser
	ln -sfv chromium-browser "$pkgdir"/usr/bin/chromium

	install -Dm644 "$srcdir"/chromium.conf \
		-t "$pkgdir"/etc/chromium/

	for pak in locales/*.pak *.pak; do
		install -Dm644 "$pak" "$pkgdir"/usr/lib/$pkgname/"$pak"
	done

	install -Dm755 libvk_swiftshader.so \
		-t "$pkgdir"/usr/lib/$pkgname/
	install -Dm755 vk_swiftshader_icd.json \
		-t "$pkgdir"/usr/lib/$pkgname/

	cd "$builddir"

	for size in 24 48 64 128 256; do
		install -Dm644 "chrome/app/theme/chromium/product_logo_$size.png" \
			"$pkgdir/usr/share/icons/hicolor/${size}x$size/apps/chromium.png"
	done

	for size in 16 32; do
		install -Dm644 "chrome/app/theme/default_100_percent/chromium/product_logo_$size.png" \
			"$pkgdir/usr/share/icons/hicolor/${size}x$size/apps/chromium.png"
	done

	sed -i \
		-e 's/@@MENUNAME@@/Chromium/g' \
		-e 's/@@PACKAGE@@/chromium/g' \
		-e 's/@@USR_BIN_SYMLINK_NAME@@/chromium-browser/g' \
		chrome/app/resources/manpage.1.in \
		chrome/installer/linux/common/desktop.template

	sed -ni \
		-e 's/chromium-browser\.desktop/chromium.desktop/' \
		-e '/<update_contact>/d' \
		-e '/<p>/N;/<p>\n.*\(We invite\|Chromium supports Vorbis\)/,/<\/p>/d' \
		-e '/^<?xml/,$p' \
		chrome/installer/linux/common/chromium-browser/chromium-browser.appdata.xml

	install -Dm644 chrome/installer/linux/common/desktop.template \
		"$pkgdir"/usr/share/applications/chromium.desktop
	install -Dm644 chrome/app/resources/manpage.1.in \
		"$pkgdir"/usr/share/man/man1/chromium.1
	install -Dm644 chrome/installer/linux/common/chromium-browser/chromium-browser.appdata.xml \
		"$pkgdir"/usr/share/metainfo/chromium.appdata.xml
}

qt5() {
	pkgdesc="chromium qt5 shim"

	amove usr/lib/$pkgname/libqt5_shim.so
}

chromedriver() {
	pkgdesc="WebDriver driver for the Chromium Browser"
	depends="$pkgname=$pkgver-r$pkgrel"

	amove usr/lib/$pkgname/chromedriver \
		usr/bin/chromedriver
}

lang() {
	pkgdesc="Languages for package $pkgname"
	install_if="$pkgname=$pkgver-r$pkgrel lang"

	# Default to en-us and provide everything else through the chromium-lang package
	amove usr/lib/$pkgname/locales/*.pak

	mkdir -p "$pkgdir"/usr/lib/$pkgname/locales
	mv "$subpkgdir"/usr/lib/$pkgname/locales/en-US.pak \
		"$pkgdir"/usr/lib/$pkgname/locales/
}

swiftshader() {
	pkgdesc="Chromium web browser: CPU-based implementation of the Vulkan graphics API"
	depends="$pkgname-angle=$pkgver-r$pkgrel"

	amove usr/lib/$pkgname/libvk_swiftshader.so \
		usr/lib/$pkgname/vk_swiftshader_icd.json
}

sha512sums="
a8fbc5a7e118c22e78230efc7c4a7aa34f1d43a96de51b8739eb1e4dfaa04cdcf208283e5688be3a653b2f4f58b09fec489752ac375c2493e8ce10a22d05f742  chromium-114.0.5735.198.tar.xz
d9813acb101c2b4e12062ac4e342cdb11d73429a47b6ac77e8c56f9fc9456beefc9ea2d0eedab82fb5a4426431e850609ef70c3df28dede5ed01533c5ea14b70  chromium-114.0.5735.198-testdata.tar.xz
bbc928e99ebcd4d953b982688b01526cb754bad018f67be9e777a4f8ac51cdd3e01374e5a63faf55b12e7cee0d52816c88062e012b5bcc4f9bb41f28d8e0b7f7  test_fonts-336e775eec536b2d785cc80eff6ac39051931286.tar.gz
1b16564f85a03f3eb934ec51289dc6159e2454202d40f48354f947d6ceffac8889e9eb4c0f4dfaafb3a15101566d54039f832bc9a8433c3c463e2d1dac2d2acc  chromium-launcher.sh
9cfcb41d69c5a515b6f9fe2a629579fa499e1f48eb58a0ce4ec8e5029d450bcafb6d963019aaac9a6838244bee9f9ba7fe5ef6146a0ca6b20fcda4ab7f059476  chromium.conf
2d8237a940ea691bd10b08315429677a587f7ef9692a0cca53bfd066eae82998a6c71f402a8669e9de39f94d7f3280745d1628ea6eac5d76ca7116844d4e0dac  google-api.keys
385d0fb4ff9b6a0254123ef182719591890f091d9fd922069f2249e6061856185eec98ca83887145bcc72f2643ab4e3c7f20effce4ff2bb88a2d99bdbb6831b6  add-some-typename-s-that-are-required-in-C-17.patch
29bb685e03356a77df5fd347cdf55194cc8b3265c421cc76e54d64edefc329dbcb052deb26b22e8f587ce68456876c071de1b7d258dd0fcc6ee66c875ec4a020  chromium-revert-drop-of-system-java.patch
fa291e941076146d0edd5b96c088240a44a6e0aca3dfc744929655607182d2dc47e6c35ecb419f7c623fcf7f26dc3c4dd924dbf5ed10c3b986283f5ef2f72573  chromium-use-alpine-target.patch
eacd8c7b8009a171c66b1156844ecff36d12e57c25a066219a1fbbd08cecce75a880130eaa71524bc296c634c6d1e02097f303a76f27375e46737e79b9c46d0b  disable-failing-tests.patch
1d1b6e6d3fa1d34db61c43c89d55981297c1d4e2aad7edb1aa93323913483ce497ed29ab3e91bd06ec45bc0f7a15efefdc95f16a648ffe08794a09fcadf49521  download-bubble-typename.patch
5fc5c012c1db6cf1ba82f38c6f3f4f5ca3a209e47ac708a74de379b018e0649b7694877c9571ef79002dde875ffc07b458a3355425f1c01867f362c66c2bc1bf  fc-cache-version.patch
9200f78bad70e95c648a5e8392d50642190600f655c6baa366ff6467ebad52d3b3f305dad58f3610da67136f4b723557653b174ec5c25be8d8737ee04d9ee09f  fix-missing-cstdint-include-musl.patch
c63dee5044353eb306a39ca1526158c0f003ab310ecb03d1c368dc2a979454590c84b8d3c15484517d5e66bb8add9b231da9abbadf2e50850abd72ac1345c4ab  fstatat-32bit.patch
33ee60863cc438ef57ffef92ba4cf67a856a5ffc16138bce241bcf87e47b15154aa86918e793c26f7ec4dc62a445257ad5673ed7001daf22c4043cf6cc57da7f  gdbinit.patch
8de65109ece27ea63bd469f2220c56b8c752ba0a50fdf390082a2d5ae74b8e010199126175569f6d5084270dd4e0571e68aec32c0bca8211a6699925b3a09124  import-version.patch
f09f96e655088d06de0d4cc6947cbd54217afeb447edbbfdcaee2f463c2c0e53046c6e19d086148c8c322a37de3379289636949ee1a0e6034502609691e2863d  libstdc++13.patch
0e991842e23a4b9133898125eeb39e45e3f86f886eef5d2f0d9a72ee143a3e124b3b4f60be94edd57ce4185bcd69704edb51f76d08fdb6207f5559a08dd41ab0  mman.patch
50c274a420bb8a7f14fcb56e40920dac8f708792a4520789b4987facea459bef88113d5a2b60fa8c57bee6e92bff3617d6b73fa305c8c44614c638971cffd440  musl-sandbox.patch
e7163ac5810ac85366cef2447412287c856e3d67c6b77f219a6e5a418b1965b98e449c409424ad0704a5bded9355dd0aec3dc4585918ce5a2ab36c079707afe2  musl-tid-caching.patch
92eb002718026611f5542362ad69b67f0a398ff71b3fca5c05d55cb5c6f9f29334e5e127bb4860cfaa3fba0f0d4c901e2b98808217e7dc02e254a64a5c9521aa  musl-v8-monotonic-pthread-cont_timedwait.patch
8cc774e8d84e434960222c0497ad8193ae35c0732f98d3282d5fd4b4930f914809eec97832c199517ca89ca6b9d1d011db5ce533c40c68ce5fa464609d131a23  no-execinfo.patch
b5479874d125ee95a311295f227f8881a83023ec34fded7a6160b3ae32ea3ba0f2b833a9fb264c57f3d22746b6d8b00bdc8eb2ff86c43c412d6d3b55ae15b16b  no-mallinfo.patch
e4c4e5bc6f828f9c883dd418c0ba01887949c29c311f76206a1ec29f620b0c0ba0452949dc2778a9c46ea066405857536964a36436a68eecf7da7952736333cf  no-res-ninit-nclose.patch
6dc4d8dc92e685dace62265a1ddb3aebc558aed54d20ff6d36b030be0c48d7e84662326c31363612492574d9a03c62653cdc21a60995b97dee1d75cae86a9f9b  no-sandbox-settls.patch
402c4c923b135a413c237d144b4820fdf6333f051bd11bb4a9635ebfd18c24ce766662cf74fc34cff5657d6004084e2dc40e7314728ef4f9da932ae84645ecff  pipewire-fcntl-call.patch
95bd9dd200658f4ca458e53c77a86da50104905db29b0241d701ecbee1573a7dcf14c409d62b7d01f8ee6cc3511dbb79677754b7145ca917c37894f5c853cfb9  pvalloc.patch
b7f45dfbb3ddd186514b0e45f0d6c170b2c46e4e09d633e8a86ec80ae31f386ed02ffa1a18db2c49e324653941b72f09ca71b2c7478e6ef04d3875ec1909554b  revert-llvm16-linker-flag.patch
86f612dd2b39602984a75b1b11c2ab8bc8cc6b4e78fae998570a777a6901ae45fdcdb22e46dd006dab703a0674e64c72cf8120af2dc5b9e78004f402c7e65358  quiche-array.patch
e48693e6b7aeebf69a5acbf80d9a35defe4c23835121dfeb58b051ac7c527e758a41004f4d193274fe1b01c0bfb1dbc77b09cb6a404a3fdee507a2918afb0edb  temp-failure-retry.patch
ce6991ca3396d61fda9d2755bc6bfaeb14414fd9353bda960001b027af9ce4cd61c894c9700e4ec13a992a46e44ee87dba42c3251afc0e86e727354f349dc9d0  webauthn-variant.patch
"
