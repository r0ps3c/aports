Patch-Source: https://sources.debian.org/data/main/s/slrn/1.0.3%2Bdfsg-7/debian/patches/fix-c99-compatibility.patch
--
Origin: upstream, https://github.com/jedsoft/slrn/pull/1/commits/f550d0ab9e1cd3cfe844022435c3d98af3c18441
From: Florian Weimer <fweimer@redhat.com>
Date: Sat, 4 Feb 2023 15:04:36 +0100
Subject: [PATCH] autoconf: Fix C99 compatibility issue in the VA_COPY checks

The exit function is called without including <stdlib.h>, resulting
in an implicit function declarations.  Future compilers will not
support implicit function declarations by default.  This will lead
to build failures.
---
 autoconf/configure.ac | 3 +++
 configure             | 3 +++
 2 files changed, 6 insertions(+)

--- slrn-1.0.3+dfsg.orig/autoconf/configure.ac
+++ slrn-1.0.3+dfsg/autoconf/configure.ac
@@ -399,6 +399,7 @@ AC_MSG_CHECKING(for an implementation of
 AC_CACHE_VAL(slrn_cv_va_copy,[
 	AC_RUN_IFELSE([AC_LANG_SOURCE([[
 	#include <stdarg.h>
+	#include <stdlib.h>
 	void f (int i, ...) {
 	va_list args1, args2;
 	va_start (args1, i);
@@ -419,6 +420,7 @@ AC_MSG_CHECKING(for an implementation of
 AC_CACHE_VAL(slrn_cv___va_copy,[
 	AC_RUN_IFELSE([AC_LANG_SOURCE([[
 	#include <stdarg.h>
+	#include <stdlib.h>
 	void f (int i, ...) {
 	va_list args1, args2;
 	va_start (args1, i);
@@ -439,6 +441,7 @@ AC_MSG_CHECKING(whether va_lists can be
 AC_CACHE_VAL(slrn_cv_va_val_copy,[
 	AC_RUN_IFELSE([AC_LANG_SOURCE([[
 	#include <stdarg.h>
+	#include <stdlib.h>
 	void f (int i, ...) {
 	va_list args1, args2;
 	va_start (args1, i);
--- slrn-1.0.3+dfsg.orig/configure
+++ slrn-1.0.3+dfsg/configure
@@ -8307,6 +8307,7 @@ else
 /* end confdefs.h.  */
 
 	#include <stdarg.h>
+	#include <stdlib.h>
 	void f (int i, ...) {
 	va_list args1, args2;
 	va_start (args1, i);
@@ -8352,6 +8353,7 @@ else
 /* end confdefs.h.  */
 
 	#include <stdarg.h>
+	#include <stdlib.h>
 	void f (int i, ...) {
 	va_list args1, args2;
 	va_start (args1, i);
@@ -8397,6 +8399,7 @@ else
 /* end confdefs.h.  */
 
 	#include <stdarg.h>
+	#include <stdlib.h>
 	void f (int i, ...) {
 	va_list args1, args2;
 	va_start (args1, i);
