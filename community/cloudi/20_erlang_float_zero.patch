Extracted from https://github.com/CloudI/CloudI/commit/453366eeaa7731ad5a0ae696a96692874f71c036
and https://github.com/CloudI/CloudI/commit/11f2b2ec14db1272b400ad0f07e881700a07a636


diff --git a/src/lib/cloudi_core/src/cloudi_math.erl b/src/lib/cloudi_core/src/cloudi_math.erl
index 98bf28eea..183ab953b 100644
--- a/src/lib/cloudi_core/src/cloudi_math.erl
+++ b/src/lib/cloudi_core/src/cloudi_math.erl
@@ -8,7 +8,7 @@
 %%%
 %%% MIT License
 %%%
-%%% Copyright (c) 2022 Michael Truog <mjtruog at protonmail dot com>
+%%% Copyright (c) 2022-2023 Michael Truog <mjtruog at protonmail dot com>
 %%%
 %%% Permission is hereby granted, free of charge, to any person obtaining a
 %%% copy of this software and associated documentation files (the "Software"),
@@ -29,8 +29,8 @@
 %%% DEALINGS IN THE SOFTWARE.
 %%%
 %%% @author Michael Truog <mjtruog at protonmail dot com>
-%%% @copyright 2022 Michael Truog
-%%% @version 2.0.5 {@date} {@time}
+%%% @copyright 2022-2023 Michael Truog
+%%% @version 2.0.7 {@date} {@time}
 %%%------------------------------------------------------------------------
 
 -module(cloudi_math).
@@ -73,7 +73,8 @@ erfcinv(X)
 -spec erfinv(X :: float()) ->
     float().
 
-erfinv(0.0) ->
+erfinv(X)
+    when X == 0.0 ->
     0.0;
 erfinv(X)
     when X > -1.0, X < 1.0 ->
diff --git a/src/lib/cloudi_core/src/cloudi_statistics.erl b/src/lib/cloudi_core/src/cloudi_statistics.erl
index ff099fc7d..b2393ef81 100644
--- a/src/lib/cloudi_core/src/cloudi_statistics.erl
+++ b/src/lib/cloudi_core/src/cloudi_statistics.erl
@@ -20,7 +20,7 @@
 %%%
 %%% MIT License
 %%%
-%%% Copyright (c) 2022 Michael Truog <mjtruog at protonmail dot com>
+%%% Copyright (c) 2022-2023 Michael Truog <mjtruog at protonmail dot com>
 %%%
 %%% Permission is hereby granted, free of charge, to any person obtaining a
 %%% copy of this software and associated documentation files (the "Software"),
@@ -41,8 +41,8 @@
 %%% DEALINGS IN THE SOFTWARE.
 %%%
 %%% @author Michael Truog <mjtruog at protonmail dot com>
-%%% @copyright 2022 Michael Truog
-%%% @version 2.0.5 {@date} {@time}
+%%% @copyright 2022-2023 Michael Truog
+%%% @version 2.0.7 {@date} {@time}
 %%%------------------------------------------------------------------------
 
 -module(cloudi_statistics).
@@ -627,12 +627,15 @@ gamma_kurtosis(Skewness) ->
     X = 2 / Skewness,
     6 / (X * X).
 
-log_normal_kurtosis(0.0) ->
-    0.0;
 log_normal_kurtosis(Skewness) ->
-    A = log_normal_skewness_a(Skewness),
-    A2 = A * A,
-    A2 * A2 + 2 * A2 * A + 3 * A2 - 6.
+    if
+        Skewness /= 0.0 ->
+            A = log_normal_skewness_a(Skewness),
+            A2 = A * A,
+            A2 * A2 + 2 * A2 * A + 3 * A2 - 6;
+        true ->
+            0.0
+    end.
 
 log_normal_skewness_a(Skewness) ->
     % use Halley's method to determine A based on Log-normal skewness
diff --git a/src/lib/cloudi_service_request_rate/src/cloudi_service_request_rate.erl b/src/lib/cloudi_service_request_rate/src/cloudi_service_request_rate.erl
index 93bbe4e1e..dc655b2e7 100644
--- a/src/lib/cloudi_service_request_rate/src/cloudi_service_request_rate.erl
+++ b/src/lib/cloudi_service_request_rate/src/cloudi_service_request_rate.erl
@@ -8,7 +8,7 @@
 %%%
 %%% MIT License
 %%%
-%%% Copyright (c) 2014-2022 Michael Truog <mjtruog at protonmail dot com>
+%%% Copyright (c) 2014-2023 Michael Truog <mjtruog at protonmail dot com>
 %%%
 %%% Permission is hereby granted, free of charge, to any person obtaining a
 %%% copy of this software and associated documentation files (the "Software"),
@@ -29,8 +29,8 @@
 %%% DEALINGS IN THE SOFTWARE.
 %%%
 %%% @author Michael Truog <mjtruog at protonmail dot com>
-%%% @copyright 2014-2022 Michael Truog
-%%% @version 2.0.5 {@date} {@time}
+%%% @copyright 2014-2023 Michael Truog
+%%% @version 2.0.7 {@date} {@time}
 %%%------------------------------------------------------------------------
 
 -module(cloudi_service_request_rate).
@@ -502,7 +502,7 @@ process_results_data([],
 process_results_data([{_ProcessIndex,
                        RequestFail,
                        0,
-                       0.0,
+                       RequestRateCompleteAvg,
                        undefined,
                        undefined,
                        RequestLatency,
@@ -513,7 +513,8 @@ process_results_data([{_ProcessIndex,
                      RequestRateCompleteMinSum,
                      RequestRateCompleteMaxSum,
                      RequestLatencyOld,
-                     RequestLatencyPercentileOld) ->
+                     RequestLatencyPercentileOld)
+    when RequestRateCompleteAvg == 0.0 ->
     process_results_data(Results,
                          RequestFailSum + RequestFail,
                          false,
