From c20ee373a337243869187fa56865ce3e34eeca88 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Pablo=20Correa=20G=C3=B3mez?= <ablocorrea@hotmail.com>
Date: Wed, 18 Sep 2024 20:10:12 +0200
Subject: [PATCH 1/4] plugins: don't make core plugins depend on non-core ones

This is mostly useful for OOT plugins or siguations where some of
the non-core plugins do not build, but tests still need to run. This
is, however, most likely a sensible split.

packagekit already has a RUN_BEFORE on generic-updates
---
 plugins/core/gs-plugin-appstream.c        | 3 ---
 plugins/core/gs-plugin-generic-updates.c  | 2 --
 plugins/dpkg/gs-plugin-dpkg.c             | 4 ++++
 plugins/rpm-ostree/gs-plugin-rpm-ostree.c | 3 +++
 4 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/plugins/core/gs-plugin-appstream.c b/plugins/core/gs-plugin-appstream.c
index 1e270ffae..fce8952a1 100644
--- a/plugins/core/gs-plugin-appstream.c
+++ b/plugins/core/gs-plugin-appstream.c
@@ -81,9 +81,6 @@ gs_plugin_appstream_init (GsPluginAppstream *self)
 	 * one when something changes */
 	g_rw_lock_init (&self->silo_lock);
 
-	/* need package name */
-	gs_plugin_add_rule (GS_PLUGIN (self), GS_PLUGIN_RULE_RUN_AFTER, "dpkg");
-
 	/* require settings */
 	self->settings = g_settings_new ("org.gnome.software");
 
diff --git a/plugins/core/gs-plugin-generic-updates.c b/plugins/core/gs-plugin-generic-updates.c
index f76af55d5..1ef6d7daa 100644
--- a/plugins/core/gs-plugin-generic-updates.c
+++ b/plugins/core/gs-plugin-generic-updates.c
@@ -26,8 +26,6 @@ gs_plugin_generic_updates_init (GsPluginGenericUpdates *self)
 	GsPlugin *plugin = GS_PLUGIN (self);
 
 	gs_plugin_add_rule (plugin, GS_PLUGIN_RULE_RUN_AFTER, "appstream");
-	gs_plugin_add_rule (plugin, GS_PLUGIN_RULE_RUN_AFTER, "packagekit");
-	gs_plugin_add_rule (plugin, GS_PLUGIN_RULE_RUN_AFTER, "rpm-ostree");
 	gs_plugin_add_rule (plugin, GS_PLUGIN_RULE_RUN_BEFORE, "icons");
 }
 
diff --git a/plugins/dpkg/gs-plugin-dpkg.c b/plugins/dpkg/gs-plugin-dpkg.c
index ea3af369b..fbcb1e2ac 100644
--- a/plugins/dpkg/gs-plugin-dpkg.c
+++ b/plugins/dpkg/gs-plugin-dpkg.c
@@ -31,7 +31,11 @@ gs_plugin_dpkg_init (GsPluginDpkg *self)
 	if (!g_file_test (DPKG_DEB_BINARY, G_FILE_TEST_EXISTS)) {
 		g_debug ("disabling itself as no %s available", DPKG_DEB_BINARY);
 		gs_plugin_set_enabled (plugin, FALSE);
+		return;
 	}
+
+	/* need package name */
+	gs_plugin_add_rule (plugin, GS_PLUGIN_RULE_RUN_BEFORE, "appstream");
 }
 
 static void get_content_type_cb (GObject      *source_object,
diff --git a/plugins/rpm-ostree/gs-plugin-rpm-ostree.c b/plugins/rpm-ostree/gs-plugin-rpm-ostree.c
index 9271c5398..669bd7fdb 100644
--- a/plugins/rpm-ostree/gs-plugin-rpm-ostree.c
+++ b/plugins/rpm-ostree/gs-plugin-rpm-ostree.c
@@ -163,6 +163,9 @@ gs_plugin_rpm_ostree_init (GsPluginRpmOstree *self)
 
 	/* need pkgname */
 	gs_plugin_add_rule (GS_PLUGIN (self), GS_PLUGIN_RULE_RUN_AFTER, "appstream");
+
+	/* generic updates happen after rpm-ostree updates */
+	gs_plugin_add_rule (GS_PLUGIN (self), GS_PLUGIN_RULE_RUN_BEFORE, "generic-updates");
 }
 
 static void
-- 
2.46.1

