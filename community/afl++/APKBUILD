# Contributor: Marian <marian.buschsieweke@posteo.net>
# Maintainer: Marian <marian.buschsieweke@posteo.net>
pkgname=afl++
pkgver=4.31c
pkgrel=0
pkgdesc="Fuzzer relying on genetic algorithms instead of brute force"
url="https://aflplus.plus/"
# x86: test failures
# s390x: blocked by lld
arch="all !x86 !s390x"
license="Apache-2.0"
# afl-cmin requires stat
_llvmver=19
# llvm LTO test fails on riscv64
# https://github.com/AFLplusplus/AFLplusplus/issues/2064
case "$CARCH" in
	riscv64) options="$options !check";;
esac
depends="
	clang$_llvmver
	compiler-rt
	lld$_llvmver
	llvm$_llvmver
	python3
	"
# install -T
makedepends="
	bash
	clang$_llvmver-dev
	coreutils
	gmp-dev
	grep
	llvm$_llvmver-dev
	python3-dev
	"
checkdepends="
	cmocka-dev
	"
subpackages="
	$pkgname-doc
	afl++-tools
	"
provides="
	afl=$pkgver-r$pkgrel
	afl-clang=$pkgver-r$pkgrel
	afl-gcc=$pkgver-r$pkgrel
	"
source="
	$pkgname-$pkgver.tar.gz::https://github.com/AFLplusplus/AFLplusplus/archive/refs/tags/v$pkgver.tar.gz

	fix-compilation-classify_counts_mem.patch
	extend-64bit-detection.patch
	"
builddir="$srcdir/AFLplusplus-$pkgver"

build() {
	export PATH="$PATH:/usr/lib/llvm$_llvmver/bin"
	export NO_NYX=1
	export AFL_NO_X86=1
	export LLVM_LTO=1
	make PREFIX=/usr all
}

check() {
	# Unset our CFLAGS/CXXFLAGS for the tests since these may
	# interact in unexpected ways with afl-cc instrumentation.
	CFLAGS= CXXFLAGS= make AFL_NO_X86=1 test
}

package() {
	make AFL_NO_X86=1 PREFIX=/usr DESTDIR="$pkgdir" install

	# Test cases contain x86 binaries that cause trouble with strip on non-x86
	# architectures, so just drop the test cases here.
	rm -rf "$pkgdir"/usr/share/afl/testcases/

	# afl-cmin.bash is the same as afl-cmin, but implemented differently making
	# use of bash features. No need for the same functionality twice.
	rm "$pkgdir"/usr/bin/afl-cmin.bash
}

tools() {
	pkgdesc="AFL++ tools and utilities"
	depends="
		afl++
		coreutils
		grep
		"

	amove usr/bin/afl-cmin
	amove usr/bin/afl-plot
	amove usr/bin/afl-showmap
	amove usr/bin/afl-tmin
}

sha512sums="
dff17d0c1246d84950375f3946454de9f6bbe85ff7d1b42b896af121ffe375e8998756b6c64690bb021186e363e62c49e24ef54526469e0671a3dd083d695fe7  afl++-4.31c.tar.gz
2fae33ae1e67a6aacaa010126d12e6da45408b321fbfccfc101332a7baa330458aaa7b06cf31343bfabba4a7bb658d1d0c78322b1770aa9a58c680da7309be78  fix-compilation-classify_counts_mem.patch
1b6012eae563d4993d64fb4419cd6b784e8a856769ac4f3eca95bf396f6abac956b0ea09cd767360209cdfbe87a30d3dcdb223a7c469e0d77954e88cf6ae2b2f  extend-64bit-detection.patch
"
