Add missing 32 bit version of classify_counts_mem() and backport parts of
https://github.com/AFLplusplus/AFLplusplus/commit/47954cd04c3e212532d485e290611a98e63186af
to fix compilation.
--- a/include/coverage-32.h	2025-02-10 13:42:28.000000000 +0100
+++ b/include/coverage-32.h	2025-03-14 07:54:43.526862073 +0100
@@ -1,6 +1,8 @@
 #include "config.h"
 #include "types.h"
 
+#define _AFL_INTSIZEVAR u32
+
 u32 skim(const u32 *virgin, const u32 *current, const u32 *current_end);
 u32 classify_word(u32 word);
 
@@ -17,6 +19,22 @@ inline u32 classify_word(u32 word) {
 
 }
 
+inline static void classify_counts_mem(u32 *mem, u32 size) {
+
+  u32 i = (size >> 2);
+
+  while (i--) {
+
+    /* Optimize for sparse bitmaps. */
+
+    if (unlikely(*mem)) { *mem = classify_word(*mem); }
+
+    mem++;
+
+  }
+
+}
+
 void simplify_trace(afl_state_t *afl, u8 *bytes) {
 
   u32 *mem = (u32 *)bytes;
diff --color -rupN a/include/coverage-64.h b/include/coverage-64.h
--- a/include/coverage-64.h	2025-02-10 13:42:28.000000000 +0100
+++ b/include/coverage-64.h	2025-03-14 07:54:57.193363166 +0100
@@ -5,6 +5,8 @@
   #include <immintrin.h>
 #endif
 
+#define _AFL_INTSIZEVAR u64
+
 u32 skim(const u64 *virgin, const u64 *current, const u64 *current_end);
 u64 classify_word(u64 word);
 
diff --color -rupN a/src/afl-fuzz-bitmap.c b/src/afl-fuzz-bitmap.c
--- a/src/afl-fuzz-bitmap.c	2025-02-10 13:42:28.000000000 +0100
+++ b/src/afl-fuzz-bitmap.c	2025-03-14 07:55:26.683005890 +0100
@@ -538,7 +538,7 @@ u8 __attribute__((hot)) save_if_interest
 
       memcpy(afl->san_fsrvs[0].trace_bits, afl->fsrv.trace_bits,
              afl->fsrv.map_size);
-      classify_counts_mem((u64 *)afl->san_fsrvs[0].trace_bits,
+      classify_counts_mem((_AFL_INTSIZEVAR *)afl->san_fsrvs[0].trace_bits,
                           afl->fsrv.map_size);
       simplify_trace(afl, afl->san_fsrvs[0].trace_bits);
 
