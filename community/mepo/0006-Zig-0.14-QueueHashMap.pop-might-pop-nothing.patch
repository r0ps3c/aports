From 5f687441a6f2e9ff6b639d5d000176a17cd19f6f Mon Sep 17 00:00:00 2001
From: LN Liberda <lauren@selfisekai.rocks>
Date: Sun, 9 Mar 2025 21:26:47 +0100
Subject: [PATCH] Zig 0.14: QueueHashMap.pop() might pop nothing

---
 src/TileCache.zig                  | 18 ++++++++++++------
 src/datastructure/QueueHashMap.zig |  8 +++++---
 2 files changed, 17 insertions(+), 9 deletions(-)

diff --git a/src/TileCache.zig b/src/TileCache.zig
index 4744a48..3bb969e 100644
--- a/src/TileCache.zig
+++ b/src/TileCache.zig
@@ -82,15 +82,21 @@ pub fn download_loop(tile_cache: *Self, graphical_mode: bool) !void {
         }
 
         // 2. Transfer from UI LIFO into transfers
-        while (tile_cache.queue_lifo_ui.count() > 0 and tile_cache.transfer_map.count() < p.get(p.pref.tile_cache_max_n_transfers).u) {
-            const coords = tile_cache.queue_lifo_ui.pop();
-            try tile_cache.curl_add_to_multi_and_register_transfer(coords.key, true);
+        while (tile_cache.transfer_map.count() < p.get(p.pref.tile_cache_max_n_transfers).u) {
+            if (tile_cache.queue_lifo_ui.pop()) |coords| {
+                try tile_cache.curl_add_to_multi_and_register_transfer(coords.key, true);
+            } else {
+                break;
+            }
         }
 
         // 3. Transfer from BG LIFO into transfers
-        while (tile_cache.queue_lifo_bg.count() > 0 and tile_cache.transfer_map.count() < p.get(p.pref.tile_cache_max_n_transfers).u) {
-            const coords = tile_cache.queue_lifo_bg.pop();
-            try tile_cache.curl_add_to_multi_and_register_transfer(coords.key, false);
+        while (tile_cache.transfer_map.count() < p.get(p.pref.tile_cache_max_n_transfers).u) {
+            if (tile_cache.queue_lifo_bg.pop()) |coords| {
+                try tile_cache.curl_add_to_multi_and_register_transfer(coords.key, false);
+            } else {
+                break;
+            }
         }
 
         // 4. Print status message if non graphical
diff --git a/src/datastructure/QueueHashMap.zig b/src/datastructure/QueueHashMap.zig
index 9cb7996..103fa63 100644
--- a/src/datastructure/QueueHashMap.zig
+++ b/src/datastructure/QueueHashMap.zig
@@ -35,12 +35,14 @@ pub fn QueueHashMap(comptime key_type: type, comptime metadata_type: type) type
             return self.array_hash_map.getPtr(key);
         }
 
-        pub fn pop(self: *Self) struct { key: key_type, value: metadata_type } {
+        pub fn pop(self: *Self) ?struct { key: key_type, value: metadata_type } {
             self.mutex.lock();
             defer self.mutex.unlock();
 
-            const popped = self.array_hash_map.pop();
-            return .{ .key = popped.key, .value = popped.value };
+            if (self.array_hash_map.pop()) |popped| {
+                return .{ .key = popped.key, .value = popped.value };
+            }
+            return null;
         }
 
         pub fn getIndex(self: *Self, key: key_type) ?usize {
