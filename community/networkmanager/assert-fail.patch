the LSB states __assert_fail is:
const char*, const char*, unsigned int, const char*
https://refspecs.linuxbase.org/LSB_5.0.0/LSB-Core-generic/LSB-Core-generic/baselib---assert-fail-1.html

musl uses a signed int instead. however, this is ok:
https://www.openwall.com/lists/musl/2019/03/04/6

nevertheless, since the application redefines __assert_fail, we have to make
the types match. (not upstreamable as the opposite breaks glibc)
diff --git a/src/libnm-std-aux/nm-std-aux.h b/src/libnm-std-aux/nm-std-aux.h
index e556aa4..0756a7c 100644
--- a/src/libnm-std-aux/nm-std-aux.h
+++ b/src/libnm-std-aux/nm-std-aux.h
@@ -230,7 +230,7 @@ typedef uint64_t _nm_bitwise nm_be64_t;
 _nm_noreturn static inline void
 _nm_assert_fail_internal(const char  *assertion,
                          const char  *file,
-                         unsigned int line,
+                         int line,
                          const char  *function)
 {
     __assert_fail("<dropped>", file, line, "<unknown-fcn>");
