# Contributor: SÃ¶ren Tempel <soeren+alpine@soeren-tempel.net>
# Contributor: Eric Timmons <etimmons@alum.mit.edu>
# Contributor: Will Sinatra <wpsinatra@gmail.com>
# Maintainer: Celeste <cielesti@protonmail.com>
maintainer="Celeste <cielesti@protonmail.com>"
pkgname=sbcl-stage0
pkgver=2.5.0
pkgrel=0
pkgdesc="Steel Bank Common Lisp (for bootstrapping)"
url="https://www.sbcl.org/"
arch="all !ppc64le !s390x !riscv64 !loongarch64"
license="custom"
makedepends="linux-headers"
source="sbcl-$pkgver.tar.bz2::https://prdownloads.sourceforge.net/sbcl/sbcl-$pkgver-source.tar.bz2
	xperfecthash30-missing-entries-x86.patch
	"
builddir="$srcdir/sbcl-$pkgver"
options="!check" # stage0 compiler

# sbcl can be built from scratch with ccl, clisp, and ecl,
# but only ecl is enabled on all architectures. ccl is
# much faster though, so use it where it is available.
case "$CARCH" in
x86_64)
	makedepends="$makedepends ccl"
	_bootstrap_cl="ccl"
	;;
*)
	makedepends="$makedepends ecl-dev"
	_bootstrap_cl="ecl"
	;;
esac

# As sbcl can be boostrapped with itself, both community/sbcl
# and sbcl-stage0 provide sbcl-bootstrap, -stage0 only really
# comes into the picture when creating Alpine stable releases.
# On Alpine edge, community/sbcl builds itself through this
# virtual package, which it provides at a higher priority.
provides="sbcl-bootstrap=$pkgver"
provider_priority=1 # lowest

build() {
	# sb-simd is only built on x86_64 for now,
	# and is not needed for bootstrapping sbcl.
	./make.sh "$_bootstrap_cl" \
		--prefix=/usr \
		--without-sb-simd
}

package() {
	# omit docs for stage0 compiler
	BUILD_ROOT="$pkgdir" \
	MAN_DIR="/.omit" \
	INFO_DIR="/.omit" \
	DOC_DIR="/.omit" \
		./install.sh
}

sha512sums="
78aa874fc52cbde3f47ce07b2d847d9cd665df5ac5a3bb4682e5afca696bdb223347184aacd27e0b927ebcfb3bdbcd449c57444c906cf44d44a4d6dfa19fc12a  sbcl-2.5.0.tar.bz2
3a2ef4d3f3129372d15a575ede7e1691964890fe27709dd89724f962263f1438880bce0753582b97779d3744dd7856174abe4732f2ffb89204f96a5ab3871592  xperfecthash30-missing-entries-x86.patch
"
