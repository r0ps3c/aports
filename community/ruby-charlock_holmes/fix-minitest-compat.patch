--- a/test/converter_test.rb
+++ b/test/converter_test.rb
@@ -1,7 +1,7 @@
 # encoding: utf-8
 require File.expand_path("../helper", __FILE__)
 
-class ConverterTest < MiniTest::Test
+class ConverterTest < Minitest::Test
   def test_convert_ascii_from_iso859_1_to_utf16_and_back
     input = 'test'
 
--- a/test/encoding_detector_test.rb
+++ b/test/encoding_detector_test.rb
@@ -1,7 +1,7 @@
 # encoding: utf-8
 require File.expand_path("../helper", __FILE__)
 
-class EncodingDetectorTest < MiniTest::Test
+class EncodingDetectorTest < Minitest::Test
   def setup
     @detector = CharlockHolmes::EncodingDetector.new
   end
--- a/test/helper.rb
+++ b/test/helper.rb
@@ -12,7 +12,7 @@
   # We're on Minitest 5+. Nothing to do here.
 else
   # Minitest 4 doesn't have Minitest::Test yet.
-  Minitest::Test = MiniTest::Unit::TestCase
+  Minitest::Test = Minitest::Unit::TestCase
 end
 
 def fixture(name)
--- a/test/string_methods_test.rb
+++ b/test/string_methods_test.rb
@@ -1,7 +1,7 @@
 require File.expand_path("../helper", __FILE__)
 require 'charlock_holmes/string'
 
-class StringMethodsTest < MiniTest::Test
+class StringMethodsTest < Minitest::Test
   def test_adds_detect_encoding_method
     str = 'test'
     str.respond_to? :detect_encoding
--- a/test/transliterator_test.rb
+++ b/test/transliterator_test.rb
@@ -1,7 +1,7 @@
 # encoding: utf-8
 require File.expand_path("../helper", __FILE__)
 
-class TransliteratorTest < MiniTest::Test
+class TransliteratorTest < Minitest::Test
   DONT_CONVERT = [
     "Vitrum edere possum; mihi non nocet.", # Latin
     "Je puis mangier del voirre. Ne me nuit.", # Old French
