Patch-Source: https://github.com/graygnuorg/pound/commit/4604c80f33d312f1bdeeb9ae3914d488131780bd
--
From 4604c80f33d312f1bdeeb9ae3914d488131780bd Mon Sep 17 00:00:00 2001
From: Sergey Poznyakoff <gray@gnu.org>
Date: Wed, 19 Feb 2025 09:02:40 +0200
Subject: [PATCH] Fix c23 compatibility

* src/pound.h (struct _service_cond): Rename bool to boolean.
All uses changed.
---
 src/config.c | 16 ++++++++--------
 src/http.c   |  8 ++++----
 src/pound.h  |  6 +++---
 3 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/src/config.c b/src/config.c
index 980531d..6f60a09 100644
--- a/src/config.c
+++ b/src/config.c
@@ -1130,7 +1130,7 @@ service_cond_append (SERVICE_COND *cond, int type)
   assert (cond->type == COND_BOOL);
   XZALLOC (sc);
   service_cond_init (sc, type);
-  SLIST_PUSH (&cond->bool.head, sc, next);
+  SLIST_PUSH (&cond->boolean.head, sc, next);
 
   return sc;
 }
@@ -1394,7 +1394,7 @@ parse_cond_matcher_0 (SERVICE_COND *top_cond,
 	}
 
       cond = service_cond_append (top_cond, COND_BOOL);
-      cond->bool.op = BOOL_OR;
+      cond->boolean.op = BOOL_OR;
 
       switch (type)
 	{
@@ -1591,7 +1591,7 @@ parse_cond_head_deny_matcher (void *call_data, void *section_data)
 {
   POUND_DEFAULTS *dfl = section_data;
   SERVICE_COND *cond = service_cond_append (call_data, COND_BOOL);
-  cond->bool.op = BOOL_NOT;
+  cond->boolean.op = BOOL_NOT;
   return parse_cond_matcher (cond, COND_HDR, dfl->re_type, dfl->re_type,
 			     GENPAT_MULTILINE | GENPAT_ICASE,
 			     NULL);
@@ -1981,7 +1981,7 @@ static int
 parse_not_cond (void *call_data, void *section_data)
 {
   SERVICE_COND *cond = service_cond_append (call_data, COND_BOOL);
-  cond->bool.op = BOOL_NOT;
+  cond->boolean.op = BOOL_NOT;
   return cfgparser (negate_parsetab, cond, section_data,
 		    1,
 		    feature_is_set (FEATURE_WARN_DEPRECATED)
@@ -2008,7 +2008,7 @@ parse_cond (int op, SERVICE_COND *cond, void *section_data)
   SERVICE_COND *subcond = service_cond_append (cond, COND_BOOL);
   struct locus_range range;
 
-  subcond->bool.op = op;
+  subcond->boolean.op = op;
   return parser_loop (logcon_parsetab, subcond, section_data, &range);
 }
 
@@ -2381,7 +2381,7 @@ rewrite_rule_last_uncond (REWRITE_RULE_HEAD *head)
   if (!SLIST_EMPTY (head))
     {
       REWRITE_RULE *rw = SLIST_LAST (head);
-      if (rw->cond.type == COND_BOOL && SLIST_EMPTY (&rw->cond.bool.head))
+      if (rw->cond.type == COND_BOOL && SLIST_EMPTY (&rw->cond.boolean.head))
 	return rw;
     }
 
@@ -3316,7 +3316,7 @@ foreach_client_cert (SERVICE_COND *cond, int (*cb) (X509 *, void *), void *data)
     case COND_BOOL:
       {
 	SERVICE_COND *subcond;
-	SLIST_FOREACH (subcond, &cond->bool.head, next)
+	SLIST_FOREACH (subcond, &cond->boolean.head, next)
 	  {
 	    if ((rc = foreach_client_cert (subcond, cb, data)) != 0)
 	      break;
@@ -5073,7 +5073,7 @@ cond_pass_file_fixup (SERVICE_COND *cond)
     case COND_BOOL:
       {
 	SERVICE_COND *subcond;
-	SLIST_FOREACH (subcond, &cond->bool.head, next)
+	SLIST_FOREACH (subcond, &cond->boolean.head, next)
 	  {
 	    if ((rc = cond_pass_file_fixup (subcond)) != 0)
 	      break;
diff --git a/src/http.c b/src/http.c
index 363fa57..f7b022b 100644
--- a/src/http.c
+++ b/src/http.c
@@ -3142,9 +3142,9 @@ match_cond (SERVICE_COND *cond, POUND_HTTP *phttp,
       break;
 
     case COND_BOOL:
-      if (cond->bool.op == BOOL_NOT)
+      if (cond->boolean.op == BOOL_NOT)
 	{
-	  subcond = SLIST_FIRST (&cond->bool.head);
+	  subcond = SLIST_FIRST (&cond->boolean.head);
 	  if ((r = match_cond (subcond, phttp, req)) == -1)
 	    res = -1;
 	  else
@@ -3152,12 +3152,12 @@ match_cond (SERVICE_COND *cond, POUND_HTTP *phttp,
 	}
       else
 	{
-	  SLIST_FOREACH (subcond, &cond->bool.head, next)
+	  SLIST_FOREACH (subcond, &cond->boolean.head, next)
 	    {
 	      res = match_cond (subcond, phttp, req);
 	      if (res == -1)
 		break;
-	      if ((cond->bool.op == BOOL_AND) ? (res == 0) : (res == 1))
+	      if ((cond->boolean.op == BOOL_AND) ? (res == 0) : (res == 1))
 		break;
 	    }
 	}
diff --git a/src/pound.h b/src/pound.h
index 86d74af..2549a06 100644
--- a/src/pound.h
+++ b/src/pound.h
@@ -691,7 +691,7 @@ typedef struct _service_cond
   {
     ACL *acl;
     GENPAT re;
-    struct bool_service_cond bool;
+    struct bool_service_cond boolean;
     struct _service_cond *cond;
     struct string_match sm;  /* COND_QUERY_PARAM and COND_STRING_MATCH */
     struct pass_file pwfile; /* COND_BASIC_AUTH */
@@ -712,8 +712,8 @@ service_cond_init (SERVICE_COND *cond, int type)
       break;
 
     case COND_BOOL:
-      cond->bool.op = BOOL_AND;
-      SLIST_INIT (&cond->bool.head);
+      cond->boolean.op = BOOL_AND;
+      SLIST_INIT (&cond->boolean.head);
       break;
     }
 }
